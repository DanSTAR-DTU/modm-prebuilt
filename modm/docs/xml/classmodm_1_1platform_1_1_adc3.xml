<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1platform_1_1_adc3" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::Adc3</compoundname>
    <basecompoundref refid="classmodm_1_1_adc" prot="public" virt="non-virtual">modm::Adc</basecompoundref>
    <derivedcompoundref refid="classmodm_1_1platform_1_1_adc_interrupt3" prot="public" virt="non-virtual">modm::platform::AdcInterrupt3</derivedcompoundref>
    <includes refid="adc__3_8hpp" local="no">modm/platform/adc/adc_3.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078b" prot="public" static="no">
        <name>Channel</name>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078baa103e02952aa83a69bdb843834d4b406" prot="public">
          <name>Channel0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba6e7930d9e45cf08519eb5ea33285a737" prot="public">
          <name>Channel1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078baa41a549bb6e132a1807a57bb17a83211" prot="public">
          <name>Channel2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078bab7824fd5b5e65fc437a3a617797983cf" prot="public">
          <name>Channel3</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba5c7e076937da7c1e9a00f383432a05fd" prot="public">
          <name>Channel4</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba3f189c670b7f27cd75e266eade42d425" prot="public">
          <name>Channel5</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba3d5ba04e0b2fda24744b67b2d8548dbf" prot="public">
          <name>Channel6</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba8284862e267c6989622db69cb7e4602b" prot="public">
          <name>Channel7</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba2dc7b82a2fc46358874131fda684ca83" prot="public">
          <name>Channel8</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba21014e76aa400b1a4c99b796f1fc823f" prot="public">
          <name>Channel9</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba3d3e9bd3418756d8ad5fdc66727c5509" prot="public">
          <name>Channel10</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078bae2c58880495395bf04e3a8b5403173c4" prot="public">
          <name>Channel11</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba93db40d078050725b531b40d30baa3b5" prot="public">
          <name>Channel12</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078badb31e1e2e8cf0c8afb867b44a4d445a8" prot="public">
          <name>Channel13</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078baf43c3777bbb17330e62e69274d6f0500" prot="public">
          <name>Channel14</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba9ab8df0218f2e68918d0f07463e70ec7" prot="public">
          <name>Channel15</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba649b0d06ae7e4d8d806099afb60fdc1e" prot="public">
          <name>Channel16</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba20ab9b47cebc4d372b73f689b7c1c429" prot="public">
          <name>Channel17</name>
          <initializer>= 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078baaa7a405592a1a1f70482a7133bd4e424" prot="public">
          <name>Channel18</name>
          <initializer>= 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078baac25d36a97b0243a6344dfff7e390bcd" prot="public">
          <name>BatDiv2</name>
          <initializer>= 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078ba345b3ea3fe508e0716705a05b619c5b3" prot="public">
          <name>TemperatureSensor</name>
          <initializer>= 16</initializer>
          <briefdescription>
<para>Half the V_BAT voltage. </para>          </briefdescription>
          <detaileddescription>
<para>Measure the ambient temperature of the device. <verbatim>   @li Supported temperature range: -40 to 125 C
   @li Precision: +-1.5 C

   @see Reference manual (i.e. RM0090) for the formula for the
    calculation of the actual temperature.
   @note The TSVREFE bit must be set to enable the conversion of
    this internal channel.</verbatim> </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078baee534ac11d9a6aad6664a4a0ccd40648" prot="public">
          <name>InternalReference</name>
          <initializer>= 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Internal reference voltage. <verbatim>   @note The TSVREFE bit must be set to enable the conversion of
    this internal channel.</verbatim> </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Channels, which can be used with this ADC.</para><para>You can specify the channel by using a pin-name, like PIN_C0, an internal sensor, like TEMPERATURE_SENSOR or just the plain channel number, like CHANNEL_0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="58" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" bodystart="56" bodyend="99"/>
      </memberdef>
      <memberdef kind="enum" id="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cf" prot="public" static="no">
        <name>SampleTime</name>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cfa566b3c3160669652a57c5499de449d39" prot="public">
          <name>Cycles3</name>
          <initializer>= 0b000</initializer>
          <briefdescription>
<para>3 ADCCLK cycles </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cfa2500aa43f1a32532aafdd1132c19fbae" prot="public">
          <name>Cycles15</name>
          <initializer>= 0b001</initializer>
          <briefdescription>
<para>15 ADCCLK cycles </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cfaf0f7dc86377e0ac3ac709419a817a57b" prot="public">
          <name>Cycles28</name>
          <initializer>= 0b010</initializer>
          <briefdescription>
<para>28 ADCCLK cycles </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cfab840153c6a922c709e6e0f2ce1397d7b" prot="public">
          <name>Cycles56</name>
          <initializer>= 0b011</initializer>
          <briefdescription>
<para>56 ADCCLK cycles </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cfabfed02eab46aad846a310b075d4b5f15" prot="public">
          <name>Cycles84</name>
          <initializer>= 0b100</initializer>
          <briefdescription>
<para>84 ADCCLK cycles </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cfa02071b68128c5337acb6ec1b3fcb1704" prot="public">
          <name>Cycles112</name>
          <initializer>= 0b101</initializer>
          <briefdescription>
<para>112 ADCCLK cycles </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cfa9e612fe4954c9b4798fc6ecb4ecae6ca" prot="public">
          <name>Cycles144</name>
          <initializer>= 0b110</initializer>
          <briefdescription>
<para>144 ADCCLK cycles </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cfaa12282069226b28e9669a5df67d05850" prot="public">
          <name>Cycles480</name>
          <initializer>= 0b111</initializer>
          <briefdescription>
<para>480 ADCCLK cycles </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sampling time of the input voltage.</para><para>Total conversion time is T_con = Sampling time + 12 cycles </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="124" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" bodystart="122" bodyend="133"/>
      </memberdef>
      <memberdef kind="enum" id="classmodm_1_1platform_1_1_adc3_1a62e08deee4e0f7c4ba0b539164f09a80" prot="public" static="no">
        <name>Interrupt</name>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a62e08deee4e0f7c4ba0b539164f09a80a70402160707bec39bb8fe0cf68c79080" prot="public">
          <name>AnalogWatchdog</name>
          <initializer>= ADC_CR1_AWDIE</initializer>
          <briefdescription>
<para>Analog watchdog status bit is set. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a62e08deee4e0f7c4ba0b539164f09a80a7a965fe2d1303348db7923c5dd7fa47a" prot="public">
          <name>EndOfRegularConversion</name>
          <initializer>= ADC_CR1_EOCIE</initializer>
          <briefdescription>
<para>End of conversion of a regular group. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a62e08deee4e0f7c4ba0b539164f09a80ac02d932e9cb6790b6f7189f994a97c33" prot="public">
          <name>EndOfInjectedConversion</name>
          <initializer>= ADC_CR1_JEOCIE</initializer>
          <briefdescription>
<para>End of conversion of an injected group. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1a62e08deee4e0f7c4ba0b539164f09a80a9fa996dc830f67a458e46cf1463d5cd3" prot="public">
          <name>Overrun</name>
          <initializer>= ADC_CR1_OVRIE</initializer>
          <briefdescription>
<para>Overrun (if data are lost) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Possible interrupts.</para><para>An interrupt can be produced on the end of conversion for regular and injected groups, when the analog watchdog status bit is set and when the overrun status bit is set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="144" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" bodystart="142" bodyend="153"/>
      </memberdef>
      <memberdef kind="enum" id="classmodm_1_1platform_1_1_adc3_1af58a128178ccf7b4a3bf79fa4bca38bc" prot="public" static="no">
        <name>InterruptFlag</name>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1af58a128178ccf7b4a3bf79fa4bca38bca70402160707bec39bb8fe0cf68c79080" prot="public">
          <name>AnalogWatchdog</name>
          <initializer>= ADC_SR_AWD</initializer>
          <briefdescription>
<para>Analog watchdog status bit is set. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1af58a128178ccf7b4a3bf79fa4bca38bca7a965fe2d1303348db7923c5dd7fa47a" prot="public">
          <name>EndOfRegularConversion</name>
          <initializer>= ADC_SR_EOC</initializer>
          <briefdescription>
<para>End of conversion of a regular group. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1af58a128178ccf7b4a3bf79fa4bca38bcac02d932e9cb6790b6f7189f994a97c33" prot="public">
          <name>EndOfInjectedConversion</name>
          <initializer>= ADC_SR_JEOC</initializer>
          <briefdescription>
<para>End of conversion of an injected group. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1af58a128178ccf7b4a3bf79fa4bca38bca9fa996dc830f67a458e46cf1463d5cd3" prot="public">
          <name>Overrun</name>
          <initializer>= ADC_SR_OVR</initializer>
          <briefdescription>
<para>Overrun (if data are lost) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1af58a128178ccf7b4a3bf79fa4bca38bcab1c94ca2fbc3e78fc30069c8d0f01680" prot="public">
          <name>All</name>
          <initializer>= ADC_SR_AWD | ADC_SR_EOC | ADC_SR_JEOC | ADC_SR_OVR</initializer>
          <briefdescription>
<para>All InterruptFlags. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="158" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" bodystart="156" bodyend="169"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_adc3_1a8b26fbc0562e4fb88db3f7eab7f97462" prot="public" static="no">
        <type><ref refid="group__modm__architecture__register_1ga4bbc612ddbc2cf239e7c5baeabfa8a0d" kindref="member">modm::Flags32</ref>&lt; <ref refid="classmodm_1_1platform_1_1_adc3_1a62e08deee4e0f7c4ba0b539164f09a80" kindref="member">Interrupt</ref> &gt;</type>
        <definition>using modm::platform::Adc3::Interrupt_t =  modm::Flags32&lt; Interrupt &gt;</definition>
        <argsstring></argsstring>
        <name>Interrupt_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="154" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_adc3_1a39ac7e47e86a574f48ec7d4aa8b4eb64" prot="public" static="no">
        <type><ref refid="group__modm__architecture__register_1ga4bbc612ddbc2cf239e7c5baeabfa8a0d" kindref="member">modm::Flags32</ref>&lt; <ref refid="classmodm_1_1platform_1_1_adc3_1af58a128178ccf7b4a3bf79fa4bca38bc" kindref="member">InterruptFlag</ref> &gt;</type>
        <definition>using modm::platform::Adc3::InterruptFlag_t =  modm::Flags32&lt; InterruptFlag &gt;</definition>
        <argsstring></argsstring>
        <name>InterruptFlag_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="170" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classmodm_1_1platform_1_1_adc3_1aef950e72ef0d4e1bf87c16b198dceb0d" prot="private" static="no">
        <name>Prescaler</name>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1aef950e72ef0d4e1bf87c16b198dceb0daed4892f9a54cc655fb648cac223bc83b" prot="private">
          <name>Div2</name>
          <initializer>= 0b00</initializer>
          <briefdescription>
<para>PCLK2 divided by 2. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1aef950e72ef0d4e1bf87c16b198dceb0dad64dbe7aa107b2a36953d4d00618b565" prot="private">
          <name>Div4</name>
          <initializer>= 0b01</initializer>
          <briefdescription>
<para>PCLK2 divided by 4. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1aef950e72ef0d4e1bf87c16b198dceb0da5ecba2249e4fb4df7516a073dbf2fdb9" prot="private">
          <name>Div6</name>
          <initializer>= 0b10</initializer>
          <briefdescription>
<para>PCLK2 divided by 6. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_adc3_1aef950e72ef0d4e1bf87c16b198dceb0da6c2d2d32a5b43e70c8a188e98fa48517" prot="private">
          <name>Div8</name>
          <initializer>= 0b11</initializer>
          <briefdescription>
<para>PCLK2 divided by 8. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Programmable prescaler to divide the APB2 clock frequency, which is used for the analog circuitry (not the digital interface which is used for registers). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="109" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" bodystart="107" bodyend="114"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_adc3_1acaff7eb6323ae780ba39680e75923b0f" prot="public" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::Adc3::Resolution</definition>
        <argsstring></argsstring>
        <name>Resolution</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="46" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a2432f88e87a447824e8b1b44beba7cef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; <ref refid="namespacemodm_1_1platform_1a9a75ca82fea26cd4f4948f93899d0f55" kindref="member">Peripheral</ref> _ &gt; class...</type>
            <declname>Signals</declname>
            <defname>Signals</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void modm::platform::Adc3::connect</definition>
        <argsstring>()</argsstring>
        <name>connect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="176" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a4073576ebfb816e9a0ce697772a514cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SystemClock</type>
          </param>
          <param>
            <type><ref refid="group__modm__math__units_1gaedfcd0a3509b2f2ae47fd1efd95bd3ce" kindref="member">frequency_t</ref></type>
            <declname>frequency</declname>
            <defname>frequency</defname>
            <defval><ref refid="group__modm__math__units_1ga2020ec8d88e38c63e7104fd91c721e10" kindref="member">MHz</ref>(10)</defval>
          </param>
          <param>
            <type><ref refid="group__modm__math__units_1ga4f017ee3fdf26cb780b0df55356f031c" kindref="member">percent_t</ref></type>
            <declname>tolerance</declname>
            <defname>tolerance</defname>
            <defval><ref refid="group__modm__math__units_1gaa849cad2910e94feb4a7f31a6dacbb1c" kindref="member">pct</ref>(10)</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void modm::platform::Adc3::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize and enable the A/D converter.</para><para>Enables the ADC clock and switches on the ADC. The ADC clock prescaler will be set as well.</para><para>The ADC clock must not exceed 36 MHz for Vdd &gt; 2.4V, or 18MHz for Vdd &lt; 2.4V. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1afe6a886df50ef38e9acb80205c29cc94" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::disable</definition>
        <argsstring>()</argsstring>
        <name>disable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1afb4fcdc00a7b5d6f4dfd20287212e93c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::startConversion</definition>
        <argsstring>()</argsstring>
        <name>startConversion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a new conversion or continuous conversions.</para><para><simplesect kind="pre"><para>A ADC channel must be selected with <ref refid="classmodm_1_1platform_1_1_adc3_1a148a29b3d9986f51c8725d3f69767f51" kindref="member">setChannel()</ref>. When using a STM32F10x a delay of at least t_STAB after <ref refid="classmodm_1_1platform_1_1_adc3_1a4073576ebfb816e9a0ce697772a514cb" kindref="member">initialize()</ref> must be waited!</para></simplesect>
<simplesect kind="post"><para>The result can be fetched with <ref refid="classmodm_1_1platform_1_1_adc3_1a92e352d25bdf97a75d9e6a88d6c0bc22" kindref="member">getValue()</ref> </para></simplesect>
<simplesect kind="attention"><para>When using a STM32F10x, the application should allow a delay of t_STAB between power up and start of conversion. Refer to Reference Manual (RM0008) ADC_CR2_ADON. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a462fd300ef631579653184447be90eeb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::Adc3::isConversionFinished</definition>
        <argsstring>()</argsstring>
        <name>isConversionFinished</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a92e352d25bdf97a75d9e6a88d6c0bc22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t modm::platform::Adc3::getValue</definition>
        <argsstring>()</argsstring>
        <name>getValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a9bb686ede772f521874fa330d8879920" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t modm::platform::Adc3::readChannel</definition>
        <argsstring>(Channel channel)</argsstring>
        <name>readChannel</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078b" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a148a29b3d9986f51c8725d3f69767f51" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::Adc3::setChannel</definition>
        <argsstring>(const Channel channel, const SampleTime sampleTime=static_cast&lt; SampleTime &gt;(0b000))</argsstring>
        <name>setChannel</name>
        <param>
          <type>const <ref refid="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078b" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cf" kindref="member">SampleTime</ref></type>
          <declname>sampleTime</declname>
          <defval>static_cast&lt; <ref refid="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cf" kindref="member">SampleTime</ref> &gt;(0b000)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Analog channel selection.</para><para>This not for scan mode. The number of channels will be set to 1, the channel selected and the corresponding pin will be set to analog input. If the the channel is modified during a conversion, the current conversion is reset and a new start pulse is sent to the ADC to convert the new chosen channnel / group of channels.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel which shall be read. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampleTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The sample time to sample the input voltage.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>The ADC clock must be started and the ADC switched on with <ref refid="classmodm_1_1platform_1_1_adc3_1a4073576ebfb816e9a0ce697772a514cb" kindref="member">initialize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1ab2f188d20b50be561bd5e433fc4ba208" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="structmodm_1_1platform_1_1_gpio" kindref="compound">Gpio</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool modm::platform::Adc3::setPinChannel</definition>
        <argsstring>(SampleTime sampleTime=static_cast&lt; SampleTime &gt;(0b000))</argsstring>
        <name>setPinChannel</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cf" kindref="member">SampleTime</ref></type>
          <declname>sampleTime</declname>
          <defval>static_cast&lt; <ref refid="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cf" kindref="member">SampleTime</ref> &gt;(0b000)</defval>
        </param>
        <briefdescription>
<para>Setting the channel for a Pin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="247" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" bodystart="247" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a56f4228aea3976a1eadab630ac26d4cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="structmodm_1_1platform_1_1_gpio" kindref="compound">Gpio</ref></type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078b" kindref="member">Channel</ref></type>
        <definition>static constexpr Channel modm::platform::Adc3::getPinChannel</definition>
        <argsstring>()</argsstring>
        <name>getPinChannel</name>
        <briefdescription>
<para>Get the channel for a Pin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="254" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" bodystart="254" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a9bce8e5d2fde81fe9ad3cc5e0b78c709" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078b" kindref="member">Channel</ref></type>
        <definition>static Channel modm::platform::Adc3::getChannel</definition>
        <argsstring>()</argsstring>
        <name>getChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a7a3c3907fa660d98cbd898e2c22a2a40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::enableFreeRunningMode</definition>
        <argsstring>()</argsstring>
        <name>enableFreeRunningMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a32e5c1a53c66d96b5b035a1446773403" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::disableFreeRunningMode</definition>
        <argsstring>()</argsstring>
        <name>disableFreeRunningMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a897f07725033bc810a100bad7e5384ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::setLeftAdjustResult</definition>
        <argsstring>()</argsstring>
        <name>setLeftAdjustResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a53fc4bba47f908f01e87542af9ffa230" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::setRightAdjustResult</definition>
        <argsstring>()</argsstring>
        <name>setRightAdjustResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a304c6db6e3ff3cb19f262b6b0efe9688" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::enableTemperatureRefVMeasurement</definition>
        <argsstring>()</argsstring>
        <name>enableTemperatureRefVMeasurement</name>
        <briefdescription>
<para>Switch on temperature- and V_REF measurement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="286" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a60b6511ac66651df7801e4a8a7f6e61f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::disableTemperatureRefVMeasurement</definition>
        <argsstring>()</argsstring>
        <name>disableTemperatureRefVMeasurement</name>
        <briefdescription>
<para>Switch on temperature- and V_REF measurement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="290" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1abeaed824d8efbdab99c0aafd71e81567" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::Adc3::addChannel</definition>
        <argsstring>(const Channel channel, const SampleTime sampleTime=static_cast&lt; SampleTime &gt;(0b000))</argsstring>
        <name>addChannel</name>
        <param>
          <type>const <ref refid="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078b" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cf" kindref="member">SampleTime</ref></type>
          <declname>sampleTime</declname>
          <defval>static_cast&lt; <ref refid="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cf" kindref="member">SampleTime</ref> &gt;(0b000)</defval>
        </param>
        <briefdescription>
<para>Add a channel to conversion group. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1aaec754ed858f9cf85373ce1a7ca37678" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::setSampleTime</definition>
        <argsstring>(const Channel channel, const SampleTime sampleTime=static_cast&lt; SampleTime &gt;(0b000))</argsstring>
        <name>setSampleTime</name>
        <param>
          <type>const <ref refid="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078b" kindref="member">Channel</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cf" kindref="member">SampleTime</ref></type>
          <declname>sampleTime</declname>
          <defval>static_cast&lt; <ref refid="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cf" kindref="member">SampleTime</ref> &gt;(0b000)</defval>
        </param>
        <briefdescription>
<para>change sample time of ADC channel </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a8ffc2c4b0bf6a72d206375e5c4d60689" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::enableInterruptVector</definition>
        <argsstring>(const uint32_t priority, const bool enable=true)</argsstring>
        <name>enableInterruptVector</name>
        <param>
          <type>const uint32_t</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1ae6eabe01ca739c4221ceaa4cdd06e8a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::enableInterrupt</definition>
        <argsstring>(const Interrupt_t interrupt)</argsstring>
        <name>enableInterrupt</name>
        <param>
          <type>const <ref refid="classmodm_1_1platform_1_1_adc3_1a8b26fbc0562e4fb88db3f7eab7f97462" kindref="member">Interrupt_t</ref></type>
          <declname>interrupt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enables the ADC Conversion Complete Interrupt.</para><para>You could catch the interrupt using this example function: <itemizedlist>
<listitem><para>for STM32F4XX: <computeroutput><ref refid="group__modm__architecture__interrupt_1ga19738f4b356780cd9dc590e90c2481c7" kindref="member">MODM_ISR(ADC)</ref></computeroutput> </para></listitem>
<listitem><para>for STM32F10X: <computeroutput><ref refid="group__modm__architecture__interrupt_1ga19738f4b356780cd9dc590e90c2481c7" kindref="member">MODM_ISR(ADC1_2)</ref></computeroutput></para></listitem>
</itemizedlist>
<simplesect kind="pre"><para>The ADC clock must be started and the ADC switched on with <ref refid="classmodm_1_1platform_1_1_adc3_1a4073576ebfb816e9a0ce697772a514cb" kindref="member">initialize()</ref>. Also the Interrupt <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> needs to be enabled first.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Priority to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interrupt</parametername>
</parameternamelist>
<parameterdescription>
<para>The interrupt, which shall be enabled. See Interrupt for available interrupts.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>ADC1 and ADC2 interrupts are mapped onto the same interrupt vector. ADC3 interrupts are mapped onto a separate interrupt vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a0e59d4265d4294d0dd360c4e5e3c83b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::disableInterrupt</definition>
        <argsstring>(const Interrupt_t interrupt)</argsstring>
        <name>disableInterrupt</name>
        <param>
          <type>const <ref refid="classmodm_1_1platform_1_1_adc3_1a8b26fbc0562e4fb88db3f7eab7f97462" kindref="member">Interrupt_t</ref></type>
          <declname>interrupt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disables the ADC Conversion Complete Interrupt. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a34de9dc97649b86e84f7f433bda5488e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1platform_1_1_adc3_1a39ac7e47e86a574f48ec7d4aa8b4eb64" kindref="member">InterruptFlag_t</ref></type>
        <definition>static InterruptFlag_t modm::platform::Adc3::getInterruptFlags</definition>
        <argsstring>()</argsstring>
        <name>getInterruptFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns if the th interrupt flags set.</para><para><simplesect kind="pre"><para>The ADC clock must be started and the ADC switched on with <ref refid="classmodm_1_1platform_1_1_adc3_1a4073576ebfb816e9a0ce697772a514cb" kindref="member">initialize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a1cf50317df054f19dd5d23d2aa98d169" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::acknowledgeInterruptFlags</definition>
        <argsstring>(const InterruptFlag_t flags)</argsstring>
        <name>acknowledgeInterruptFlags</name>
        <param>
          <type>const <ref refid="classmodm_1_1platform_1_1_adc3_1a39ac7e47e86a574f48ec7d4aa8b4eb64" kindref="member">InterruptFlag_t</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears the specified interrupt flag.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>The interrupt flag, which shall be cleared.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>The ADC clock must be started and the ADC switched on with <ref refid="classmodm_1_1platform_1_1_adc3_1a4073576ebfb816e9a0ce697772a514cb" kindref="member">initialize()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="352" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_adc3_1a62b82bfe1d48f2a4bbc07aa0614d5870" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Adc3::setPrescaler</definition>
        <argsstring>(const Prescaler prescaler=Prescaler::Div8)</argsstring>
        <name>setPrescaler</name>
        <param>
          <type>const Prescaler</type>
          <declname>prescaler</declname>
          <defval>Prescaler::Div8</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Select the frequency of the clock to the ADC. The clock is common for all the ADCs (ADC1, ADC2, ADC3) and all channels.</para><para><simplesect kind="pre"><para>The ADC clock must be started and the ADC switched on with <ref refid="classmodm_1_1platform_1_1_adc3_1a4073576ebfb816e9a0ce697772a514cb" kindref="member">initialize()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prescaler</parametername>
</parameternamelist>
<parameterdescription>
<para>The prescaler specifies by which factor the system clock will be divided. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="367" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Analog/Digital-Converter module (ADC3).</para><para>The 12-bit ADC is a successive approximation analog-to-digital converter. It has up to 18 multiplexed channels allowing it to measure signals from 16 external and two internal sources. The result of the ADC is stored in a left-aligned or right-aligned 16-bit data register.</para><para><simplesect kind="author"><para>Stephan Kugelmann </para></simplesect>
<simplesect kind="author"><para>David Hebbeker </para></simplesect>
<simplesect kind="author"><para>ekiwi </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="26">
        <label>modm::Adc</label>
        <link refid="classmodm_1_1_adc"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>modm::PeripheralDriver</label>
        <link refid="classmodm_1_1_peripheral_driver"/>
      </node>
      <node id="28">
        <label>modm::platform::AdcInterrupt3</label>
        <link refid="classmodm_1_1platform_1_1_adc_interrupt3"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>modm::platform::Adc3</label>
        <link refid="classmodm_1_1platform_1_1_adc3"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="30">
        <label>modm::Adc</label>
        <link refid="classmodm_1_1_adc"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>modm::PeripheralDriver</label>
        <link refid="classmodm_1_1_peripheral_driver"/>
      </node>
      <node id="29">
        <label>modm::platform::Adc3</label>
        <link refid="classmodm_1_1platform_1_1_adc3"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" line="44" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/adc/adc_3.hpp" bodystart="43" bodyend="368"/>
    <listofallmembers>
      <member refid="classmodm_1_1platform_1_1_adc3_1a1cf50317df054f19dd5d23d2aa98d169" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>acknowledgeInterruptFlags</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1abeaed824d8efbdab99c0aafd71e81567" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>addChannel</name></member>
      <member refid="classmodm_1_1_peripheral_driver_1a5c336ff9889c347e7eadb810bf984ebd" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>assertBaudrateInTolerance</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a57edd2660e953862d57639cd0d2a078b" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>Channel</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a2432f88e87a447824e8b1b44beba7cef" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>connect</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1afe6a886df50ef38e9acb80205c29cc94" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>disable</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a32e5c1a53c66d96b5b035a1446773403" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>disableFreeRunningMode</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a0e59d4265d4294d0dd360c4e5e3c83b8" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>disableInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a60b6511ac66651df7801e4a8a7f6e61f" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>disableTemperatureRefVMeasurement</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a7a3c3907fa660d98cbd898e2c22a2a40" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>enableFreeRunningMode</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1ae6eabe01ca739c4221ceaa4cdd06e8a9" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>enableInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a8ffc2c4b0bf6a72d206375e5c4d60689" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>enableInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a304c6db6e3ff3cb19f262b6b0efe9688" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>enableTemperatureRefVMeasurement</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a9bce8e5d2fde81fe9ad3cc5e0b78c709" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>getChannel</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a34de9dc97649b86e84f7f433bda5488e" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>getInterruptFlags</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a56f4228aea3976a1eadab630ac26d4cf" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>getPinChannel</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a92e352d25bdf97a75d9e6a88d6c0bc22" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>getValue</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a4073576ebfb816e9a0ce697772a514cb" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>initialize</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a62e08deee4e0f7c4ba0b539164f09a80" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>Interrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a8b26fbc0562e4fb88db3f7eab7f97462" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>Interrupt_t</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1af58a128178ccf7b4a3bf79fa4bca38bc" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>InterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a39ac7e47e86a574f48ec7d4aa8b4eb64" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>InterruptFlag_t</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a462fd300ef631579653184447be90eeb" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>isConversionFinished</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1aef950e72ef0d4e1bf87c16b198dceb0d" prot="private" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>Prescaler</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a9bb686ede772f521874fa330d8879920" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>readChannel</name></member>
      <member refid="classmodm_1_1_adc_1a73bac09f02e8c10479f4d023c95f9570" prot="public" virt="non-virtual" ambiguityscope="modm::Adc::"><scope>modm::platform::Adc3</scope><name>readChannel</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1acaff7eb6323ae780ba39680e75923b0f" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>Resolution</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a579591c32f6d631374c34dc3a0cae2cf" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>SampleTime</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a148a29b3d9986f51c8725d3f69767f51" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>setChannel</name></member>
      <member refid="classmodm_1_1_adc_1a11367b26a7f631b73ef9fb3047b66240" prot="public" virt="non-virtual" ambiguityscope="modm::Adc::"><scope>modm::platform::Adc3</scope><name>setChannel</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a897f07725033bc810a100bad7e5384ac" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>setLeftAdjustResult</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1ab2f188d20b50be561bd5e433fc4ba208" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>setPinChannel</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a62b82bfe1d48f2a4bbc07aa0614d5870" prot="private" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>setPrescaler</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1a53fc4bba47f908f01e87542af9ffa230" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>setRightAdjustResult</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1aaec754ed858f9cf85373ce1a7ca37678" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>setSampleTime</name></member>
      <member refid="classmodm_1_1platform_1_1_adc3_1afb4fcdc00a7b5d6f4dfd20287212e93c" prot="public" virt="non-virtual"><scope>modm::platform::Adc3</scope><name>startConversion</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
