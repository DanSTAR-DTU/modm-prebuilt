<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classmodm_1_1platform_1_1_bit_bang_spi_master" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::BitBangSpiMaster</compoundname>
    <basecompoundref refid="classmodm_1_1_spi_master" prot="public" virt="non-virtual">modm::SpiMaster</basecompoundref>
    <includes refid="bitbang__spi__master_8hpp" local="no">modm/platform/spi/bitbang_spi_master.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Sck</type>
      </param>
      <param>
        <type>typename Mosi</type>
      </param>
      <param>
        <type>typename Miso</type>
        <defval><ref refid="classmodm_1_1platform_1_1_gpio_unused" kindref="compound">GpioUnused</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1a5113459280fdf171dfdddf1fad615be2" prot="private" static="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::delayTime</definition>
        <argsstring></argsstring>
        <name>delayTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="89" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1aca8b6c419289bf5fa82e217949d45a39" prot="private" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::operationMode</definition>
        <argsstring></argsstring>
        <name>operationMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="91" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1aa4ee789969b0ec4a5cd7aeccbeaefafb" prot="private" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="92" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1add7691c7624d913be2356d683b13e9a3" prot="private" static="yes" mutable="no">
        <type>void *</type>
        <definition>void* modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="93" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1a3a21163ad6bcb3f333e33b141d764f98" prot="private" static="yes" mutable="no">
        <type><ref refid="structmodm_1_1_spi_1a0d609550a29c439aa83e5999f584447d" kindref="member">ConfigurationHandler</ref></type>
        <definition>ConfigurationHandler modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::configuration</definition>
        <argsstring></argsstring>
        <name>configuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="94" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1ae9efb047cf8a0147041626826120c99a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; <ref refid="namespacemodm_1_1platform_1a9a75ca82fea26cd4f4948f93899d0f55" kindref="member">Peripheral</ref> _ &gt; class...</type>
            <declname>Signals</declname>
            <defname>Signals</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::connect</definition>
        <argsstring>()</argsstring>
        <name>connect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1a263004aace1fea2d5be169e9f93cea4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SystemClock</type>
          </param>
          <param>
            <type><ref refid="group__modm__math__units_1ga30af1fac499efa181bc4708e24c577d1" kindref="member">baudrate_t</ref></type>
            <declname>baudrate</declname>
            <defname>baudrate</defname>
          </param>
          <param>
            <type><ref refid="group__modm__math__units_1ga4f017ee3fdf26cb780b0df55356f031c" kindref="member">percent_t</ref></type>
            <declname>tolerance</declname>
            <defname>tolerance</defname>
            <defval><ref refid="group__modm__math__units_1gaa849cad2910e94feb4a7f31a6dacbb1c" kindref="member">pct</ref>(5)</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <briefdescription>
<para>Baudrate is limited to 500kbps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1a3e49e00cec8e1e99e35fc3f8772cad78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::setDataMode</definition>
        <argsstring>(DataMode mode)</argsstring>
        <name>setDataMode</name>
        <param>
          <type><ref refid="structmodm_1_1_spi_1a00c4c03fc5d3c23c677740fb804ae820" kindref="member">DataMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1a8eed805b2389f5bb78b5ac19eed872ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::setDataOrder</definition>
        <argsstring>(DataOrder order)</argsstring>
        <name>setDataOrder</name>
        <param>
          <type><ref refid="structmodm_1_1_spi_1a738c2058b5a1778735b4c78df0bb6839" kindref="member">DataOrder</ref></type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1ab866a5af8835094568ea66d000f8ae21" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::acquire</definition>
        <argsstring>(void *ctx, ConfigurationHandler handler=nullptr)</argsstring>
        <name>acquire</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1_spi_1a0d609550a29c439aa83e5999f584447d" kindref="member">ConfigurationHandler</ref></type>
          <declname>handler</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1a0b753db181dd3217c8cceed454abd76d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::release</definition>
        <argsstring>(void *ctx)</argsstring>
        <name>release</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1a87d4281cf819bd21d872e3524f22c0bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::transferBlocking</definition>
        <argsstring>(uint8_t data)</argsstring>
        <name>transferBlocking</name>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1a8cb5b79dd7077247ee5741b464da80b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::transferBlocking</definition>
        <argsstring>(uint8_t *tx, uint8_t *rx, std::size_t length)</argsstring>
        <name>transferBlocking</name>
        <param>
          <type>uint8_t *</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>rx</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1a18f90177c77b4b25bec8798955966974" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmodm_1_1_resumable_result" kindref="compound">modm::ResumableResult</ref>&lt; uint8_t &gt;</type>
        <definition>static modm::ResumableResult&lt;uint8_t&gt; modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::transfer</definition>
        <argsstring>(uint8_t data)</argsstring>
        <name>transfer</name>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1a6e6b4985509e0b6d07a36065147531cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmodm_1_1_resumable_result" kindref="compound">modm::ResumableResult</ref>&lt; void &gt;</type>
        <definition>static modm::ResumableResult&lt;void&gt; modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::transfer</definition>
        <argsstring>(uint8_t *tx, uint8_t *rx, std::size_t length)</argsstring>
        <name>transfer</name>
        <param>
          <type>uint8_t *</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>rx</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="82" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_bit_bang_spi_master_1abcbda184c0e7a1136bda60f9b943006c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;::delay</definition>
        <argsstring>()</argsstring>
        <name>delay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="87" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Software emulation of a Simple <ref refid="structmodm_1_1_spi" kindref="compound">Spi</ref>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Sck</parametername>
</parameternamelist>
<parameterdescription>
<para>clock pin [output] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Mosi</parametername>
</parameternamelist>
<parameterdescription>
<para>master out slave in pin [output] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Miso</parametername>
</parameternamelist>
<parameterdescription>
<para>master in slave out pin [input]</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Niklas Hauser </para>
</simplesect>
<simplesect kind="see"><para>gpio </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="106">
        <label>modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;</label>
        <link refid="classmodm_1_1platform_1_1_bit_bang_spi_master"/>
        <childnode refid="107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="108">
        <label>modm::PeripheralDriver</label>
        <link refid="classmodm_1_1_peripheral_driver"/>
      </node>
      <node id="109">
        <label>modm::Spi</label>
        <link refid="structmodm_1_1_spi"/>
      </node>
      <node id="107">
        <label>modm::SpiMaster</label>
        <link refid="classmodm_1_1_spi_master"/>
        <childnode refid="108" relation="public-inheritance">
        </childnode>
        <childnode refid="109" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="110">
        <label>modm::platform::BitBangSpiMaster&lt; Sck, Mosi, Miso &gt;</label>
        <link refid="classmodm_1_1platform_1_1_bit_bang_spi_master"/>
        <childnode refid="111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="112">
        <label>modm::PeripheralDriver</label>
        <link refid="classmodm_1_1_peripheral_driver"/>
      </node>
      <node id="113">
        <label>modm::Spi</label>
        <link refid="structmodm_1_1_spi"/>
      </node>
      <node id="111">
        <label>modm::SpiMaster</label>
        <link refid="classmodm_1_1_spi_master"/>
        <childnode refid="112" relation="public-inheritance">
        </childnode>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" line="45" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/spi/bitbang_spi_master.hpp" bodystart="44" bodyend="95"/>
    <listofallmembers>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1ab866a5af8835094568ea66d000f8ae21" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>acquire</name></member>
      <member refid="classmodm_1_1_peripheral_driver_1a5c336ff9889c347e7eadb810bf984ebd" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>assertBaudrateInTolerance</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1a3a21163ad6bcb3f333e33b141d764f98" prot="private" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>configuration</name></member>
      <member refid="structmodm_1_1_spi_1a0d609550a29c439aa83e5999f584447d" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>ConfigurationHandler</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1ae9efb047cf8a0147041626826120c99a" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>connect</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1add7691c7624d913be2356d683b13e9a3" prot="private" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>context</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1aa4ee789969b0ec4a5cd7aeccbeaefafb" prot="private" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>count</name></member>
      <member refid="structmodm_1_1_spi_1a00c4c03fc5d3c23c677740fb804ae820" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>DataMode</name></member>
      <member refid="structmodm_1_1_spi_1a738c2058b5a1778735b4c78df0bb6839" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>DataOrder</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1abcbda184c0e7a1136bda60f9b943006c" prot="private" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>delay</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1a5113459280fdf171dfdddf1fad615be2" prot="private" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>delayTime</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1a263004aace1fea2d5be169e9f93cea4e" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>initialize</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1aca8b6c419289bf5fa82e217949d45a39" prot="private" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>operationMode</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1a0b753db181dd3217c8cceed454abd76d" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>release</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1a3e49e00cec8e1e99e35fc3f8772cad78" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>setDataMode</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1a8eed805b2389f5bb78b5ac19eed872ea" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>setDataOrder</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1a18f90177c77b4b25bec8798955966974" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>transfer</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1a6e6b4985509e0b6d07a36065147531cd" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>transfer</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1a87d4281cf819bd21d872e3524f22c0bd" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>transferBlocking</name></member>
      <member refid="classmodm_1_1platform_1_1_bit_bang_spi_master_1a8cb5b79dd7077247ee5741b464da80b5" prot="public" virt="non-virtual"><scope>modm::platform::BitBangSpiMaster</scope><name>transferBlocking</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
