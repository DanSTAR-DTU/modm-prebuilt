<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1platform_1_1_gpio_a13" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::GpioA13</compoundname>
    <basecompoundref refid="structmodm_1_1platform_1_1_gpio" prot="public" virt="non-virtual">modm::platform::Gpio</basecompoundref>
    <basecompoundref refid="classmodm_1_1_gpio_i_o" prot="public" virt="non-virtual">modm::GpioIO</basecompoundref>
    <includes refid="gpio___a13_8hpp" local="no">modm/platform/gpio/gpio_A13.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a13_1a6fea75b217a2193559b96592bb31f22c" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioA13::BitBang =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>BitBang</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Connect to any software peripheral </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="167" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a13_1abba7f4cef17274187e8eeb1665f7c06a" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioA13::Jtms =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Jtms</name>
        <briefdescription>
<para>Connect to Sys. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="169" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a13_1a85cafe9dd5ac955d35590606a3abf1d2" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioA13::Swdio =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Swdio</name>
        <briefdescription>
<para>Connect to Sys. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="171" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a13_1acd54ae43a98436070cf00b47679deb0e" prot="private" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_set" kindref="compound">GpioSet</ref>&lt; <ref refid="classmodm_1_1platform_1_1_gpio_a13" kindref="compound">GpioA13</ref> &gt;</type>
        <definition>using modm::platform::GpioA13::PinSet =  GpioSet&lt;GpioA13&gt;</definition>
        <argsstring></argsstring>
        <name>PinSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="37" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a13_1abaee41365b6d97799d0913968212b8d3" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_a13" kindref="compound">GpioA13</ref></type>
        <definition>using modm::platform::GpioA13::Output =  GpioA13</definition>
        <argsstring></argsstring>
        <name>Output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="42" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a13_1a9315cb3efbf487c450947601f4d13940" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_a13" kindref="compound">GpioA13</ref></type>
        <definition>using modm::platform::GpioA13::Input =  GpioA13</definition>
        <argsstring></argsstring>
        <name>Input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="43" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a13_1ae0dd1eae65589cd2c659c5f677640a2b" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_a13" kindref="compound">GpioA13</ref></type>
        <definition>using modm::platform::GpioA13::IO =  GpioA13</definition>
        <argsstring></argsstring>
        <name>IO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="44" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a13_1ad63ca5c75774690f6e9e88ab6f6b7837" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_a13" kindref="compound">GpioA13</ref></type>
        <definition>using modm::platform::GpioA13::Type =  GpioA13</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="45" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_a13_1a4e7835d7980cbc422c366c10fdbc1f77" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Gpios</declname>
            <defname>Gpios</defname>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class GpioSet</definition>
        <argsstring></argsstring>
        <name>GpioSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="36" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_a13_1a6f211b1a6fb32c7354ec26cb136397d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc</definition>
        <argsstring></argsstring>
        <name>Adc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="38" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_a13_1a408d9d1af47860a0d441db9e682a0286" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc1</definition>
        <argsstring></argsstring>
        <name>Adc1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="39" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_a13_1aa23e1a089c072f958a021d20e3999d1d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc2</definition>
        <argsstring></argsstring>
        <name>Adc2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="39" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_a13_1a5ed7caa4b9cdb2a9e493c0d14f0969ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc3</definition>
        <argsstring></argsstring>
        <name>Adc3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="40" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_a13_1a448248fc7a1c51bccc4b77743edcb11f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc4</definition>
        <argsstring></argsstring>
        <name>Adc4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="40" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a13_1a78a49878a70f08ec5f63129f7ae3afcb" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool modm::platform::GpioA13::isInverted</definition>
        <argsstring></argsstring>
        <name>isInverted</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="46" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a13_1ad8539a30cc596f76648b8ed02f1bee14" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" kindref="member">Port</ref></type>
        <definition>constexpr Port modm::platform::GpioA13::port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <initializer>= <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba7fc56270e7a70fa81a5935b72eacbe29" kindref="member">Port::A</ref></initializer>
        <briefdescription>
<para>Port name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="47" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a13_1a2c27f612cd9d3a2fdefe4bbab12ccf86" prot="public" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioA13::pin</definition>
        <argsstring></argsstring>
        <name>pin</name>
        <initializer>= 13</initializer>
        <briefdescription>
<para>Pin number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="48" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a13_1af587265a29fd2c3c94bf31fc4880643d" prot="protected" static="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t modm::platform::GpioA13::mask</definition>
        <argsstring></argsstring>
        <name>mask</name>
        <initializer>= 0x1 &lt;&lt; pin</initializer>
        <briefdescription>
<para>Bitmask for registers that contain a 1bit value for every pin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="52" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a13_1a50d48be4deaa461604d5ad1646e13e6e" prot="protected" static="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t modm::platform::GpioA13::mask2</definition>
        <argsstring></argsstring>
        <name>mask2</name>
        <initializer>= 0x3 &lt;&lt; (pin * 2)</initializer>
        <briefdescription>
<para>Bitmask for registers that contain a 2bit value for every pin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="54" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a13_1a5d1c75889069d55f83ed7d84da8bf3a6" prot="protected" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioA13::port_nr</definition>
        <argsstring></argsstring>
        <name>port_nr</name>
        <initializer>= uint8_t(<ref refid="classmodm_1_1platform_1_1_gpio_a13_1ad8539a30cc596f76648b8ed02f1bee14" kindref="member">port</ref>)</initializer>
        <briefdescription>
<para>Port Number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="56" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a13_1a75db0268be18ece5da91d13f89b52c07" prot="protected" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioA13::af_id</definition>
        <argsstring></argsstring>
        <name>af_id</name>
        <initializer>= <ref refid="classmodm_1_1platform_1_1_gpio_a13_1a2c27f612cd9d3a2fdefe4bbab12ccf86" kindref="member">pin</ref> / 8</initializer>
        <briefdescription>
<para>Alternate Function register id. 0 for pin 0-7. 1 for pin 8-15. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="58" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a13_1a31c3c2aaa6c911c7cd9c981371415106" prot="protected" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioA13::af_offset</definition>
        <argsstring></argsstring>
        <name>af_offset</name>
        <initializer>= (<ref refid="classmodm_1_1platform_1_1_gpio_a13_1a2c27f612cd9d3a2fdefe4bbab12ccf86" kindref="member">pin</ref> * 4) % 32</initializer>
        <briefdescription>
<para>Alternate Function offset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="60" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a13_1aca53b9d2cf93193ed0913aafa4ef816f" prot="protected" static="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t modm::platform::GpioA13::af_mask</definition>
        <argsstring></argsstring>
        <name>af_mask</name>
        <initializer>= 0xf &lt;&lt; af_offset</initializer>
        <briefdescription>
<para>Alternate Function register mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="62" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a13_1a42450a2eba90131137132959144ca1d8" prot="protected" static="yes" mutable="no">
        <type>constexpr IRQn_Type</type>
        <definition>constexpr IRQn_Type modm::platform::GpioA13::ExternalInterruptIRQ</definition>
        <argsstring></argsstring>
        <name>ExternalInterruptIRQ</name>
        <initializer>= EXTI15_10_IRQn</initializer>
        <briefdescription>
<para>ExternalInterruptIRQ. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="64" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a13_1a7bd9e277818f82a6af90a0150e667bc0" prot="private" static="yes" mutable="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespacemodm_1_1platform_1a9a75ca82fea26cd4f4948f93899d0f55" kindref="member">Peripheral</ref></type>
            <declname>peripheral</declname>
            <defname>peripheral</defname>
          </param>
        </templateparamlist>
        <type>constexpr int8_t</type>
        <definition>constexpr int8_t modm::platform::GpioA13::AdcChannel</definition>
        <argsstring></argsstring>
        <name>AdcChannel</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="196" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a31bb2137b77e050b95375ba6c8085082" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::setOutput</definition>
        <argsstring>()</argsstring>
        <name>setOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="80" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a06885a4e2b8bb33aa8e97d4c1a91d5dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::setOutput</definition>
        <argsstring>(bool status)</argsstring>
        <name>setOutput</name>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="81" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a2296aa0ccff85c9e2b75a15b6d0524a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::set</definition>
        <argsstring>()</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="82" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a295f1c1fe20f89b3c24c114dc8abf7e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::set</definition>
        <argsstring>(bool status)</argsstring>
        <name>set</name>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="83" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1ab6343883f7d106e4ccc1f4250145532c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="84" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a7669f9cae40404d9a04203098741dcfa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::toggle</definition>
        <argsstring>()</argsstring>
        <name>toggle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="85" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a31fec506882b56f4f930d3d2553249c6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioA13::isSet</definition>
        <argsstring>()</argsstring>
        <name>isSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="89" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a17f991a8afed43f99a01f3d85cabe2ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::configure</definition>
        <argsstring>(OutputType type, OutputSpeed speed=OutputSpeed::MHz50)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" kindref="member">OutputType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" kindref="member">OutputSpeed</ref></type>
          <declname>speed</declname>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09a291c765b56a54ef8453ee3aceef60ed3" kindref="member">OutputSpeed::MHz50</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="91" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a71528a36aebdd6c605499f0e53cfb39e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::setOutput</definition>
        <argsstring>(OutputType type, OutputSpeed speed=OutputSpeed::MHz50)</argsstring>
        <name>setOutput</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" kindref="member">OutputType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" kindref="member">OutputSpeed</ref></type>
          <declname>speed</declname>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09a291c765b56a54ef8453ee3aceef60ed3" kindref="member">OutputSpeed::MHz50</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="92" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a8562c0aa1b73c2fba9b6bdae50122eb9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::setInput</definition>
        <argsstring>()</argsstring>
        <name>setInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="95" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a188a4a33adefec90e2a465b9ef9e9d81" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioA13::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="96" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1ae8be32425e4026114fdffd916a7a06f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::configure</definition>
        <argsstring>(InputType type)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">InputType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="98" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1aef245738c86ef555c1a5424d5ec411fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::setInput</definition>
        <argsstring>(InputType type)</argsstring>
        <name>setInput</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">InputType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="99" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a32a21f2a0de8f6406a72603ee4ccddb6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::enableExternalInterrupt</definition>
        <argsstring>()</argsstring>
        <name>enableExternalInterrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="104" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="104" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1adc5c03e44f3a0d8e0efbfe23dbe4d048" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::disableExternalInterrupt</definition>
        <argsstring>()</argsstring>
        <name>disableExternalInterrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="119" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a40863727c48fbe00d5fa37e440c7aa96" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::enableExternalInterruptVector</definition>
        <argsstring>(const uint32_t priority)</argsstring>
        <name>enableExternalInterruptVector</name>
        <param>
          <type>const uint32_t</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="120" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a6a6f75b3543e6c6258d7584acf2c8bc3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::disableExternalInterruptVector</definition>
        <argsstring>()</argsstring>
        <name>disableExternalInterruptVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="125" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1ae371c02fe43a50a77168425549212002" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::setInputTrigger</definition>
        <argsstring>(const InputTrigger trigger)</argsstring>
        <name>setInputTrigger</name>
        <param>
          <type>const <ref refid="structmodm_1_1platform_1_1_gpio_1a5f683814888fa5a34c2bcf2db9b803a5" kindref="member">InputTrigger</ref></type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="126" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="126" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a3220c8c8f12192f984508a01483043e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioA13::getExternalInterruptFlag</definition>
        <argsstring>()</argsstring>
        <name>getExternalInterruptFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="144" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a2b5057eaec3d131a829ef56afd8a4842" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::acknowledgeExternalInterruptFlag</definition>
        <argsstring>()</argsstring>
        <name>acknowledgeExternalInterruptFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="145" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a7fa302da9641e603739d92fb656559b9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" kindref="member">Direction</ref></type>
        <definition>static Direction modm::platform::GpioA13::getDirection</definition>
        <argsstring>()</argsstring>
        <name>getDirection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="148" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="148" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1a3d465b0d40e2f1bdfbcdee30bb6c1c79" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="157" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a13_1ae093478562862ac8fe2aab8f8f3fc438" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA13::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="158" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="158" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>IO class for Pin A13 </para>    </detaileddescription>
    <inheritancegraph>
      <node id="480">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
      <node id="481">
        <label>modm::GpioIO</label>
        <link refid="classmodm_1_1_gpio_i_o"/>
        <childnode refid="482" relation="public-inheritance">
        </childnode>
        <childnode refid="484" relation="public-inheritance">
        </childnode>
      </node>
      <node id="479">
        <label>modm::platform::GpioA13</label>
        <link refid="classmodm_1_1platform_1_1_gpio_a13"/>
        <childnode refid="480" relation="public-inheritance">
        </childnode>
        <childnode refid="481" relation="public-inheritance">
        </childnode>
      </node>
      <node id="484">
        <label>modm::GpioInput</label>
        <link refid="classmodm_1_1_gpio_input"/>
        <childnode refid="483" relation="public-inheritance">
        </childnode>
      </node>
      <node id="482">
        <label>modm::GpioOutput</label>
        <link refid="classmodm_1_1_gpio_output"/>
        <childnode refid="483" relation="public-inheritance">
        </childnode>
      </node>
      <node id="483">
        <label>modm::Gpio</label>
        <link refid="structmodm_1_1_gpio"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="486">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
      <node id="487">
        <label>modm::GpioIO</label>
        <link refid="classmodm_1_1_gpio_i_o"/>
        <childnode refid="488" relation="public-inheritance">
        </childnode>
        <childnode refid="490" relation="public-inheritance">
        </childnode>
      </node>
      <node id="485">
        <label>modm::platform::GpioA13</label>
        <link refid="classmodm_1_1platform_1_1_gpio_a13"/>
        <childnode refid="486" relation="public-inheritance">
        </childnode>
        <childnode refid="487" relation="public-inheritance">
        </childnode>
      </node>
      <node id="490">
        <label>modm::GpioInput</label>
        <link refid="classmodm_1_1_gpio_input"/>
        <childnode refid="489" relation="public-inheritance">
        </childnode>
      </node>
      <node id="488">
        <label>modm::GpioOutput</label>
        <link refid="classmodm_1_1_gpio_output"/>
        <childnode refid="489" relation="public-inheritance">
        </childnode>
      </node>
      <node id="489">
        <label>modm::Gpio</label>
        <link refid="structmodm_1_1_gpio"/>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" line="34" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A13.hpp" bodystart="33" bodyend="197"/>
    <listofallmembers>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a2b5057eaec3d131a829ef56afd8a4842" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>acknowledgeExternalInterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a6f211b1a6fb32c7354ec26cb136397d7" prot="private" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>Adc</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a408d9d1af47860a0d441db9e682a0286" prot="private" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>Adc1</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1aa23e1a089c072f958a021d20e3999d1d" prot="private" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>Adc2</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a5ed7caa4b9cdb2a9e493c0d14f0969ab" prot="private" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>Adc3</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a448248fc7a1c51bccc4b77743edcb11f" prot="private" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>Adc4</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a7bd9e277818f82a6af90a0150e667bc0" prot="private" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>AdcChannel</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a75db0268be18ece5da91d13f89b52c07" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>af_id</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1aca53b9d2cf93193ed0913aafa4ef816f" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>af_mask</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a31c3c2aaa6c911c7cd9c981371415106" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>af_offset</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a6fea75b217a2193559b96592bb31f22c" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>BitBang</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a17f991a8afed43f99a01f3d85cabe2ba" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>configure</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1ae8be32425e4026114fdffd916a7a06f1" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>configure</name></member>
      <member refid="classmodm_1_1_gpio_i_o_1ac3e00d004cfc8c6268085b4468e22684" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>direction</name></member>
      <member refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioA13</scope><name>Direction</name></member>
      <member refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioA13</scope><name>Direction</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1adc5c03e44f3a0d8e0efbfe23dbe4d048" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>disableExternalInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a6a6f75b3543e6c6258d7584acf2c8bc3" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>disableExternalInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1ae093478562862ac8fe2aab8f8f3fc438" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>disconnect</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a32a21f2a0de8f6406a72603ee4ccddb6" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>enableExternalInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a40863727c48fbe00d5fa37e440c7aa96" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>enableExternalInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a42450a2eba90131137132959144ca1d8" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>ExternalInterruptIRQ</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a7fa302da9641e603739d92fb656559b9" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>getDirection</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a3220c8c8f12192f984508a01483043e5" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>getExternalInterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a4e7835d7980cbc422c366c10fdbc1f77" prot="private" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>GpioSet</name></member>
      <member refid="structmodm_1_1_gpio_1a17454096f07c8ae16d603ff46ad53c6a" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioA13</scope><name>High</name></member>
      <member refid="structmodm_1_1_gpio_1a17454096f07c8ae16d603ff46ad53c6a" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioA13</scope><name>High</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a9315cb3efbf487c450947601f4d13940" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>Input</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a5f683814888fa5a34c2bcf2db9b803a5" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>InputTrigger</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>InputType</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1ae0dd1eae65589cd2c659c5f677640a2b" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>IO</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a78a49878a70f08ec5f63129f7ae3afcb" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>isInverted</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a31fec506882b56f4f930d3d2553249c6" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>isSet</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1abba7f4cef17274187e8eeb1665f7c06a" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>Jtms</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a3d465b0d40e2f1bdfbcdee30bb6c1c79" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>lock</name></member>
      <member refid="structmodm_1_1_gpio_1a85ddb071ba8af1c2b89b4e8c079ea58f" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioA13</scope><name>Low</name></member>
      <member refid="structmodm_1_1_gpio_1a85ddb071ba8af1c2b89b4e8c079ea58f" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioA13</scope><name>Low</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1af587265a29fd2c3c94bf31fc4880643d" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>mask</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a50d48be4deaa461604d5ad1646e13e6e" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>mask2</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1abaee41365b6d97799d0913968212b8d3" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>Output</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>OutputSpeed</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>OutputType</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a2c27f612cd9d3a2fdefe4bbab12ccf86" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>pin</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1acd54ae43a98436070cf00b47679deb0e" prot="private" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>PinSet</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>Port</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1ad8539a30cc596f76648b8ed02f1bee14" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>port</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a5d1c75889069d55f83ed7d84da8bf3a6" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>port_nr</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a188a4a33adefec90e2a465b9ef9e9d81" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>read</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1ab6343883f7d106e4ccc1f4250145532c" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>reset</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a2296aa0ccff85c9e2b75a15b6d0524a9" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a295f1c1fe20f89b3c24c114dc8abf7e2" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a8562c0aa1b73c2fba9b6bdae50122eb9" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1aef245738c86ef555c1a5424d5ec411fb" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1ae371c02fe43a50a77168425549212002" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>setInputTrigger</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a31bb2137b77e050b95375ba6c8085082" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a06885a4e2b8bb33aa8e97d4c1a91d5dd" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a71528a36aebdd6c605499f0e53cfb39e" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a85cafe9dd5ac955d35590606a3abf1d2" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>Swdio</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1a7669f9cae40404d9a04203098741dcfa" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>toggle</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a13_1ad63ca5c75774690f6e9e88ab6f6b7837" prot="public" virt="non-virtual"><scope>modm::platform::GpioA13</scope><name>Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
