<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_tolerance" kind="class" language="C++" prot="public">
    <compoundname>modm::Tolerance</compoundname>
    <includes refid="tolerance_8hpp" local="no">modm/math/tolerance.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1_tolerance_1a0b2d12082b57c2562257805e1bff62f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int64_t</type>
        <definition>static constexpr int64_t modm::Tolerance::absoluteError</definition>
        <argsstring>(uint32_t reference, uint32_t actual)</argsstring>
        <name>absoluteError</name>
        <param>
          <type>uint32_t</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>actual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/tolerance.hpp" line="34" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/tolerance.hpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_tolerance_1a98f40de93c8cbc7b683c0c171837b3f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>static constexpr float modm::Tolerance::relativeError</definition>
        <argsstring>(uint32_t reference, uint32_t actual)</argsstring>
        <name>relativeError</name>
        <param>
          <type>uint32_t</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>actual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/tolerance.hpp" line="40" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/tolerance.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_tolerance_1a8213127e7c77bfcdb2e4d0e712034507" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>static constexpr bool modm::Tolerance::isErrorInTolerance</definition>
        <argsstring>(float error, percent_t tolerance)</argsstring>
        <name>isErrorInTolerance</name>
        <param>
          <type>float</type>
          <declname>error</declname>
        </param>
        <param>
          <type><ref refid="group__modm__math__units_1ga4f017ee3fdf26cb780b0df55356f031c" kindref="member">percent_t</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/tolerance.hpp" line="46" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/tolerance.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_tolerance_1a0d53708a9e63373544dd730700570c8a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>static constexpr bool modm::Tolerance::isValueInTolerance</definition>
        <argsstring>(uint32_t reference, uint32_t actual, percent_t tolerance)</argsstring>
        <name>isValueInTolerance</name>
        <param>
          <type>uint32_t</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>actual</declname>
        </param>
        <param>
          <type><ref refid="group__modm__math__units_1ga4f017ee3fdf26cb780b0df55356f031c" kindref="member">percent_t</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/tolerance.hpp" line="52" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/tolerance.hpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_tolerance_1aee04bf1bf08985f286b032a516077210" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint32_t</type>
            <declname>reference</declname>
            <defname>reference</defname>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>actual</declname>
            <defname>actual</defname>
          </param>
          <param>
            <type><ref refid="group__modm__math__units_1ga4f017ee3fdf26cb780b0df55356f031c" kindref="member">percent_t</ref></type>
            <declname>tolerance</declname>
            <defname>tolerance</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void modm::Tolerance::assertValueInTolerance</definition>
        <argsstring>()</argsstring>
        <name>assertValueInTolerance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/tolerance.hpp" line="59" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/tolerance.hpp" bodystart="59" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class checks if values are within a certain tolerance.</para><para>This can be used to guarantee the quality of certain parameters, mostly baudrate or datarate. </para>    </detaileddescription>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/tolerance.hpp" line="31" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/tolerance.hpp" bodystart="29" bodyend="64"/>
    <listofallmembers>
      <member refid="classmodm_1_1_tolerance_1a0b2d12082b57c2562257805e1bff62f3" prot="public" virt="non-virtual"><scope>modm::Tolerance</scope><name>absoluteError</name></member>
      <member refid="classmodm_1_1_tolerance_1aee04bf1bf08985f286b032a516077210" prot="public" virt="non-virtual"><scope>modm::Tolerance</scope><name>assertValueInTolerance</name></member>
      <member refid="classmodm_1_1_tolerance_1a8213127e7c77bfcdb2e4d0e712034507" prot="public" virt="non-virtual"><scope>modm::Tolerance</scope><name>isErrorInTolerance</name></member>
      <member refid="classmodm_1_1_tolerance_1a0d53708a9e63373544dd730700570c8a" prot="public" virt="non-virtual"><scope>modm::Tolerance</scope><name>isValueInTolerance</name></member>
      <member refid="classmodm_1_1_tolerance_1a98f40de93c8cbc7b683c0c171837b3f8" prot="public" virt="non-virtual"><scope>modm::Tolerance</scope><name>relativeError</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
