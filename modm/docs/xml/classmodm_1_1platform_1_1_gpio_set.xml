<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1platform_1_1_gpio_set" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::GpioSet</compoundname>
    <basecompoundref refid="structmodm_1_1platform_1_1_gpio" prot="public" virt="non-virtual">modm::platform::Gpio</basecompoundref>
    <includes refid="set_8hpp" local="no">modm/platform/gpio/set.hpp</includes>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>Gpios</declname>
        <defname>Gpios</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_set_1a2f9cb32c5ab352b06192102b81531c5c" prot="protected" static="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t modm::platform::GpioSet&lt; Gpios &gt;::inverteds[5]</definition>
        <argsstring>[5]</argsstring>
        <name>inverteds</name>
        <initializer>= {
		(((Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba7fc56270e7a70fa81a5935b72eacbe29" kindref="member">Port::A</ref> and Gpios::isInverted) ? Gpios::mask : 0) | ...),
		(((Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba9d5ed678fe57bcca610140957afab571" kindref="member">Port::B</ref> and Gpios::isInverted) ? Gpios::mask : 0) | ...),
		(((Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba0d61f8370cad1d412f80b84d143e1257" kindref="member">Port::C</ref> and Gpios::isInverted) ? Gpios::mask : 0) | ...),
		(((Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19baf623e75af30e62bbd73d6df5b50bb7b5" kindref="member">Port::D</ref> and Gpios::isInverted) ? Gpios::mask : 0) | ...),
		(((Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19bac1d9f50f86825a1a2302ec2449c17196" kindref="member">Port::H</ref> and Gpios::isInverted) ? Gpios::mask : 0) | ...),
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="29" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_set_1a2a26322ccd9e3b9f18e305e755d08c88" prot="protected" static="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t modm::platform::GpioSet&lt; Gpios &gt;::masks[5]</definition>
        <argsstring>[5]</argsstring>
        <name>masks</name>
        <initializer>= {
		(((Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba7fc56270e7a70fa81a5935b72eacbe29" kindref="member">Port::A</ref>) ? Gpios::mask : 0) | ...),
		(((Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba9d5ed678fe57bcca610140957afab571" kindref="member">Port::B</ref>) ? Gpios::mask : 0) | ...),
		(((Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba0d61f8370cad1d412f80b84d143e1257" kindref="member">Port::C</ref>) ? Gpios::mask : 0) | ...),
		(((Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19baf623e75af30e62bbd73d6df5b50bb7b5" kindref="member">Port::D</ref>) ? Gpios::mask : 0) | ...),
		(((Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19bac1d9f50f86825a1a2302ec2449c17196" kindref="member">Port::H</ref>) ? Gpios::mask : 0) | ...),
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="38" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_set_1abec2a6602fbaf75ea0964e03f8be160c" prot="public" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioSet&lt; Gpios &gt;::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <initializer>= sizeof...(Gpios)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="58" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_set_1aebbd94a572609bd08993c3bdc0dcdfe4" prot="public" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioSet&lt; Gpios &gt;::number_of_ports</definition>
        <argsstring></argsstring>
        <name>number_of_ports</name>
        <initializer>= <ref refid="classmodm_1_1platform_1_1_gpio_set_1a1851400e8b64d524236ea9d82bc700b4" kindref="member">numberOfPorts</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="59" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a08b9e9289057904b432f94957ec61584" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint16_t</type>
        <definition>static constexpr uint16_t modm::platform::GpioSet&lt; Gpios &gt;::inverted</definition>
        <argsstring>(uint8_t id)</argsstring>
        <name>inverted</name>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="36" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1ad963118d9b39db0762a56280c21133bb" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint16_t</type>
        <definition>static constexpr uint16_t modm::platform::GpioSet&lt; Gpios &gt;::mask</definition>
        <argsstring>(uint8_t id)</argsstring>
        <name>mask</name>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="45" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a1ededb29a18404792a0fa9cf99361846" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>static constexpr uint32_t modm::platform::GpioSet&lt; Gpios &gt;::mask2</definition>
        <argsstring>(uint8_t id, uint8_t value=0b11)</argsstring>
        <name>mask2</name>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
          <defval>0b11</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="46" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a1851400e8b64d524236ea9d82bc700b4" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint8_t</type>
        <definition>static constexpr uint8_t modm::platform::GpioSet&lt; Gpios &gt;::numberOfPorts</definition>
        <argsstring>()</argsstring>
        <name>numberOfPorts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="52" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="52" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a5aa5e00f8f967ffe5d181323f9ca6604" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::setOutput</definition>
        <argsstring>()</argsstring>
        <name>setOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="61" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="61" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1abb5c26df952b46b4a90c3aa519b9b8f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::setOutput</definition>
        <argsstring>(bool status)</argsstring>
        <name>setOutput</name>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="70" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a1a5ededf5fd0c7f4b589b904db82b734" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::setOutput</definition>
        <argsstring>(OutputType type, OutputSpeed speed=OutputSpeed::MHz50)</argsstring>
        <name>setOutput</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" kindref="member">OutputType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" kindref="member">OutputSpeed</ref></type>
          <declname>speed</declname>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09a291c765b56a54ef8453ee3aceef60ed3" kindref="member">OutputSpeed::MHz50</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="76" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a7cfab12a8cc55efe2183916e82826617" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::configure</definition>
        <argsstring>(OutputType type, OutputSpeed speed=OutputSpeed::MHz50)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" kindref="member">OutputType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" kindref="member">OutputSpeed</ref></type>
          <declname>speed</declname>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09a291c765b56a54ef8453ee3aceef60ed3" kindref="member">OutputSpeed::MHz50</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="82" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="82" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a80e9e7313804cb2e95c5416875f3fc56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::setInput</definition>
        <argsstring>()</argsstring>
        <name>setInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="106" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="106" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a57b06aab321f1ba94dba5943e63bd9ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::setInput</definition>
        <argsstring>(InputType type)</argsstring>
        <name>setInput</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">InputType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="135" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a1d3f4da84b5d37feb9c42849c79a9f49" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::setAnalogInput</definition>
        <argsstring>()</argsstring>
        <name>setAnalogInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="141" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="141" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1ae9da8138cb88546c4284a2fd2a3f2cc5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::configure</definition>
        <argsstring>(InputType type)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">InputType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="150" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="150" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1abf83a79e73fcfb9dee63db66b2142bc0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::set</definition>
        <argsstring>()</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="169" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="169" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a65255e304f5d652a306243401f47dc5f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::set</definition>
        <argsstring>(bool status)</argsstring>
        <name>set</name>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="178" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="178" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1ae390ebc21a213fb68ae684aa2368ee6b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="184" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="184" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a6f3e3eca740ddb5e5399a203ae21a6e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::toggle</definition>
        <argsstring>()</argsstring>
        <name>toggle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="193" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="193" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a47802f1846eaa50d7f3dd4c3c9910581" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="222" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="222" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_set_1a81c628b4c3975de623e7dab42a5ac70b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioSet&lt; Gpios &gt;::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="256" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="256" bodyend="259"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1221">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
      <node id="1220">
        <label>modm::platform::GpioSet&lt; Gpios &gt;</label>
        <link refid="classmodm_1_1platform_1_1_gpio_set"/>
        <childnode refid="1221" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1223">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
      <node id="1222">
        <label>modm::platform::GpioSet&lt; Gpios &gt;</label>
        <link refid="classmodm_1_1platform_1_1_gpio_set"/>
        <childnode refid="1223" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" line="27" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/set.hpp" bodystart="26" bodyend="260"/>
    <listofallmembers>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a7cfab12a8cc55efe2183916e82826617" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>configure</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1ae9da8138cb88546c4284a2fd2a3f2cc5" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>configure</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a81c628b4c3975de623e7dab42a5ac70b" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>disconnect</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a5f683814888fa5a34c2bcf2db9b803a5" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>InputTrigger</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>InputType</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a08b9e9289057904b432f94957ec61584" prot="protected" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>inverted</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a2f9cb32c5ab352b06192102b81531c5c" prot="protected" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>inverteds</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a47802f1846eaa50d7f3dd4c3c9910581" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>lock</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1ad963118d9b39db0762a56280c21133bb" prot="protected" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>mask</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a1ededb29a18404792a0fa9cf99361846" prot="protected" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>mask2</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a2a26322ccd9e3b9f18e305e755d08c88" prot="protected" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>masks</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1aebbd94a572609bd08993c3bdc0dcdfe4" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>number_of_ports</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a1851400e8b64d524236ea9d82bc700b4" prot="protected" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>numberOfPorts</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>OutputSpeed</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>OutputType</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>Port</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1ae390ebc21a213fb68ae684aa2368ee6b" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>reset</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1abf83a79e73fcfb9dee63db66b2142bc0" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a65255e304f5d652a306243401f47dc5f" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a1d3f4da84b5d37feb9c42849c79a9f49" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>setAnalogInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a80e9e7313804cb2e95c5416875f3fc56" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a57b06aab321f1ba94dba5943e63bd9ed" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a5aa5e00f8f967ffe5d181323f9ca6604" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1abb5c26df952b46b4a90c3aa519b9b8f6" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a1a5ededf5fd0c7f4b589b904db82b734" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a6f3e3eca740ddb5e5399a203ae21a6e9" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>toggle</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1abec2a6602fbaf75ea0964e03f8be160c" prot="public" virt="non-virtual"><scope>modm::platform::GpioSet</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
