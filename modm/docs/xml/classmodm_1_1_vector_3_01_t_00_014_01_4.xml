<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_vector_3_01_t_00_014_01_4" kind="class" language="C++" prot="public">
    <compoundname>modm::Vector&lt; T, 4 &gt;</compoundname>
    <includes refid="vector4_8hpp" local="no">modm/math/geometry/vector4.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a2cb2db8b441083061399af92f7abaf92" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::Vector&lt; T, 4 &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="239" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ae1e06168324a8825b7de60ea919d3466" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::Vector&lt; T, 4 &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="240" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad5e0baa4b30038225492d7058a75bd33" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::Vector&lt; T, 4 &gt;::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="241" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a6fac91cda81a2a6f7afc1db7535e5b78" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::Vector&lt; T, 4 &gt;::w</definition>
        <argsstring></argsstring>
        <name>w</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="242" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad13b071046b8e88a5238440656603af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>()</argsstring>
        <name>Vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a9c964d203176b85788f47db440d3b3d6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(T inVal)</argsstring>
        <name>Vector</name>
        <param>
          <type>T</type>
          <declname>inVal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1abe1d14331b1a1984163ff681bb578b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(T inX, T inY, T inZ, T inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>T</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>T</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>T</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>T</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a6e751c001ad06f8a6de162c52bc2c7ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const Vector&lt; T, 1 &gt; &amp;inY, const Vector&lt; T, 1 &gt; &amp;inZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a6a29855d40e2de1dd0c8304c5d25c8dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const Vector&lt; T, 1 &gt; &amp;inY, const Vector&lt; T, 1 &gt; &amp;inZ, const T &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad7e77000309d24d7086be00e33ca86b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const Vector&lt; T, 1 &gt; &amp;inY, const T &amp;inZ, const T &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a8663521803e23fb71f186a829bbf412b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const T &amp;inY, const Vector&lt; T, 1 &gt; &amp;inZ, const T &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a26caa7534c3f3ee3b98797e04bae82f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const T &amp;inX, const Vector&lt; T, 1 &gt; &amp;inY, const Vector&lt; T, 1 &gt; &amp;inZ, const T &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ab9795f57f54b00c8dc415ce836817a9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const T &amp;inY, const T &amp;inZ, const T &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a492a8c192aa8a4b76ba947f806b1e647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const T &amp;inX, const Vector&lt; T, 1 &gt; &amp;inY, const T &amp;inZ, const T &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad40032c97c32c8c11bcfae9d9f3a342c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const Vector&lt; T, 1 &gt; &amp;inY, const T &amp;inZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a6ff6be132adbe54180a16fabead3af31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const T &amp;inY, const T &amp;inZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1af9b63084b45febdb47ba5060ff1315bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const T &amp;inX, const Vector&lt; T, 1 &gt; &amp;inY, const T &amp;inZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ab9360fe26383a7500a545d484ea0d246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const T &amp;inX, const T &amp;inY, const T &amp;inZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a6b312fac1bba32f2d2c663adbbc5cf41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const T &amp;inY, const Vector&lt; T, 1 &gt; &amp;inZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a97706fb0beeaedfa16711600090a326d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const T &amp;inX, const T &amp;inY, const Vector&lt; T, 1 &gt; &amp;inZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad4fe605c1f55d6713a5cf6a20fd930ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const T &amp;inX, const Vector&lt; T, 1 &gt; &amp;inY, const Vector&lt; T, 1 &gt; &amp;inZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a22db776de12982d146dc2ed24838290d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;inXY, const Vector&lt; T, 1 &gt; &amp;inZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inXY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a8fc8280ae858ec0554c1315b505fe75f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;inXY, const Vector&lt; T, 1 &gt; &amp;inZ, const T &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inXY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a79ba5d9a31de7f8e480c94da87532852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;inXY, const T &amp;inZ, const T &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inXY</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a214b0c3a1cf69dd7974d0322882bb4de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;inXY, const T &amp;inZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inXY</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a1a412b36a4d4609adde52b7b49d36769" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const Vector&lt; T, 2 &gt; &amp;inYZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inYZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a41f2a008d47dc144e3f9492f7684ec1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const Vector&lt; T, 2 &gt; &amp;inYZ, const T &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inYZ</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ae8bd95054c32b1a060f1013ef7a77462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const T &amp;inX, const Vector&lt; T, 2 &gt; &amp;inYZ, const T &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inYZ</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a510a3d90aff90806789a3a95f30fe8c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const T &amp;inX, const Vector&lt; T, 2 &gt; &amp;inYZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inYZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a26f88c870a7f408d93a2e281cc1f0814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const Vector&lt; T, 1 &gt; &amp;inY, const Vector&lt; T, 2 &gt; &amp;inZW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inZW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ae1a508a8d60f92a1cb7ded89894d2f6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const T &amp;inY, const Vector&lt; T, 2 &gt; &amp;inZW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inZW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1afa3d0ef58d6106ffb43191f5aff29918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const T &amp;inX, const T &amp;inY, const Vector&lt; T, 2 &gt; &amp;inZW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inZW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1aa177cdbbddfb31fc41db74c588ed4bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const T &amp;inX, const Vector&lt; T, 1 &gt; &amp;inY, const Vector&lt; T, 2 &gt; &amp;inZW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inZW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a407b9b0b20c39775d3a30258ff76d672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;inXY, const Vector&lt; T, 2 &gt; &amp;inZW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inXY</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>inZW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a1b310043eed69c3758319d005cc1c273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 3 &gt; &amp;inXYZ, const Vector&lt; T, 1 &gt; &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 3 &gt; &amp;</type>
          <declname>inXYZ</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ac35de47ba5975903a9cc9b6ebc7ec58e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 3 &gt; &amp;inXYZ, const T &amp;inW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 3 &gt; &amp;</type>
          <declname>inXYZ</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>inW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a47eca589cf33d1bd7e2e7a08fe59a554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T, 1 &gt; &amp;inX, const Vector&lt; T, 3 &gt; &amp;inYZW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 1 &gt; &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 3 &gt; &amp;</type>
          <declname>inYZW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ada6c7c2ff330bb7b3090484f4d5d72bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const T &amp;inX, const Vector&lt; T, 3 &gt; &amp;inYZW)</argsstring>
        <name>Vector</name>
        <param>
          <type>const T &amp;</type>
          <declname>inX</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 3 &gt; &amp;</type>
          <declname>inYZW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad35451007837b98a0af6cfe214e0b606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Matrix&lt; T, 4, 1 &gt; &amp;rhs)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, 4, 1 &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a00a1c5ca2fb49da1f8428a3ab2a273bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 4 &gt;::Vector</definition>
        <argsstring>(const Vector &amp;rhs)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ae60e3d553c3dbd6281c173dc6797c075" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Vector&lt; T, 4 &gt;::set</definition>
        <argsstring>(const T &amp;x, const T &amp;y, const T &amp;z, const T &amp;w)</argsstring>
        <name>set</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a62ce43df0802e6191184f1946fe49447" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Vector&lt; T, 4 &gt;::setX</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>setX</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad86938fae80483c731c697d07eefd5bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Vector&lt; T, 4 &gt;::setY</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>setY</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a0fd264b3376044163d6ea6c010f84e9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Vector&lt; T, 4 &gt;::setZ</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>setZ</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1abd1fa51c16158fb1af35ed804dbb70bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Vector&lt; T, 4 &gt;::setW</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>setW</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a2de1d1b4467fa50c60107ec25db4ff92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Vector&lt; T, 4 &gt;::getX</definition>
        <argsstring>() const</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a72ad15e56cdcd494047e16d905063d43" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Vector&lt; T, 4 &gt;::getY</definition>
        <argsstring>() const</argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ac2ee304489ef74add4b02e25054d1006" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Vector&lt; T, 4 &gt;::getZ</definition>
        <argsstring>() const</argsstring>
        <name>getZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a9663dc96a6c72169666b6bbc306a3f61" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Vector&lt; T, 4 &gt;::getW</definition>
        <argsstring>() const</argsstring>
        <name>getW</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad95b7b30740ddd03e66b93ce0ca4911a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; modm::Vector&lt; T, 4 &gt;::operator=</definition>
        <argsstring>(const Matrix&lt; T, 4, 1 &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, 4, 1 &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a615c0535dd85b44b2275666ea8a3b4e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; modm::Vector&lt; T, 4 &gt;::operator=</definition>
        <argsstring>(const Vector &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a4ac22bd6d44b1faa5af5cb9c17ea8a6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 4 &gt;::operator==</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1aef87e031bd595b0e5b8254879ecfcdde" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 4 &gt;::operator!=</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a41190f2af797797cdc30b7634a2b2481" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 4 &gt;::operator&lt;</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a1f643b6277ea1994781200f5e47cfcdf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 4 &gt;::operator&lt;=</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1aa8c698213acd811f9567b9798c07fa9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 4 &gt;::operator&gt;</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a57228be74b4cb5f5018c62ee48e13281" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 4 &gt;::operator&gt;=</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a9e9af14935f966e5536c232b21b090b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Vector&lt; T, 4 &gt;::operator[]</definition>
        <argsstring>(uint8_t index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad4a7bbe2fd892b01f55b63db89912dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; modm::Vector&lt; T, 4 &gt;::operator[]</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a4ff10a842b591a5120b4d31dae9bea9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T *</type>
        <definition>T* modm::Vector&lt; T, 4 &gt;::ptr</definition>
        <argsstring>()</argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ac1d40e4e03a86f7b4955a49175fb1a84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* modm::Vector&lt; T, 4 &gt;::ptr</definition>
        <argsstring>() const</argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a76c70d97286594697ce21e7e25c1d254" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector modm::Vector&lt; T, 4 &gt;::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a8cd4d70d122f99cba535e76ec3482996" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector modm::Vector&lt; T, 4 &gt;::operator+</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1adeb2c66c773fb62591e0552960dd6a54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector modm::Vector&lt; T, 4 &gt;::operator-</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a0d939031dfac945cfcc8d1c2fcfd8750" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T modm::Vector&lt; T, 4 &gt;::operator*</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1aaabf2bcb24495709f93f92c8e00ff4e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector modm::Vector&lt; T, 4 &gt;::operator*</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a1f1779813cfd11e2dbee1bb54e633e58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector modm::Vector&lt; T, 4 &gt;::operator/</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a7aa39212c99303c7c4a475889751856d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; modm::Vector&lt; T, 4 &gt;::operator+=</definition>
        <argsstring>(const Vector &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1aec870ee503aeeed6b28091697b339e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; modm::Vector&lt; T, 4 &gt;::operator-=</definition>
        <argsstring>(const Vector &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a05a5f4339072f97db40a45bee443526d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; modm::Vector&lt; T, 4 &gt;::operator*=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a2d9b3e3944acd26d503393e4907829b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; modm::Vector&lt; T, 4 &gt;::operator/=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a65069f8740a0e60f439ae6f65a891388" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float modm::Vector&lt; T, 4 &gt;::getLength</definition>
        <argsstring>() const</argsstring>
        <name>getLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a99d61adaab73c2e8c512ab1afa279e00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float modm::Vector&lt; T, 4 &gt;::getLengthSquared</definition>
        <argsstring>() const</argsstring>
        <name>getLengthSquared</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ae7af8251e6876e7d441be2b7620a789b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Vector&lt; T, 4 &gt;::scale</definition>
        <argsstring>(float newLength)</argsstring>
        <name>scale</name>
        <param>
          <type>float</type>
          <declname>newLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a5eccd586ad0c17fdd87997d13e0cbe81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector modm::Vector&lt; T, 4 &gt;::scaled</definition>
        <argsstring>(float newLength) const</argsstring>
        <name>scaled</name>
        <param>
          <type>float</type>
          <declname>newLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ac60a51e9a23138167fd8bb8de596c8f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Vector&lt; T, 4 &gt;::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a39568b4b8621a7ceb4e64b20c2c370d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector modm::Vector&lt; T, 4 &gt;::normalized</definition>
        <argsstring>() const</argsstring>
        <name>normalized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a88b6858f9c776f092fbb7f718814b69e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, 4, 1 &gt; &amp;</type>
        <definition>Matrix&lt;T, 4, 1&gt;&amp; modm::Vector&lt; T, 4 &gt;::asMatrix</definition>
        <argsstring>()</argsstring>
        <name>asMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1a4b4a7d3c89a85aab08a3df7f78ecd6d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, 4, 1 &gt; &amp;</type>
        <definition>const Matrix&lt;T, 4, 1&gt;&amp; modm::Vector&lt; T, 4 &gt;::asMatrix</definition>
        <argsstring>() const</argsstring>
        <name>asMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad27db957dc3e3d75895176f4340cfeab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, 1, 4 &gt; &amp;</type>
        <definition>Matrix&lt;T, 1, 4&gt;&amp; modm::Vector&lt; T, 4 &gt;::asTransposedMatrix</definition>
        <argsstring>()</argsstring>
        <name>asTransposedMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_014_01_4_1aa94e146552c288745172cb145c12bc69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, 1, 4 &gt; &amp;</type>
        <definition>const Matrix&lt;T, 1, 4&gt;&amp; modm::Vector&lt; T, 4 &gt;::asTransposedMatrix</definition>
        <argsstring>() const</argsstring>
        <name>asTransposedMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="164" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for handling common vector operations (4D) </para>    </briefdescription>
    <detaileddescription>
<para><itemizedlist>
<listitem><para>: addition of points</para></listitem><listitem><para>: different of points</para></listitem><listitem><para>: dot product or scalar multiplication / : scalar division</para></listitem></itemizedlist>
</para><para>Adapted from the implementation of Gaspard Petit (<ulink url="mailto:gaspardpetit@gmail.com">gaspardpetit@gmail.com</ulink>).</para><para><simplesect kind="see"><para>&lt;a href&quot;http://www-etud.iro.umontreal.ca/~petitg/cpp/point.html&quot;&gt;Homepage</para></simplesect>
<simplesect kind="author"><para>Niklas Hauser </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="1822">
        <label>T</label>
      </node>
      <node id="1821">
        <label>modm::Vector&lt; T, 4 &gt;</label>
        <link refid="classmodm_1_1_vector_3_01_t_00_014_01_4"/>
        <childnode refid="1822" relation="usage">
          <edgelabel>w</edgelabel>
          <edgelabel>x</edgelabel>
          <edgelabel>y</edgelabel>
          <edgelabel>z</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" line="39" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector4.hpp" bodystart="38" bodyend="243"/>
    <listofallmembers>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a88b6858f9c776f092fbb7f718814b69e" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>asMatrix</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a4b4a7d3c89a85aab08a3df7f78ecd6d9" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>asMatrix</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad27db957dc3e3d75895176f4340cfeab" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>asTransposedMatrix</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1aa94e146552c288745172cb145c12bc69" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>asTransposedMatrix</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a65069f8740a0e60f439ae6f65a891388" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>getLength</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a99d61adaab73c2e8c512ab1afa279e00" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>getLengthSquared</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a9663dc96a6c72169666b6bbc306a3f61" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>getW</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a2de1d1b4467fa50c60107ec25db4ff92" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>getX</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a72ad15e56cdcd494047e16d905063d43" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>getY</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ac2ee304489ef74add4b02e25054d1006" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>getZ</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ac60a51e9a23138167fd8bb8de596c8f3" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>normalize</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a39568b4b8621a7ceb4e64b20c2c370d4" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>normalized</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1aef87e031bd595b0e5b8254879ecfcdde" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator!=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a0d939031dfac945cfcc8d1c2fcfd8750" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator*</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1aaabf2bcb24495709f93f92c8e00ff4e8" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator*</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a05a5f4339072f97db40a45bee443526d" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator*=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a8cd4d70d122f99cba535e76ec3482996" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator+</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a7aa39212c99303c7c4a475889751856d" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator+=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a76c70d97286594697ce21e7e25c1d254" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator-</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1adeb2c66c773fb62591e0552960dd6a54" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator-</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1aec870ee503aeeed6b28091697b339e75" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator-=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a1f1779813cfd11e2dbee1bb54e633e58" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator/</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a2d9b3e3944acd26d503393e4907829b6" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator/=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a41190f2af797797cdc30b7634a2b2481" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator&lt;</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a1f643b6277ea1994781200f5e47cfcdf" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator&lt;=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad95b7b30740ddd03e66b93ce0ca4911a" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a615c0535dd85b44b2275666ea8a3b4e8" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a4ac22bd6d44b1faa5af5cb9c17ea8a6b" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator==</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1aa8c698213acd811f9567b9798c07fa9c" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator&gt;</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a57228be74b4cb5f5018c62ee48e13281" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator&gt;=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a9e9af14935f966e5536c232b21b090b3" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator[]</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad4a7bbe2fd892b01f55b63db89912dd9" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>operator[]</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a4ff10a842b591a5120b4d31dae9bea9b" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>ptr</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ac1d40e4e03a86f7b4955a49175fb1a84" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>ptr</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ae7af8251e6876e7d441be2b7620a789b" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>scale</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a5eccd586ad0c17fdd87997d13e0cbe81" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>scaled</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ae60e3d553c3dbd6281c173dc6797c075" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>set</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1abd1fa51c16158fb1af35ed804dbb70bc" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>setW</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a62ce43df0802e6191184f1946fe49447" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>setX</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad86938fae80483c731c697d07eefd5bd" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>setY</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a0fd264b3376044163d6ea6c010f84e9c" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>setZ</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad13b071046b8e88a5238440656603af5" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a9c964d203176b85788f47db440d3b3d6" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1abe1d14331b1a1984163ff681bb578b25" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a6e751c001ad06f8a6de162c52bc2c7ed" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a6a29855d40e2de1dd0c8304c5d25c8dc" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad7e77000309d24d7086be00e33ca86b0" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a8663521803e23fb71f186a829bbf412b" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a26caa7534c3f3ee3b98797e04bae82f3" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ab9795f57f54b00c8dc415ce836817a9c" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a492a8c192aa8a4b76ba947f806b1e647" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad40032c97c32c8c11bcfae9d9f3a342c" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a6ff6be132adbe54180a16fabead3af31" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1af9b63084b45febdb47ba5060ff1315bb" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ab9360fe26383a7500a545d484ea0d246" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a6b312fac1bba32f2d2c663adbbc5cf41" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a97706fb0beeaedfa16711600090a326d" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad4fe605c1f55d6713a5cf6a20fd930ff" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a22db776de12982d146dc2ed24838290d" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a8fc8280ae858ec0554c1315b505fe75f" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a79ba5d9a31de7f8e480c94da87532852" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a214b0c3a1cf69dd7974d0322882bb4de" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a1a412b36a4d4609adde52b7b49d36769" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a41f2a008d47dc144e3f9492f7684ec1c" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ae8bd95054c32b1a060f1013ef7a77462" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a510a3d90aff90806789a3a95f30fe8c2" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a26f88c870a7f408d93a2e281cc1f0814" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ae1a508a8d60f92a1cb7ded89894d2f6b" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1afa3d0ef58d6106ffb43191f5aff29918" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1aa177cdbbddfb31fc41db74c588ed4bdc" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a407b9b0b20c39775d3a30258ff76d672" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a1b310043eed69c3758319d005cc1c273" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ac35de47ba5975903a9cc9b6ebc7ec58e" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a47eca589cf33d1bd7e2e7a08fe59a554" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ada6c7c2ff330bb7b3090484f4d5d72bf" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad35451007837b98a0af6cfe214e0b606" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a00a1c5ca2fb49da1f8428a3ab2a273bb" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a6fac91cda81a2a6f7afc1db7535e5b78" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>w</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1a2cb2db8b441083061399af92f7abaf92" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>x</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ae1e06168324a8825b7de60ea919d3466" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>y</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_014_01_4_1ad5e0baa4b30038225492d7058a75bd33" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 4 &gt;</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
