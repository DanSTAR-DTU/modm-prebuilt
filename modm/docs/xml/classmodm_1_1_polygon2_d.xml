<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classmodm_1_1_polygon2_d" kind="class" language="C++" prot="public">
    <compoundname>modm::Polygon2D</compoundname>
    <basecompoundref refid="classmodm_1_1_point_set2_d" prot="public" virt="non-virtual">modm::PointSet2D&lt; T &gt;</basecompoundref>
    <includes refid="circle__2d_8hpp" local="no">modm/math/geometry/circle_2d.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmodm_1_1_polygon2_d_1a47ccc8e447935a9bf049975de519cf9e" prot="private" static="no">
        <type>std::size_t</type>
        <definition>using modm::Polygon2D&lt; T &gt;::SizeType =  std::size_t</definition>
        <argsstring></argsstring>
        <name>SizeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="44" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1_polygon2_d_1a4582f299c62959e7550aa0751d9d3fad" prot="private" static="no">
        <type>typename <ref refid="classmodm_1_1_point_set2_d" kindref="compound">PointSet2D</ref>&lt; T &gt;::<ref refid="classmodm_1_1_point_set2_d_1a7e72fd08abf050ddad5faedee7235a4e" kindref="member">PointType</ref></type>
        <definition>using modm::Polygon2D&lt; T &gt;::PointType =  typename PointSet2D&lt;T&gt;::PointType</definition>
        <argsstring></argsstring>
        <name>PointType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="45" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_polygon2_d_1a0114b91a9f8211252d4a83f603519842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Polygon2D&lt; T &gt;::Polygon2D</definition>
        <argsstring>(SizeType n)</argsstring>
        <name>Polygon2D</name>
        <param>
          <type><ref refid="classmodm_1_1_point_set2_d_1aa92434dec83d127ed827d643e0958e6c" kindref="member">SizeType</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Constructs a polygon capable of holding n points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_polygon2_d_1ae270bdf79adf71a01ebce27ab6b5f079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Polygon2D&lt; T &gt;::Polygon2D</definition>
        <argsstring>(std::initializer_list&lt; PointType &gt; init)</argsstring>
        <name>Polygon2D</name>
        <param>
          <type>std::initializer_list&lt; <ref refid="classmodm_1_1_point_set2_d_1a7e72fd08abf050ddad5faedee7235a4e" kindref="member">PointType</ref> &gt;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_polygon2_d_1a4f8a30073d262aa9fa612cb8449ba72d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Polygon2D&lt; T &gt;::Polygon2D</definition>
        <argsstring>(const Polygon2D &amp;other)</argsstring>
        <name>Polygon2D</name>
        <param>
          <type>const <ref refid="classmodm_1_1_polygon2_d" kindref="compound">Polygon2D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_polygon2_d_1a076252850d36bcd5694d5675297fca39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_polygon2_d" kindref="compound">Polygon2D</ref> &amp;</type>
        <definition>Polygon2D&amp; modm::Polygon2D&lt; T &gt;::operator=</definition>
        <argsstring>(const Polygon2D &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_polygon2_d" kindref="compound">Polygon2D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_polygon2_d_1a3bb7078cbd94ed52af70494af4adb2ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_polygon2_d" kindref="compound">Polygon2D</ref> &amp;</type>
        <definition>Polygon2D&amp; modm::Polygon2D&lt; T &gt;::operator&lt;&lt;</definition>
        <argsstring>(const PointType &amp;point)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const <ref refid="classmodm_1_1_point_set2_d_1a7e72fd08abf050ddad5faedee7235a4e" kindref="member">PointType</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>append a point to the polygon </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_polygon2_d_1adb66c10a6954012d6a517a312ced40ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Polygon2D&lt; T &gt;::intersects</definition>
        <argsstring>(const Polygon2D &amp;other) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classmodm_1_1_polygon2_d" kindref="compound">Polygon2D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Check if a intersection exists. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000014"><xreftitle>Todo</xreftitle><xrefdescription><para>Currently a brute force approach is used here, needs to be optimized </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_polygon2_d_1a7c2d1f6a103e822ffaafdb25df2416df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Polygon2D&lt; T &gt;::intersects</definition>
        <argsstring>(const Circle2D&lt; T &gt; &amp;circle) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classmodm_1_1_circle2_d" kindref="compound">Circle2D</ref>&lt; T &gt; &amp;</type>
          <declname>circle</declname>
        </param>
        <briefdescription>
<para>Check if a intersection exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_polygon2_d_1a3975e7e9e21661d57ee63269da4a6a71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Polygon2D&lt; T &gt;::intersects</definition>
        <argsstring>(const LineSegment2D&lt; T &gt; &amp;segment) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classmodm_1_1_line_segment2_d" kindref="compound">LineSegment2D</ref>&lt; T &gt; &amp;</type>
          <declname>segment</declname>
        </param>
        <briefdescription>
<para>Check if a intersection exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_polygon2_d_1aed6bdeca9a8151aec8c5549112dae2bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Polygon2D&lt; T &gt;::intersects</definition>
        <argsstring>(const Ray2D&lt; T &gt; &amp;segment) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classmodm_1_1_ray2_d" kindref="compound">Ray2D</ref>&lt; T &gt; &amp;</type>
          <declname>segment</declname>
        </param>
        <briefdescription>
<para>Check if a intersection exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_polygon2_d_1a187d2ec1ca27ee251c208abb8895b222" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Polygon2D&lt; T &gt;::getIntersections</definition>
        <argsstring>(const LineSegment2D&lt; T &gt; &amp;segment, PointSet2D&lt; T &gt; &amp;intersectionPoints) const</argsstring>
        <name>getIntersections</name>
        <param>
          <type>const <ref refid="classmodm_1_1_line_segment2_d" kindref="compound">LineSegment2D</ref>&lt; T &gt; &amp;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type><ref refid="classmodm_1_1_point_set2_d" kindref="compound">PointSet2D</ref>&lt; T &gt; &amp;</type>
          <declname>intersectionPoints</declname>
        </param>
        <briefdescription>
<para>Calculate the intersection point(s) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_polygon2_d_1adbd1e635cdb8f9f07923f671c5abd8d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Polygon2D&lt; T &gt;::isInside</definition>
        <argsstring>(const PointType &amp;point)</argsstring>
        <name>isInside</name>
        <param>
          <type>const <ref refid="classmodm_1_1_point_set2_d_1a7e72fd08abf050ddad5faedee7235a4e" kindref="member">PointType</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the point is contained inside the area of the polygon.</para>
<para>The borders of the polygon are included in the area of the polygon.</para>
<para><simplesect kind="warning"><para>Only works for convex polygons!</para>
</simplesect>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if point is contained in the area, <computeroutput>false</computeroutput> if it is outside. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/polygon_2d.hpp" line="102" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Polygon. </para>
    </briefdescription>
    <detaileddescription>
<para>The Polygon class provides a vector of points. The polygon is implicit closed, which means the first and the last point are connected.</para>
<para><simplesect kind="author"><para>Fabian Greif </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1450">
        <label>modm::PointSet2D&lt; T &gt;</label>
        <link refid="classmodm_1_1_point_set2_d"/>
      </node>
      <node id="1449">
        <label>modm::Polygon2D&lt; T &gt;</label>
        <link refid="classmodm_1_1_polygon2_d"/>
        <childnode refid="1450" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1452">
        <label>modm::PointSet2D&lt; T &gt;</label>
        <link refid="classmodm_1_1_point_set2_d"/>
        <childnode refid="1453" relation="usage">
          <edgelabel>points</edgelabel>
        </childnode>
      </node>
      <node id="1453">
        <label>modm::DynamicArray&lt; modm::Vector&lt; T, 2 &gt; &gt;</label>
        <link refid="classmodm_1_1_dynamic_array"/>
      </node>
      <node id="1451">
        <label>modm::Polygon2D&lt; T &gt;</label>
        <link refid="classmodm_1_1_polygon2_d"/>
        <childnode refid="1452" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/circle_2d.hpp" line="32" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/circle_2d.hpp" bodystart="32" bodyend="-1"/>
    <listofallmembers>
      <member refid="classmodm_1_1_point_set2_d_1a3c3124dc4e7b5c19c5f1d9b81b73593b" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>append</name></member>
      <member refid="classmodm_1_1_point_set2_d_1a825a8904e5b7c215e14e701cec3dcb0c" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>begin</name></member>
      <member refid="classmodm_1_1_point_set2_d_1ab9b79a0f7cabeaa8fe627c5d1dbcc004" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>begin</name></member>
      <member refid="classmodm_1_1_point_set2_d_1a749ec8f728b654f0ff0e6cb3fb72ccd1" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>const_iterator</name></member>
      <member refid="classmodm_1_1_point_set2_d_1af424f740edbfe1215cb9e4210fba71a1" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>end</name></member>
      <member refid="classmodm_1_1_point_set2_d_1a7e9e4b71cc49a3ef06faf09a6c60c128" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>end</name></member>
      <member refid="classmodm_1_1_polygon2_d_1a187d2ec1ca27ee251c208abb8895b222" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>getIntersections</name></member>
      <member refid="classmodm_1_1_point_set2_d_1ad17f8136bd93cc70c3428b018b853ba5" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>getNumberOfPoints</name></member>
      <member refid="classmodm_1_1_polygon2_d_1adb66c10a6954012d6a517a312ced40ac" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>intersects</name></member>
      <member refid="classmodm_1_1_polygon2_d_1a7c2d1f6a103e822ffaafdb25df2416df" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>intersects</name></member>
      <member refid="classmodm_1_1_polygon2_d_1a3975e7e9e21661d57ee63269da4a6a71" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>intersects</name></member>
      <member refid="classmodm_1_1_polygon2_d_1aed6bdeca9a8151aec8c5549112dae2bb" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>intersects</name></member>
      <member refid="classmodm_1_1_polygon2_d_1adbd1e635cdb8f9f07923f671c5abd8d0" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>isInside</name></member>
      <member refid="classmodm_1_1_point_set2_d_1a6537a20cebaa1b163dfee8fc0c10ca7b" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>iterator</name></member>
      <member refid="classmodm_1_1_point_set2_d_1a3ceca55e7fb57d259f3e13cb0d98a6d1" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>operator []</name></member>
      <member refid="classmodm_1_1_point_set2_d_1a766dbb8b8f765b9c1a06a4c7c2fea731" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>operator []</name></member>
      <member refid="classmodm_1_1_polygon2_d_1a3bb7078cbd94ed52af70494af4adb2ba" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_polygon2_d_1a076252850d36bcd5694d5675297fca39" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>operator=</name></member>
      <member refid="classmodm_1_1_point_set2_d_1ac6d67c2559c2121572d4bd32ed5c544e" prot="public" virt="non-virtual" ambiguityscope="modm::PointSet2D::"><scope>modm::Polygon2D</scope><name>operator=</name></member>
      <member refid="classmodm_1_1_point_set2_d_1aa2d7405b9089475830b82efd6f8f1e62" prot="protected" virt="non-virtual"><scope>modm::Polygon2D</scope><name>points</name></member>
      <member refid="classmodm_1_1_point_set2_d_1abce1a4df708458b3f7aee60cb54595e6" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>PointSet2D</name></member>
      <member refid="classmodm_1_1_point_set2_d_1a22314345a40be5fc38cf661421ea0962" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>PointSet2D</name></member>
      <member refid="classmodm_1_1_point_set2_d_1a31bb8481cfb8db5c0b99d3e779792ee2" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>PointSet2D</name></member>
      <member refid="classmodm_1_1_polygon2_d_1a4582f299c62959e7550aa0751d9d3fad" prot="private" virt="non-virtual"><scope>modm::Polygon2D</scope><name>PointType</name></member>
      <member refid="classmodm_1_1_polygon2_d_1a0114b91a9f8211252d4a83f603519842" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>Polygon2D</name></member>
      <member refid="classmodm_1_1_polygon2_d_1ae270bdf79adf71a01ebce27ab6b5f079" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>Polygon2D</name></member>
      <member refid="classmodm_1_1_polygon2_d_1a4f8a30073d262aa9fa612cb8449ba72d" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>Polygon2D</name></member>
      <member refid="classmodm_1_1_point_set2_d_1aa3d4bd59ab548f54f35d25f5af946b66" prot="public" virt="non-virtual"><scope>modm::Polygon2D</scope><name>removeAll</name></member>
      <member refid="classmodm_1_1_polygon2_d_1a47ccc8e447935a9bf049975de519cf9e" prot="private" virt="non-virtual"><scope>modm::Polygon2D</scope><name>SizeType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
