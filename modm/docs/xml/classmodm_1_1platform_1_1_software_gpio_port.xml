<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1platform_1_1_software_gpio_port" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::SoftwareGpioPort</compoundname>
    <basecompoundref refid="classmodm_1_1_gpio_port" prot="public" virt="non-virtual">modm::GpioPort</basecompoundref>
    <basecompoundref refid="classmodm_1_1platform_1_1_gpio_set" prot="public" virt="non-virtual">modm::platform::GpioSet&lt; Gpios... &gt;</basecompoundref>
    <includes refid="software__port_8hpp" local="no">modm/platform/gpio/software_port.hpp</includes>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>Gpios</declname>
        <defname>Gpios</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_software_gpio_port_1a198d78054faf75679d3c286707d6d09c" prot="private" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_set" kindref="compound">GpioSet</ref>&lt; Gpios... &gt;</type>
        <definition>using modm::platform::SoftwareGpioPort&lt; Gpios &gt;::Set =  GpioSet&lt;Gpios...&gt;</definition>
        <argsstring></argsstring>
        <name>Set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" line="43" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_software_gpio_port_1abf53f4aa9e9ef8be5e74d8b378b10fe8" prot="public" static="no">
        <type>std::conditional_t&lt;(<ref refid="classmodm_1_1_gpio_port_1abe0568b16960fc23df2c4ea72617d67a" kindref="member">width</ref> &gt; 8), std::conditional_t&lt;(<ref refid="classmodm_1_1_gpio_port_1abe0568b16960fc23df2c4ea72617d67a" kindref="member">width</ref> &gt; 16), uint32_t, uint16_t &gt;, uint8_t &gt;</type>
        <definition>using modm::platform::SoftwareGpioPort&lt; Gpios &gt;::PortType =  std::conditional_t&lt; (width &gt; 8), std::conditional_t&lt; (width &gt; 16), uint32_t, uint16_t &gt;, uint8_t &gt;</definition>
        <argsstring></argsstring>
        <name>PortType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" line="47" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_software_gpio_port_1ae86ec068d98e337b47840070744e4771" prot="protected" static="yes" mutable="no">
        <type>constexpr int8_t</type>
        <definition>constexpr int8_t modm::platform::SoftwareGpioPort&lt; Gpios &gt;::shift_masks[5][width]</definition>
        <argsstring>[5][width]</argsstring>
        <name>shift_masks</name>
        <initializer>= {
		{(Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba7fc56270e7a70fa81a5935b72eacbe29" kindref="member">Set::Port::A</ref> ? Gpios::pin : -1)...},
		{(Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba9d5ed678fe57bcca610140957afab571" kindref="member">Set::Port::B</ref> ? Gpios::pin : -1)...},
		{(Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba0d61f8370cad1d412f80b84d143e1257" kindref="member">Set::Port::C</ref> ? Gpios::pin : -1)...},
		{(Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19baf623e75af30e62bbd73d6df5b50bb7b5" kindref="member">Set::Port::D</ref> ? Gpios::pin : -1)...},
		{(Gpios::port == <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19bac1d9f50f86825a1a2302ec2449c17196" kindref="member">Set::Port::H</ref> ? Gpios::pin : -1)...},
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" line="56" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_software_gpio_port_1a717e863b9f0c4d1cc1fa09d8aad1766b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classmodm_1_1_gpio_port_1a7ff5dde1f0e7851f0059d35be50bea33" kindref="member">DataOrder</ref></type>
        <definition>static constexpr DataOrder modm::platform::SoftwareGpioPort&lt; Gpios &gt;::getDataOrder</definition>
        <argsstring>()</argsstring>
        <name>getDataOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" line="52" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" bodystart="52" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_software_gpio_port_1a9cc76d73462ec43b656d62c81f88dc71" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_gpio_port_1a7bfb4242ca91cfe30823d1f4167f2c32" kindref="member">PortType</ref></type>
        <definition>static PortType modm::platform::SoftwareGpioPort&lt; Gpios &gt;::isSet</definition>
        <argsstring>()</argsstring>
        <name>isSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" line="68" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" bodystart="68" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_software_gpio_port_1ac5bfdefc6fb8b927be65455b2cadcdaa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SoftwareGpioPort&lt; Gpios &gt;::write</definition>
        <argsstring>(PortType data)</argsstring>
        <name>write</name>
        <param>
          <type><ref refid="classmodm_1_1_gpio_port_1a7bfb4242ca91cfe30823d1f4167f2c32" kindref="member">PortType</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" line="249" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" bodystart="249" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_software_gpio_port_1ab84df8ebdb316675aead53784dfd67f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_gpio_port_1a7bfb4242ca91cfe30823d1f4167f2c32" kindref="member">PortType</ref></type>
        <definition>static PortType modm::platform::SoftwareGpioPort&lt; Gpios &gt;::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" line="433" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" bodystart="433" bodyend="612"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_software_gpio_port_1a27adafb45294dfffe5badc484672902f" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int8_t</type>
        <definition>static constexpr int8_t modm::platform::SoftwareGpioPort&lt; Gpios &gt;::shift_mask</definition>
        <argsstring>(uint8_t id, uint8_t pos)</argsstring>
        <name>shift_mask</name>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" line="63" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Create an up to 32-bit port from arbitrary pins.</para><para>This class optimizes the data type for the <computeroutput><ref refid="classmodm_1_1platform_1_1_software_gpio_port_1ab84df8ebdb316675aead53784dfd67f8" kindref="member">read()</ref></computeroutput> and <computeroutput><ref refid="classmodm_1_1platform_1_1_software_gpio_port_1ac5bfdefc6fb8b927be65455b2cadcdaa" kindref="member">write()</ref></computeroutput> methods. Supplying up to 8 Gpios will use <computeroutput>uint8_t</computeroutput>, up to 16 Gpios <computeroutput>uint16_t</computeroutput> and up to 32 Gpios <computeroutput>uint32_t</computeroutput>.</para><para><simplesect kind="note"><para>Since the bit order is explicitly given by the order of template arguments, this class only supports <computeroutput><ref refid="classmodm_1_1_gpio_port_1a7ff5dde1f0e7851f0059d35be50bea33a960b44c579bc2f6818d2daaf9e4c16f0" kindref="member">DataOrder::Normal</ref></computeroutput>. If you need reverse bit order, reverse the order of <computeroutput>Gpios</computeroutput>!</para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Gpios</parametername>
</parameternamelist>
<parameterdescription>
<para>Up to 32 <ref refid="classmodm_1_1_gpio_i_o" kindref="compound">GpioIO</ref> classes, ordered MSB to LSB</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Niklas Hauser </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1513">
        <label>modm::platform::SoftwareGpioPort&lt; Gpios &gt;</label>
        <link refid="classmodm_1_1platform_1_1_software_gpio_port"/>
        <childnode refid="1514" relation="public-inheritance">
        </childnode>
        <childnode refid="1515" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1515">
        <label>modm::platform::GpioSet&lt; Gpios... &gt;</label>
        <link refid="classmodm_1_1platform_1_1_gpio_set"/>
        <childnode refid="1516" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1514">
        <label>modm::GpioPort</label>
        <link refid="classmodm_1_1_gpio_port"/>
      </node>
      <node id="1516">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1517">
        <label>modm::platform::SoftwareGpioPort&lt; Gpios &gt;</label>
        <link refid="classmodm_1_1platform_1_1_software_gpio_port"/>
        <childnode refid="1518" relation="public-inheritance">
        </childnode>
        <childnode refid="1519" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1519">
        <label>modm::platform::GpioSet&lt; Gpios... &gt;</label>
        <link refid="classmodm_1_1platform_1_1_gpio_set"/>
        <childnode refid="1520" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1518">
        <label>modm::GpioPort</label>
        <link refid="classmodm_1_1_gpio_port"/>
      </node>
      <node id="1520">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" line="42" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/software_port.hpp" bodystart="41" bodyend="613"/>
    <listofallmembers>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a7cfab12a8cc55efe2183916e82826617" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>configure</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1ae9da8138cb88546c4284a2fd2a3f2cc5" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>configure</name></member>
      <member refid="classmodm_1_1_gpio_port_1a7ff5dde1f0e7851f0059d35be50bea33" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>DataOrder</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a81c628b4c3975de623e7dab42a5ac70b" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>disconnect</name></member>
      <member refid="classmodm_1_1platform_1_1_software_gpio_port_1a717e863b9f0c4d1cc1fa09d8aad1766b" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>getDataOrder</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a5f683814888fa5a34c2bcf2db9b803a5" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>InputTrigger</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>InputType</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a08b9e9289057904b432f94957ec61584" prot="protected" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>inverted</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a2f9cb32c5ab352b06192102b81531c5c" prot="protected" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>inverteds</name></member>
      <member refid="classmodm_1_1platform_1_1_software_gpio_port_1a9cc76d73462ec43b656d62c81f88dc71" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>isSet</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a47802f1846eaa50d7f3dd4c3c9910581" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>lock</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1ad963118d9b39db0762a56280c21133bb" prot="protected" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>mask</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a1ededb29a18404792a0fa9cf99361846" prot="protected" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>mask2</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a2a26322ccd9e3b9f18e305e755d08c88" prot="protected" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>masks</name></member>
      <member refid="classmodm_1_1_gpio_port_1a0aeb54e20c1310dc35764c7f82112d2f" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::SoftwareGpioPort</scope><name>number_of_ports</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1aebbd94a572609bd08993c3bdc0dcdfe4" prot="public" virt="non-virtual" ambiguityscope="GpioSet&lt; Gpios... &gt;::"><scope>modm::platform::SoftwareGpioPort</scope><name>number_of_ports</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a1851400e8b64d524236ea9d82bc700b4" prot="protected" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>numberOfPorts</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>OutputSpeed</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>OutputType</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>Port</name></member>
      <member refid="classmodm_1_1platform_1_1_software_gpio_port_1abf53f4aa9e9ef8be5e74d8b378b10fe8" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>PortType</name></member>
      <member refid="classmodm_1_1platform_1_1_software_gpio_port_1ab84df8ebdb316675aead53784dfd67f8" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>read</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1ae390ebc21a213fb68ae684aa2368ee6b" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>reset</name></member>
      <member refid="classmodm_1_1platform_1_1_software_gpio_port_1a198d78054faf75679d3c286707d6d09c" prot="private" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>Set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1abf83a79e73fcfb9dee63db66b2142bc0" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a65255e304f5d652a306243401f47dc5f" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a1d3f4da84b5d37feb9c42849c79a9f49" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>setAnalogInput</name></member>
      <member refid="classmodm_1_1_gpio_port_1a0531406df14f6db9324668b80f62ba34" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::SoftwareGpioPort</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a80e9e7313804cb2e95c5416875f3fc56" prot="public" virt="non-virtual" ambiguityscope="GpioSet&lt; Gpios... &gt;::"><scope>modm::platform::SoftwareGpioPort</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a57b06aab321f1ba94dba5943e63bd9ed" prot="public" virt="non-virtual" ambiguityscope="GpioSet&lt; Gpios... &gt;::"><scope>modm::platform::SoftwareGpioPort</scope><name>setInput</name></member>
      <member refid="classmodm_1_1_gpio_port_1afc30ee976ae40d57c2e89305926939ac" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::SoftwareGpioPort</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a5aa5e00f8f967ffe5d181323f9ca6604" prot="public" virt="non-virtual" ambiguityscope="GpioSet&lt; Gpios... &gt;::"><scope>modm::platform::SoftwareGpioPort</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1abb5c26df952b46b4a90c3aa519b9b8f6" prot="public" virt="non-virtual" ambiguityscope="GpioSet&lt; Gpios... &gt;::"><scope>modm::platform::SoftwareGpioPort</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a1a5ededf5fd0c7f4b589b904db82b734" prot="public" virt="non-virtual" ambiguityscope="GpioSet&lt; Gpios... &gt;::"><scope>modm::platform::SoftwareGpioPort</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_software_gpio_port_1a27adafb45294dfffe5badc484672902f" prot="protected" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>shift_mask</name></member>
      <member refid="classmodm_1_1platform_1_1_software_gpio_port_1ae86ec068d98e337b47840070744e4771" prot="protected" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>shift_masks</name></member>
      <member refid="classmodm_1_1_gpio_port_1af9bd5b0377caca0d18099421a8d30e49" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::SoftwareGpioPort</scope><name>toggle</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1a6f3e3eca740ddb5e5399a203ae21a6e9" prot="public" virt="non-virtual" ambiguityscope="GpioSet&lt; Gpios... &gt;::"><scope>modm::platform::SoftwareGpioPort</scope><name>toggle</name></member>
      <member refid="classmodm_1_1_gpio_port_1abe0568b16960fc23df2c4ea72617d67a" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::SoftwareGpioPort</scope><name>width</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_set_1abec2a6602fbaf75ea0964e03f8be160c" prot="public" virt="non-virtual" ambiguityscope="GpioSet&lt; Gpios... &gt;::"><scope>modm::platform::SoftwareGpioPort</scope><name>width</name></member>
      <member refid="classmodm_1_1platform_1_1_software_gpio_port_1ac5bfdefc6fb8b927be65455b2cadcdaa" prot="public" virt="non-virtual"><scope>modm::platform::SoftwareGpioPort</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
