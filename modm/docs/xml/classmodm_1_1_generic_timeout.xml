<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classmodm_1_1_generic_timeout" kind="class" language="C++" prot="public">
    <compoundname>modm::GenericTimeout</compoundname>
    <includes refid="timeout_8hpp" local="no">modm/processing/timer/timeout.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Clock</declname>
        <defname>Clock</defname>
      </param>
      <param>
        <type>class</type>
        <declname>TimestampType</declname>
        <defname>TimestampType</defname>
        <defval><ref refid="group__modm__processing__timer_1ga8f3b60fc7930db595007904dc1e2090d" kindref="member">modm::Timestamp</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classmodm_1_1_generic_timeout_1a07e3f8bf458d28127e7e3c339d9681ad" prot="private" static="no" strong="no">
        <type>uint8_t</type>
        <name>InternalState</name>
        <enumvalue id="classmodm_1_1_generic_timeout_1a07e3f8bf458d28127e7e3c339d9681adaf27003664b7137f0c50d8b4c1e9b0549" prot="private">
          <name>STOPPED</name>
          <initializer>= 0b000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1_generic_timeout_1a07e3f8bf458d28127e7e3c339d9681adadbe9931f1d93172a137305f5e098359e" prot="private">
          <name>EXECUTED</name>
          <initializer>= 0b001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1_generic_timeout_1a07e3f8bf458d28127e7e3c339d9681adaf9de254b542aa5d1a9764f2e8e874bf2" prot="private">
          <name>EXPIRED</name>
          <initializer>= 0b010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1_generic_timeout_1a07e3f8bf458d28127e7e3c339d9681ada7723ef7f959f6c9b3297255ff2b794e8" prot="private">
          <name>ARMED</name>
          <initializer>= 0b100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1_generic_timeout_1a07e3f8bf458d28127e7e3c339d9681adac2e2c10cfe40b0544adc03a2cd7771f8" prot="private">
          <name>STATUS_MASK</name>
          <initializer>= 0b110</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="106" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" bodystart="104" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1_generic_timeout_1a3813ea059f7ef7fc56a776c54f2f69e6" prot="private" static="no" mutable="no">
        <type>TimestampType</type>
        <definition>TimestampType modm::GenericTimeout&lt; Clock, TimestampType &gt;::endTime</definition>
        <argsstring></argsstring>
        <name>endTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="114" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_generic_timeout_1a9dd7b5a5c2dfe6ffd87ae778b12cd87e" prot="private" static="no" mutable="yes">
        <type>uint8_t</type>
        <definition>uint8_t modm::GenericTimeout&lt; Clock, TimestampType &gt;::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="115" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmodm_1_1_generic_timeout_1a01ee9ed70e7abf682b850d906630694d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class GenericPeriodicTimer&lt; Clock, TimestampType &gt;</definition>
        <argsstring></argsstring>
        <name>GenericPeriodicTimer&lt; Clock, TimestampType &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="115" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_generic_timeout_1a6c8bd0981766459f8137a49b449ed526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::GenericTimeout&lt; Clock, TimestampType &gt;::GenericTimeout</definition>
        <argsstring>()</argsstring>
        <name>GenericTimeout</name>
        <briefdescription>
<para>Creates a stopped timeout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_generic_timeout_1aac2f20a7bc3da764788031eb91b249b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::GenericTimeout&lt; Clock, TimestampType &gt;::GenericTimeout</definition>
        <argsstring>(const TimestampType time)</argsstring>
        <name>GenericTimeout</name>
        <param>
          <type>const TimestampType</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Create and start the timeout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_generic_timeout_1a62a42cb1767af5dae3bbb07e2948a602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::GenericTimeout&lt; Clock, TimestampType &gt;::restart</definition>
        <argsstring>(TimestampType time)</argsstring>
        <name>restart</name>
        <param>
          <type>TimestampType</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Set a new timeout value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_generic_timeout_1a1c035e5217e4ab7afc4fc645668acc21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::GenericTimeout&lt; Clock, TimestampType &gt;::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>Stops the timer and sets <ref refid="classmodm_1_1_generic_timeout_1ae329c2c1dc61add28a7009739e0dd89e" kindref="member">isStopped()</ref> to <computeroutput>true</computeroutput>, and <ref refid="classmodm_1_1_generic_timeout_1a4164928b549c3b3af2b9d28b42e4f99f" kindref="member">isExpired()</ref> to <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_generic_timeout_1af1529d56b722a3059a65efe72401d5d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::GenericTimeout&lt; Clock, TimestampType &gt;::execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> exactly once, after the timeout expired </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_generic_timeout_1a1a89bd18de1e51729197cebdf214a7c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>TimestampType::SignedType</type>
        <definition>TimestampType::SignedType modm::GenericTimeout&lt; Clock, TimestampType &gt;::remaining</definition>
        <argsstring>() const</argsstring>
        <name>remaining</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the time until (positive time) or since (negative time) expiration, or 0 if stopped </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_generic_timeout_1abc9bb1952bab28368a6bcacfddba627b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__modm__processing__timer_1gacc7987b8fe7071d9cd993829ee005298" kindref="member">TimeoutState</ref></type>
        <definition>TimeoutState modm::GenericTimeout&lt; Clock, TimestampType &gt;::getState</definition>
        <argsstring>() const</argsstring>
        <name>getState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the current state of the timeout </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_generic_timeout_1ae329c2c1dc61add28a7009739e0dd89e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::GenericTimeout&lt; Clock, TimestampType &gt;::isStopped</definition>
        <argsstring>() const</argsstring>
        <name>isStopped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the timeout is stopped, <computeroutput>false</computeroutput> otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_generic_timeout_1a4164928b549c3b3af2b9d28b42e4f99f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::GenericTimeout&lt; Clock, TimestampType &gt;::isExpired</definition>
        <argsstring>() const</argsstring>
        <name>isExpired</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the timeout has expired, <computeroutput>false</computeroutput> otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_generic_timeout_1ae573e9f83662e634723f239241ee452b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::GenericTimeout&lt; Clock, TimestampType &gt;::isArmed</definition>
        <argsstring>() const</argsstring>
        <name>isArmed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the timeout is armed (not stopped and not expired), <computeroutput>false</computeroutput> otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="97" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmodm_1_1_generic_timeout_1abafd1c99a3c6987fcd9eb9be73377a16" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::GenericTimeout&lt; Clock, TimestampType &gt;::checkExpiration</definition>
        <argsstring>() const</argsstring>
        <name>checkExpiration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="101" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Generic software timeout class for variable timebase and timestamp width.</para>
<para><simplesect kind="see"><para><ref refid="classmodm_1_1_generic_periodic_timer" kindref="compound">GenericPeriodicTimer</ref></para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classmodm_1_1_clock" kindref="compound">Clock</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Used clock which inherits from <ref refid="classmodm_1_1_clock" kindref="compound">modm::Clock</ref>, may have a variable timebase. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TimestampType</parametername>
</parameternamelist>
<parameterdescription>
<para>Used timestamp which is compatible with the chosen <ref refid="classmodm_1_1_clock" kindref="compound">Clock</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Fabian Greif </para>
</simplesect>
<simplesect kind="author"><para>Niklas Hauser </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" line="56" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/processing/timer/timeout.hpp" bodystart="55" bodyend="119"/>
    <listofallmembers>
      <member refid="classmodm_1_1_generic_timeout_1a07e3f8bf458d28127e7e3c339d9681ada7723ef7f959f6c9b3297255ff2b794e8" prot="private" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>ARMED</name></member>
      <member refid="classmodm_1_1_generic_timeout_1abafd1c99a3c6987fcd9eb9be73377a16" prot="private" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>checkExpiration</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a3813ea059f7ef7fc56a776c54f2f69e6" prot="private" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>endTime</name></member>
      <member refid="classmodm_1_1_generic_timeout_1af1529d56b722a3059a65efe72401d5d3" prot="public" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>execute</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a07e3f8bf458d28127e7e3c339d9681adadbe9931f1d93172a137305f5e098359e" prot="private" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>EXECUTED</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a07e3f8bf458d28127e7e3c339d9681adaf9de254b542aa5d1a9764f2e8e874bf2" prot="private" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>EXPIRED</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a01ee9ed70e7abf682b850d906630694d" prot="private" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>GenericPeriodicTimer&lt; Clock, TimestampType &gt;</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a6c8bd0981766459f8137a49b449ed526" prot="public" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>GenericTimeout</name></member>
      <member refid="classmodm_1_1_generic_timeout_1aac2f20a7bc3da764788031eb91b249b2" prot="public" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>GenericTimeout</name></member>
      <member refid="classmodm_1_1_generic_timeout_1abc9bb1952bab28368a6bcacfddba627b" prot="public" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>getState</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a07e3f8bf458d28127e7e3c339d9681ad" prot="private" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>InternalState</name></member>
      <member refid="classmodm_1_1_generic_timeout_1ae573e9f83662e634723f239241ee452b" prot="public" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>isArmed</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a4164928b549c3b3af2b9d28b42e4f99f" prot="public" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>isExpired</name></member>
      <member refid="classmodm_1_1_generic_timeout_1ae329c2c1dc61add28a7009739e0dd89e" prot="public" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>isStopped</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a1a89bd18de1e51729197cebdf214a7c7" prot="public" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>remaining</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a62a42cb1767af5dae3bbb07e2948a602" prot="public" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>restart</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a9dd7b5a5c2dfe6ffd87ae778b12cd87e" prot="private" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>state</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a07e3f8bf458d28127e7e3c339d9681adac2e2c10cfe40b0544adc03a2cd7771f8" prot="private" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>STATUS_MASK</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a1c035e5217e4ab7afc4fc645668acc21" prot="public" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>stop</name></member>
      <member refid="classmodm_1_1_generic_timeout_1a07e3f8bf458d28127e7e3c339d9681adaf27003664b7137f0c50d8b4c1e9b0549" prot="private" virt="non-virtual"><scope>modm::GenericTimeout</scope><name>STOPPED</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
