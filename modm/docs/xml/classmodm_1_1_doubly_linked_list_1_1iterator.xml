<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classmodm_1_1_doubly_linked_list_1_1iterator" kind="class" language="C++" prot="public">
    <compoundname>modm::DoublyLinkedList::iterator</compoundname>
    <includes refid="doubly__linked__list_8hpp" local="no">modm/container/doubly_linked_list.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmodm_1_1_doubly_linked_list_1_1iterator_1a8518425fc192346c00bedb825184bcf1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class DoublyLinkedList</definition>
        <argsstring></argsstring>
        <name>DoublyLinkedList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="108" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1_doubly_linked_list_1_1iterator_1ac220ce1c155db1ac44146c12d178056f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="109" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1_doubly_linked_list_1_1iterator_1a4a867668627acaeecb0b8e9f961f727f" prot="private" static="no" mutable="no">
        <type><ref refid="structmodm_1_1_doubly_linked_list_1_1_node" kindref="compound">Node</ref> *</type>
        <definition>Node* modm::DoublyLinkedList&lt; T, Allocator &gt;::iterator::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="127" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_doubly_linked_list_1_1iterator_1aba3d689f838da6278bd173c51abba767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::DoublyLinkedList&lt; T, Allocator &gt;::iterator::iterator</definition>
        <argsstring>()</argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_doubly_linked_list_1_1iterator_1a19a056e54bedbf968628f8529e958fc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::DoublyLinkedList&lt; T, Allocator &gt;::iterator::iterator</definition>
        <argsstring>(const iterator &amp;other)</argsstring>
        <name>iterator</name>
        <param>
          <type>const <ref refid="classmodm_1_1_doubly_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_doubly_linked_list_1_1iterator_1ae25c3cf40736e79bd551c7109b5d7956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_doubly_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; modm::DoublyLinkedList&lt; T, Allocator &gt;::iterator::operator=</definition>
        <argsstring>(const iterator &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_doubly_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_doubly_linked_list_1_1iterator_1acccd2ade7083fa5aeaf77423c0152310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_doubly_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; modm::DoublyLinkedList&lt; T, Allocator &gt;::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_doubly_linked_list_1_1iterator_1a5a8c1e0fc01eb87aff9962f6138fe00f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_doubly_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; modm::DoublyLinkedList&lt; T, Allocator &gt;::iterator::operator --</definition>
        <argsstring>()</argsstring>
        <name>operator --</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_doubly_linked_list_1_1iterator_1a4e58b0101807eb2f979a7c7b3c53e908" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::DoublyLinkedList&lt; T, Allocator &gt;::iterator::operator==</definition>
        <argsstring>(const iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmodm_1_1_doubly_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_doubly_linked_list_1_1iterator_1a4e705891aba40210755ba9a4465915da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::DoublyLinkedList&lt; T, Allocator &gt;::iterator::operator !=</definition>
        <argsstring>(const iterator &amp;other) const</argsstring>
        <name>operator !=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_doubly_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_doubly_linked_list_1_1iterator_1a49002058cd6736c1e8981f1658c4ad17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; modm::DoublyLinkedList&lt; T, Allocator &gt;::iterator::operator *</definition>
        <argsstring>()</argsstring>
        <name>operator *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_doubly_linked_list_1_1iterator_1a2baf57928e2c4046a7ca909d3b408264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T *</type>
        <definition>T* modm::DoublyLinkedList&lt; T, Allocator &gt;::iterator::operator -&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator -&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="122" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmodm_1_1_doubly_linked_list_1_1iterator_1ace8168c410b71a88cb3435752f38a4b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::DoublyLinkedList&lt; T, Allocator &gt;::iterator::iterator</definition>
        <argsstring>(Node *node)</argsstring>
        <name>iterator</name>
        <param>
          <type><ref refid="structmodm_1_1_doubly_linked_list_1_1_node" kindref="compound">Node</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="125" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Forward iterator. </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="todo_1_todo000003"><xreftitle>Todo</xreftitle><xrefdescription><para>decrement operator doesn&apos;t work correctly </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" line="107" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp" bodystart="106" bodyend="128"/>
    <listofallmembers>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1ac220ce1c155db1ac44146c12d178056f" prot="private" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>const_iterator</name></member>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1a8518425fc192346c00bedb825184bcf1" prot="private" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>DoublyLinkedList</name></member>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1aba3d689f838da6278bd173c51abba767" prot="public" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>iterator</name></member>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1a19a056e54bedbf968628f8529e958fc7" prot="public" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>iterator</name></member>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1ace8168c410b71a88cb3435752f38a4b1" prot="private" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>iterator</name></member>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1a4a867668627acaeecb0b8e9f961f727f" prot="private" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>node</name></member>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1a4e705891aba40210755ba9a4465915da" prot="public" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>operator !=</name></member>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1a49002058cd6736c1e8981f1658c4ad17" prot="public" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>operator *</name></member>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1a5a8c1e0fc01eb87aff9962f6138fe00f" prot="public" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>operator --</name></member>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1a2baf57928e2c4046a7ca909d3b408264" prot="public" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>operator -&gt;</name></member>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1acccd2ade7083fa5aeaf77423c0152310" prot="public" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>operator++</name></member>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1ae25c3cf40736e79bd551c7109b5d7956" prot="public" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>operator=</name></member>
      <member refid="classmodm_1_1_doubly_linked_list_1_1iterator_1a4e58b0101807eb2f979a7c7b3c53e908" prot="public" virt="non-virtual"><scope>modm::DoublyLinkedList::iterator</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
