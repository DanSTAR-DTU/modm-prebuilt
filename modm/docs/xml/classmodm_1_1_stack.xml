<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classmodm_1_1_stack" kind="class" language="C++" prot="public">
    <compoundname>modm::Stack</compoundname>
    <derivedcompoundref refid="classmodm_1_1_bounded_stack" prot="public" virt="non-virtual">modm::BoundedStack&lt; T, N, Container &gt;</derivedcompoundref>
    <includes refid="stack_8hpp" local="no">modm/container/stack.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Container</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1_stack_1a3c565524dab9b83bd4f64bfd54d6de38" prot="public" static="no">
        <type>Container::Size</type>
        <definition>typedef Container::Size modm::Stack&lt; T, Container &gt;::Size</definition>
        <argsstring></argsstring>
        <name>Size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" line="41" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmodm_1_1_stack_1aba2f1e88f5be68215509f72226721b6e" prot="protected" static="no" mutable="no">
        <type>Container</type>
        <definition>Container modm::Stack&lt; T, Container &gt;::c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" line="93" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_stack_1ad1bda520ff1e770210250859cb87dd4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Stack&lt; T, Container &gt;::isEmpty</definition>
        <argsstring>()</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" line="45" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_stack_1a55be978ee0ba1dc4ed202024e259a6f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Stack&lt; T, Container &gt;::isFull</definition>
        <argsstring>()</argsstring>
        <name>isFull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" line="51" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_stack_1a623d63a7de55950c475ab0ed9e8accb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_stack_1a3c565524dab9b83bd4f64bfd54d6de38" kindref="member">Size</ref></type>
        <definition>Size modm::Stack&lt; T, Container &gt;::getSize</definition>
        <argsstring>()</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" line="57" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_stack_1ab06b13a1f30af1b4ff3683a4ab9cf4d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1_stack_1a3c565524dab9b83bd4f64bfd54d6de38" kindref="member">Size</ref></type>
        <definition>Size modm::Stack&lt; T, Container &gt;::getMaxSize</definition>
        <argsstring>()</argsstring>
        <name>getMaxSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" line="63" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_stack_1af0ed90ffbe21423970d61e9e53376a12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; modm::Stack&lt; T, Container &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" line="69" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_stack_1ad1a3ea4df2ef671dd4378246a4f8f5b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Stack&lt; T, Container &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" line="75" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_stack_1a1e6a9c89567781436d42521f417fa7a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Stack&lt; T, Container &gt;::push</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>push</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" line="81" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_stack_1ad168c11ec842dbcdf8b6dab4867f4176" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Stack&lt; T, Container &gt;::pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" line="87" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" bodystart="87" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>LIFO stack. </para>
    </briefdescription>
    <detaileddescription>
<para>Elements are pushed/popped from the &quot;back&quot; of the specific container, which is known as the top of the stack.</para>
<para>getFront(), removeFront(), prepend()</para>
<para><simplesect kind="see"><para>Deque()</para>
</simplesect>
<simplesect kind="author"><para>Fabian Greif </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1577">
        <label>modm::Stack&lt; T, Container &gt;</label>
        <link refid="classmodm_1_1_stack"/>
      </node>
      <node id="1578">
        <label>modm::BoundedStack&lt; T, Container &gt;</label>
        <link refid="classmodm_1_1_bounded_stack"/>
        <childnode refid="1577" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" line="39" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/stack.hpp" bodystart="38" bodyend="94"/>
    <listofallmembers>
      <member refid="classmodm_1_1_stack_1aba2f1e88f5be68215509f72226721b6e" prot="protected" virt="non-virtual"><scope>modm::Stack</scope><name>c</name></member>
      <member refid="classmodm_1_1_stack_1af0ed90ffbe21423970d61e9e53376a12" prot="public" virt="non-virtual"><scope>modm::Stack</scope><name>get</name></member>
      <member refid="classmodm_1_1_stack_1ad1a3ea4df2ef671dd4378246a4f8f5b0" prot="public" virt="non-virtual"><scope>modm::Stack</scope><name>get</name></member>
      <member refid="classmodm_1_1_stack_1ab06b13a1f30af1b4ff3683a4ab9cf4d4" prot="public" virt="non-virtual"><scope>modm::Stack</scope><name>getMaxSize</name></member>
      <member refid="classmodm_1_1_stack_1a623d63a7de55950c475ab0ed9e8accb8" prot="public" virt="non-virtual"><scope>modm::Stack</scope><name>getSize</name></member>
      <member refid="classmodm_1_1_stack_1ad1bda520ff1e770210250859cb87dd4c" prot="public" virt="non-virtual"><scope>modm::Stack</scope><name>isEmpty</name></member>
      <member refid="classmodm_1_1_stack_1a55be978ee0ba1dc4ed202024e259a6f3" prot="public" virt="non-virtual"><scope>modm::Stack</scope><name>isFull</name></member>
      <member refid="classmodm_1_1_stack_1ad168c11ec842dbcdf8b6dab4867f4176" prot="public" virt="non-virtual"><scope>modm::Stack</scope><name>pop</name></member>
      <member refid="classmodm_1_1_stack_1a1e6a9c89567781436d42521f417fa7a1" prot="public" virt="non-virtual"><scope>modm::Stack</scope><name>push</name></member>
      <member refid="classmodm_1_1_stack_1a3c565524dab9b83bd4f64bfd54d6de38" prot="public" virt="non-virtual"><scope>modm::Stack</scope><name>Size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
