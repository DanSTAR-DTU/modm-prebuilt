<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1atomic_1_1_queue" kind="class" language="C++" prot="public">
    <compoundname>modm::atomic::Queue</compoundname>
    <includes refid="architecture_2driver_2atomic_2queue_8hpp" local="no">modm/architecture/driver/atomic/queue.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1atomic_1_1_queue_1a92aa5c3cd931b83f2b7cc40e1304c941" prot="public" static="no">
        <type>std::conditional_t&lt;(N &gt;=254), uint16_t, uint8_t &gt;</type>
        <definition>using modm::atomic::Queue&lt; T, N &gt;::Index =  std::conditional_t&lt; (N &gt;= 254), uint16_t, uint8_t &gt;</definition>
        <argsstring></argsstring>
        <name>Index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="43" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1atomic_1_1_queue_1a14d871139f869ebc0685f364897f7735" prot="public" static="no">
        <type><ref refid="classmodm_1_1atomic_1_1_queue_1a92aa5c3cd931b83f2b7cc40e1304c941" kindref="member">Index</ref></type>
        <definition>using modm::atomic::Queue&lt; T, N &gt;::Size =  Index</definition>
        <argsstring></argsstring>
        <name>Size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="45" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1atomic_1_1_queue_1abe2d4b15e730c049cedae8a052e2c32d" prot="private" static="no" mutable="no">
        <type><ref refid="classmodm_1_1atomic_1_1_queue_1a92aa5c3cd931b83f2b7cc40e1304c941" kindref="member">Index</ref></type>
        <definition>Index modm::atomic::Queue&lt; T, N &gt;::head</definition>
        <argsstring></argsstring>
        <name>head</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="96" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1atomic_1_1_queue_1aee28867671240a37239c9066a23afbcf" prot="private" static="no" mutable="no">
        <type><ref refid="classmodm_1_1atomic_1_1_queue_1a92aa5c3cd931b83f2b7cc40e1304c941" kindref="member">Index</ref></type>
        <definition>Index modm::atomic::Queue&lt; T, N &gt;::tail</definition>
        <argsstring></argsstring>
        <name>tail</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="97" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1atomic_1_1_queue_1a1a4ca4ff47a85695a8f8e17300958859" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::atomic::Queue&lt; T, N &gt;::buffer[N+1]</definition>
        <argsstring>[N+1]</argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="99" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1atomic_1_1_queue_1a4ffb7aa476d796f50553249b4425505a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::atomic::Queue&lt; T, N &gt;::Queue</definition>
        <argsstring>()</argsstring>
        <name>Queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1atomic_1_1_queue_1a1c4af929389a11a5de8154afc8b5b7a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::atomic::Queue&lt; T, N &gt;::isFull</definition>
        <argsstring>() const</argsstring>
        <name>isFull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1atomic_1_1_queue_1a4a1aac1a453f03e314ee8e91880cca15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::atomic::Queue&lt; T, N &gt;::isNotFull</definition>
        <argsstring>() const</argsstring>
        <name>isNotFull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="54" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1atomic_1_1_queue_1a70a2ed1729d7f8561a463040e95d2e96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::atomic::Queue&lt; T, N &gt;::isNearlyFull</definition>
        <argsstring>() const</argsstring>
        <name>isNearlyFull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>false</computeroutput> if less than three elements can be stored in queue.</para></simplesect>
Only works with queue with more than three elements. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1atomic_1_1_queue_1a72eeec9df28fa0a1b2ad027e2d90eda5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::atomic::Queue&lt; T, N &gt;::isEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1atomic_1_1_queue_1aa482d3a17edef31991ecfa174bdfc79a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::atomic::Queue&lt; T, N &gt;::isNotEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isNotEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="69" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1atomic_1_1_queue_1abd3039b611344c7d2b516645e034fdfc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::atomic::Queue&lt; T, N &gt;::isNearlyEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isNearlyEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the queue is nearly empty.</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if less than three elements are stored in the queue, <computeroutput>false</computeroutput> otherwise.</para></simplesect>
Only works with queue with more than three elements. TODO: calculations are approximate and may include off-by-one errors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1atomic_1_1_queue_1a44c5d9ad02956e4b77a9c59f9d2b8d81" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmodm_1_1atomic_1_1_queue_1a14d871139f869ebc0685f364897f7735" kindref="member">Size</ref></type>
        <definition>Size modm::atomic::Queue&lt; T, N &gt;::getMaxSize</definition>
        <argsstring>() const</argsstring>
        <name>getMaxSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1atomic_1_1_queue_1a1763ac4f23d737bc9546df8d9d74fa11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::atomic::Queue&lt; T, N &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1atomic_1_1_queue_1a01a5a6a23d1f1823bfd85dd860e67dd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::atomic::Queue&lt; T, N &gt;::push</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>push</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1atomic_1_1_queue_1a949fa8408eb68d3e977e01aac2c39255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::atomic::Queue&lt; T, N &gt;::pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="93" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interrupt save queue. </para>    </briefdescription>
    <detaileddescription>
<para>A maximum size of 254 is allowed for 8-bit microcontrollers.</para><para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>This implementation should work but could be improved </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" line="40" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/driver/atomic/queue.hpp" bodystart="39" bodyend="100"/>
    <listofallmembers>
      <member refid="classmodm_1_1atomic_1_1_queue_1a1a4ca4ff47a85695a8f8e17300958859" prot="private" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>buffer</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1a1763ac4f23d737bc9546df8d9d74fa11" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>get</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1a44c5d9ad02956e4b77a9c59f9d2b8d81" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>getMaxSize</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1abe2d4b15e730c049cedae8a052e2c32d" prot="private" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>head</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1a92aa5c3cd931b83f2b7cc40e1304c941" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>Index</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1a72eeec9df28fa0a1b2ad027e2d90eda5" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>isEmpty</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1a1c4af929389a11a5de8154afc8b5b7a2" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>isFull</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1abd3039b611344c7d2b516645e034fdfc" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>isNearlyEmpty</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1a70a2ed1729d7f8561a463040e95d2e96" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>isNearlyFull</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1aa482d3a17edef31991ecfa174bdfc79a" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>isNotEmpty</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1a4a1aac1a453f03e314ee8e91880cca15" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>isNotFull</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1a949fa8408eb68d3e977e01aac2c39255" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>pop</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1a01a5a6a23d1f1823bfd85dd860e67dd5" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>push</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1a4ffb7aa476d796f50553249b4425505a" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>Queue</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1a14d871139f869ebc0685f364897f7735" prot="public" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>Size</name></member>
      <member refid="classmodm_1_1atomic_1_1_queue_1aee28867671240a37239c9066a23afbcf" prot="private" virt="non-virtual"><scope>modm::atomic::Queue</scope><name>tail</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
