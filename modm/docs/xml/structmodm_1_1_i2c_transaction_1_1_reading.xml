<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structmodm_1_1_i2c_transaction_1_1_reading" kind="struct" language="C++" prot="public">
    <compoundname>modm::I2cTransaction::Reading</compoundname>
    <includes refid="i2c__transaction_8hpp" local="no">modm/architecture/interface/i2c_transaction.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmodm_1_1_i2c_transaction_1_1_reading_1a005d4dc3d855c314e45d9cdc333f556e" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* modm::I2cTransaction::Reading::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_transaction.hpp" line="87" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_transaction.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodm_1_1_i2c_transaction_1_1_reading_1a6d0e29ee9a68d4fc0c694f0028bbb5be" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t modm::I2cTransaction::Reading::length</definition>
        <argsstring></argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_transaction.hpp" line="88" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_transaction.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmodm_1_1_i2c_transaction_1_1_reading_1ab81613ec2b196c77ce1b221b9a1c0edc" prot="public" static="no" mutable="no">
        <type><ref refid="structmodm_1_1_i2c_1a9b3a80feb3a8f179706ee1d5afe8bb31" kindref="member">OperationAfterRead</ref></type>
        <definition>OperationAfterRead modm::I2cTransaction::Reading::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_transaction.hpp" line="89" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_transaction.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmodm_1_1_i2c_transaction_1_1_reading_1a3024ce2205eed6d5fb4bf034ed50be2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>modm::I2cTransaction::Reading::Reading</definition>
        <argsstring>(uint8_t *buffer, std::size_t length, OperationAfterRead next)</argsstring>
        <name>Reading</name>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1_i2c_1a9b3a80feb3a8f179706ee1d5afe8bb31" kindref="member">OperationAfterRead</ref></type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Contains the information required to begin a read operation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to be filled with the bytes received from the slave </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to be read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>next</parametername>
</parameternamelist>
<parameterdescription>
<para>operation following the successful reading from the slave </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_transaction.hpp" line="82" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_transaction.hpp" bodystart="82" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_transaction.hpp" line="74" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_transaction.hpp" bodystart="73" bodyend="90"/>
    <listofallmembers>
      <member refid="structmodm_1_1_i2c_transaction_1_1_reading_1a005d4dc3d855c314e45d9cdc333f556e" prot="public" virt="non-virtual"><scope>modm::I2cTransaction::Reading</scope><name>buffer</name></member>
      <member refid="structmodm_1_1_i2c_transaction_1_1_reading_1a6d0e29ee9a68d4fc0c694f0028bbb5be" prot="public" virt="non-virtual"><scope>modm::I2cTransaction::Reading</scope><name>length</name></member>
      <member refid="structmodm_1_1_i2c_transaction_1_1_reading_1ab81613ec2b196c77ce1b221b9a1c0edc" prot="public" virt="non-virtual"><scope>modm::I2cTransaction::Reading</scope><name>next</name></member>
      <member refid="structmodm_1_1_i2c_transaction_1_1_reading_1a3024ce2205eed6d5fb4bf034ed50be2b" prot="public" virt="non-virtual"><scope>modm::I2cTransaction::Reading</scope><name>Reading</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
