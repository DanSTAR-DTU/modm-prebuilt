<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_s_curve_controller" kind="class" language="C++" prot="public">
    <compoundname>modm::SCurveController</compoundname>
    <includes refid="s__curve__controller_8hpp" local="no">modm/math/filter/s_curve_controller.hpp</includes>
    <innerclass refid="structmodm_1_1_s_curve_controller_1_1_parameter" prot="public">modm::SCurveController::Parameter</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1_s_curve_controller_1a0a8a302594d00cacc4ec0b6764333374" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::SCurveController&lt; T &gt;::output</definition>
        <argsstring></argsstring>
        <name>output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="104" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_s_curve_controller_1a3e035e9ea4b7dc795c53c146df1c5a3e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool modm::SCurveController&lt; T &gt;::targetReached</definition>
        <argsstring></argsstring>
        <name>targetReached</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="105" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_s_curve_controller_1a23d44cef87e52e3154279a2883d4ce03" prot="private" static="no" mutable="no">
        <type><ref refid="structmodm_1_1_s_curve_controller_1_1_parameter" kindref="compound">Parameter</ref></type>
        <definition>Parameter modm::SCurveController&lt; T &gt;::parameter</definition>
        <argsstring></argsstring>
        <name>parameter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="107" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_s_curve_controller_1aac691df471339d75eb15ad1e6ffd4d39" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::SCurveController&lt; T &gt;::additionalDistanceToStop</definition>
        <argsstring></argsstring>
        <name>additionalDistanceToStop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>distance to add to the current error for speed calculation. This is automatically calculated from speedtarget parameter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="110" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_s_curve_controller_1ac0e54ca24ddcb034889972dd7aab923d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::SCurveController&lt; T &gt;::SCurveController</definition>
        <argsstring>(const Parameter &amp;parameter)</argsstring>
        <name>SCurveController</name>
        <param>
          <type>const <ref refid="structmodm_1_1_s_curve_controller_1_1_parameter" kindref="compound">Parameter</ref> &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_s_curve_controller_1a82bf93992caf2021b76254e816826fcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::SCurveController&lt; T &gt;::setParameter</definition>
        <argsstring>(const Parameter &amp;parameter)</argsstring>
        <name>setParameter</name>
        <param>
          <type>const <ref refid="structmodm_1_1_s_curve_controller_1_1_parameter" kindref="compound">Parameter</ref> &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the parameters of the controller.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>list of the controller </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_s_curve_controller_1ab18c60ed0516f4d0e5f50bea4974f53e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::SCurveController&lt; T &gt;::setSpeedMaximum</definition>
        <argsstring>(const T &amp;speed)</argsstring>
        <name>setSpeedMaximum</name>
        <param>
          <type>const T &amp;</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_s_curve_controller_1a54b39e16d3654a52f2aad4c4a5d40a38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::SCurveController&lt; T &gt;::setSpeedMinimim</definition>
        <argsstring>(const T &amp;speed)</argsstring>
        <name>setSpeedMinimim</name>
        <param>
          <type>const T &amp;</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_s_curve_controller_1a052d1be4c012d885e83f767e78581f8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::SCurveController&lt; T &gt;::setSpeedTarget</definition>
        <argsstring>(const T &amp;speed)</argsstring>
        <name>setSpeedTarget</name>
        <param>
          <type>const T &amp;</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_s_curve_controller_1a23c4cf41413e4230a7d0bee7284cf806" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::SCurveController&lt; T &gt;::isTargetReached</definition>
        <argsstring>() const</argsstring>
        <name>isTargetReached</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_s_curve_controller_1a79601a4cfaf4c2a709ed76fd48c5abf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::SCurveController&lt; T &gt;::update</definition>
        <argsstring>(T error, const T &amp;speed)</argsstring>
        <name>update</name>
        <param>
          <type>T</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_s_curve_controller_1acce512fc490740c84a6821ac196d421e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::SCurveController&lt; T &gt;::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <briefdescription>
<para>setpoint output for the speed value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="101" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>S-Curve trajectory generation with feedback. </para>    </briefdescription>
    <detaileddescription>
<para>closed-loop</para><para><programlisting><codeline><highlight class="normal">SCurveController&lt;int16_t&gt;<sp/>controller;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">controller.update(positionTarget<sp/>-<sp/>currentPosition,<sp/>currentSpeed);</highlight></codeline>
</programlisting></para><para><xrefsect id="todo_1_todo000011"><xreftitle>Todo</xreftitle><xrefdescription><para>documentation</para></xrefdescription></xrefsect></para><para><simplesect kind="author"><para>Fabian Greif </para></simplesect>
<simplesect kind="author"><para>Georgi Grinshpun </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" line="45" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_controller.hpp" bodystart="44" bodyend="111"/>
    <listofallmembers>
      <member refid="classmodm_1_1_s_curve_controller_1aac691df471339d75eb15ad1e6ffd4d39" prot="private" virt="non-virtual"><scope>modm::SCurveController</scope><name>additionalDistanceToStop</name></member>
      <member refid="classmodm_1_1_s_curve_controller_1acce512fc490740c84a6821ac196d421e" prot="public" virt="non-virtual"><scope>modm::SCurveController</scope><name>getValue</name></member>
      <member refid="classmodm_1_1_s_curve_controller_1a23c4cf41413e4230a7d0bee7284cf806" prot="public" virt="non-virtual"><scope>modm::SCurveController</scope><name>isTargetReached</name></member>
      <member refid="classmodm_1_1_s_curve_controller_1a0a8a302594d00cacc4ec0b6764333374" prot="private" virt="non-virtual"><scope>modm::SCurveController</scope><name>output</name></member>
      <member refid="classmodm_1_1_s_curve_controller_1a23d44cef87e52e3154279a2883d4ce03" prot="private" virt="non-virtual"><scope>modm::SCurveController</scope><name>parameter</name></member>
      <member refid="classmodm_1_1_s_curve_controller_1ac0e54ca24ddcb034889972dd7aab923d" prot="public" virt="non-virtual"><scope>modm::SCurveController</scope><name>SCurveController</name></member>
      <member refid="classmodm_1_1_s_curve_controller_1a82bf93992caf2021b76254e816826fcc" prot="public" virt="non-virtual"><scope>modm::SCurveController</scope><name>setParameter</name></member>
      <member refid="classmodm_1_1_s_curve_controller_1ab18c60ed0516f4d0e5f50bea4974f53e" prot="public" virt="non-virtual"><scope>modm::SCurveController</scope><name>setSpeedMaximum</name></member>
      <member refid="classmodm_1_1_s_curve_controller_1a54b39e16d3654a52f2aad4c4a5d40a38" prot="public" virt="non-virtual"><scope>modm::SCurveController</scope><name>setSpeedMinimim</name></member>
      <member refid="classmodm_1_1_s_curve_controller_1a052d1be4c012d885e83f767e78581f8a" prot="public" virt="non-virtual"><scope>modm::SCurveController</scope><name>setSpeedTarget</name></member>
      <member refid="classmodm_1_1_s_curve_controller_1a3e035e9ea4b7dc795c53c146df1c5a3e" prot="private" virt="non-virtual"><scope>modm::SCurveController</scope><name>targetReached</name></member>
      <member refid="classmodm_1_1_s_curve_controller_1a79601a4cfaf4c2a709ed76fd48c5abf0" prot="public" virt="non-virtual"><scope>modm::SCurveController</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
