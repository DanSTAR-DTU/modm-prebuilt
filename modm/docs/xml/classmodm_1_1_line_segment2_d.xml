<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classmodm_1_1_line_segment2_d" kind="class" language="C++" prot="public">
    <compoundname>modm::LineSegment2D</compoundname>
    <includes refid="circle__2d_8hpp" local="no">modm/math/geometry/circle_2d.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
        <defval>int16_t</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1_line_segment2_d_1af443b72b992452596cbb9dad115ae913" prot="public" static="no">
        <type><ref refid="structmodm_1_1_geometric_traits" kindref="compound">GeometricTraits</ref>&lt; T &gt;::<ref refid="classmodm_1_1_line_segment2_d_1af443b72b992452596cbb9dad115ae913" kindref="member">WideType</ref></type>
        <definition>typedef GeometricTraits&lt;T&gt;::WideType modm::LineSegment2D&lt; T &gt;::WideType</definition>
        <argsstring></argsstring>
        <name>WideType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="41" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1_line_segment2_d_1a63738cac53701e6db0a3857f2a8fb917" prot="public" static="no">
        <type><ref refid="structmodm_1_1_geometric_traits" kindref="compound">GeometricTraits</ref>&lt; T &gt;::<ref refid="classmodm_1_1_line_segment2_d_1a63738cac53701e6db0a3857f2a8fb917" kindref="member">FloatType</ref></type>
        <definition>typedef GeometricTraits&lt;T&gt;::FloatType modm::LineSegment2D&lt; T &gt;::FloatType</definition>
        <argsstring></argsstring>
        <name>FloatType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="42" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmodm_1_1_line_segment2_d_1aa8d8bb93cb3e33c4dfe9e3af1646439d" prot="protected" static="no" mutable="no">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">modm::Vector</ref>&lt; T, 2 &gt;</type>
        <definition>modm::Vector&lt;T, 2&gt; modm::LineSegment2D&lt; T &gt;::startPoint</definition>
        <argsstring></argsstring>
        <name>startPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="126" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_line_segment2_d_1a795ae1cebc3a1184ed17e159a5c55384" prot="protected" static="no" mutable="no">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">modm::Vector</ref>&lt; T, 2 &gt;</type>
        <definition>modm::Vector&lt;T, 2&gt; modm::LineSegment2D&lt; T &gt;::endPoint</definition>
        <argsstring></argsstring>
        <name>endPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="127" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a4e2a21f3e9a92fc6aad2f08244cd2aa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::LineSegment2D&lt; T &gt;::LineSegment2D</definition>
        <argsstring>()</argsstring>
        <name>LineSegment2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a78f93581414efa6f933b030e01eb27b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::LineSegment2D&lt; T &gt;::LineSegment2D</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;start, const Vector&lt; T, 2 &gt; &amp;end)</argsstring>
        <name>LineSegment2D</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a707ded9207b8827103e20f5b69d97d03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::LineSegment2D&lt; T &gt;::setStartPoint</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;point)</argsstring>
        <name>setStartPoint</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Set the starting point of the line segment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1ae6cfa8e6db06b1ec1b0b19cd71e12776" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
        <definition>const Vector&lt;T, 2&gt;&amp; modm::LineSegment2D&lt; T &gt;::getStartPoint</definition>
        <argsstring>() const</argsstring>
        <name>getStartPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a2d2ffdf3d207b73c714e6ea970910355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::LineSegment2D&lt; T &gt;::setEndPoint</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;point)</argsstring>
        <name>setEndPoint</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Set the end point of the line segment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a9af0f63f7be1ae043095979291871003" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
        <definition>const Vector&lt;T, 2&gt;&amp; modm::LineSegment2D&lt; T &gt;::getEndPoint</definition>
        <argsstring>() const</argsstring>
        <name>getEndPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a7a596975116698318686ea9d4610a20a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::LineSegment2D&lt; T &gt;::set</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;start, const Vector&lt; T, 2 &gt; &amp;end)</argsstring>
        <name>set</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a3ec197c93428c351d978de7182450d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::LineSegment2D&lt; T &gt;::translate</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;vector)</argsstring>
        <name>translate</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a6ca4bef695a08723cbdfa348789114e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T modm::LineSegment2D&lt; T &gt;::getLength</definition>
        <argsstring>() const</argsstring>
        <name>getLength</name>
        <briefdescription>
<para>Length of the line segment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a7dcbd319d781d97c56ad3a70ab739d4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt;</type>
        <definition>Vector&lt;T, 2&gt; modm::LineSegment2D&lt; T &gt;::getDirectionVector</definition>
        <argsstring>() const</argsstring>
        <name>getDirectionVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1ab2bcfcb13c8ce8a3cb8420bb5febc7b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T</type>
        <definition>const T modm::LineSegment2D&lt; T &gt;::getDistanceTo</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;point) const</argsstring>
        <name>getDistanceTo</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Shortest distance to a point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a5bada55efc3eadbc2d2e64f16c9e2efb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt;</type>
        <definition>const Vector&lt;T, 2&gt; modm::LineSegment2D&lt; T &gt;::getClosestPointTo</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;point) const</argsstring>
        <name>getClosestPointTo</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Calculate the point on the line segment closes to the given point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1ad7783ccdf3e82fecf35b7c7f8a3e124e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::LineSegment2D&lt; T &gt;::intersects</definition>
        <argsstring>(const LineSegment2D &amp;other) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classmodm_1_1_line_segment2_d" kindref="compound">LineSegment2D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Check if two line segments intersect. </para>
        </briefdescription>
        <detaileddescription>
<para>Uses Vector2D::ccw() to check if any intersection exists. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a72b35fe32ce809c2f381f196e35ebab5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::LineSegment2D&lt; T &gt;::intersects</definition>
        <argsstring>(const Polygon2D&lt; T &gt; &amp;polygon) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classmodm_1_1_polygon2_d" kindref="compound">Polygon2D</ref>&lt; T &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <briefdescription>
<para>Check if a intersection exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1aff3049ff6c3e5f92f539de65d2a198c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::LineSegment2D&lt; T &gt;::getIntersections</definition>
        <argsstring>(const LineSegment2D &amp;other, PointSet2D&lt; T &gt; &amp;intersectionPoints) const</argsstring>
        <name>getIntersections</name>
        <param>
          <type>const <ref refid="classmodm_1_1_line_segment2_d" kindref="compound">LineSegment2D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classmodm_1_1_point_set2_d" kindref="compound">PointSet2D</ref>&lt; T &gt; &amp;</type>
          <declname>intersectionPoints</declname>
        </param>
        <briefdescription>
<para>Calculate the intersection point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a1f43940c633d9384794966fb199afbfd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::LineSegment2D&lt; T &gt;::getIntersections</definition>
        <argsstring>(const Circle2D&lt; T &gt; &amp;circle, PointSet2D&lt; T &gt; &amp;intersectionPoints) const</argsstring>
        <name>getIntersections</name>
        <param>
          <type>const <ref refid="classmodm_1_1_circle2_d" kindref="compound">Circle2D</ref>&lt; T &gt; &amp;</type>
          <declname>circle</declname>
        </param>
        <param>
          <type><ref refid="classmodm_1_1_point_set2_d" kindref="compound">PointSet2D</ref>&lt; T &gt; &amp;</type>
          <declname>intersectionPoints</declname>
        </param>
        <briefdescription>
<para>Calculate the intersection point(s) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="http://local.wasp.uwa.edu.au/~pbourke/geometry/sphereline/">http://local.wasp.uwa.edu.au/~pbourke/geometry/sphereline/</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a0c3c4668f254adfe0c386a3bd66bea94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::LineSegment2D&lt; T &gt;::getIntersections</definition>
        <argsstring>(const Polygon2D&lt; T &gt; &amp;polygon, PointSet2D&lt; T &gt; &amp;intersectionPoints) const</argsstring>
        <name>getIntersections</name>
        <param>
          <type>const <ref refid="classmodm_1_1_polygon2_d" kindref="compound">Polygon2D</ref>&lt; T &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type><ref refid="classmodm_1_1_point_set2_d" kindref="compound">PointSet2D</ref>&lt; T &gt; &amp;</type>
          <declname>intersectionPoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a69b3414c9d85f62020b01734821598eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::LineSegment2D&lt; T &gt;::operator==</definition>
        <argsstring>(const LineSegment2D &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmodm_1_1_line_segment2_d" kindref="compound">LineSegment2D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_line_segment2_d_1a8292c09b4d709245c3c9e32000b0bcff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::LineSegment2D&lt; T &gt;::operator !=</definition>
        <argsstring>(const LineSegment2D &amp;other) const</argsstring>
        <name>operator !=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_line_segment2_d" kindref="compound">LineSegment2D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/line_segment_2d.hpp" line="123" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Line segment. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Fabian Greif </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1365">
        <label>T</label>
      </node>
      <node id="1364">
        <label>modm::Vector&lt; T, 2 &gt;</label>
        <link refid="classmodm_1_1_vector_3_01_t_00_012_01_4"/>
        <childnode refid="1365" relation="usage">
          <edgelabel>x</edgelabel>
          <edgelabel>y</edgelabel>
        </childnode>
      </node>
      <node id="1363">
        <label>modm::LineSegment2D&lt; T &gt;</label>
        <link refid="classmodm_1_1_line_segment2_d"/>
        <childnode refid="1364" relation="usage">
          <edgelabel>startPoint</edgelabel>
          <edgelabel>endPoint</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/circle_2d.hpp" line="29" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/geometry/circle_2d.hpp" bodystart="29" bodyend="-1"/>
    <listofallmembers>
      <member refid="classmodm_1_1_line_segment2_d_1a795ae1cebc3a1184ed17e159a5c55384" prot="protected" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>endPoint</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a63738cac53701e6db0a3857f2a8fb917" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>FloatType</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a5bada55efc3eadbc2d2e64f16c9e2efb" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>getClosestPointTo</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a7dcbd319d781d97c56ad3a70ab739d4b" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>getDirectionVector</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1ab2bcfcb13c8ce8a3cb8420bb5febc7b0" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>getDistanceTo</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a9af0f63f7be1ae043095979291871003" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>getEndPoint</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1aff3049ff6c3e5f92f539de65d2a198c1" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>getIntersections</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a1f43940c633d9384794966fb199afbfd" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>getIntersections</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a0c3c4668f254adfe0c386a3bd66bea94" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>getIntersections</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a6ca4bef695a08723cbdfa348789114e1" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>getLength</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1ae6cfa8e6db06b1ec1b0b19cd71e12776" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>getStartPoint</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1ad7783ccdf3e82fecf35b7c7f8a3e124e" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>intersects</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a72b35fe32ce809c2f381f196e35ebab5" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>intersects</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a4e2a21f3e9a92fc6aad2f08244cd2aa6" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>LineSegment2D</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a78f93581414efa6f933b030e01eb27b3" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>LineSegment2D</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a8292c09b4d709245c3c9e32000b0bcff" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>operator !=</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a69b3414c9d85f62020b01734821598eb" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>operator==</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a7a596975116698318686ea9d4610a20a" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>set</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a2d2ffdf3d207b73c714e6ea970910355" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>setEndPoint</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a707ded9207b8827103e20f5b69d97d03" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>setStartPoint</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1aa8d8bb93cb3e33c4dfe9e3af1646439d" prot="protected" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>startPoint</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1a3ec197c93428c351d978de7182450d5e" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>translate</name></member>
      <member refid="classmodm_1_1_line_segment2_d_1af443b72b992452596cbb9dad115ae913" prot="public" virt="non-virtual"><scope>modm::LineSegment2D</scope><name>WideType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
