<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_l_u_decomposition_1_1_l_u_sub_decomposition_3_01_t_00_01_o_f_f_s_e_t_00_01_w_i_d_t_h_00_01_o_f_f_s_e_t_01_4" kind="class" language="C++" prot="private">
    <compoundname>modm::LUDecomposition::LUSubDecomposition&lt; T, OFFSET, WIDTH, OFFSET &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>uint8_t</type>
        <declname>OFFSET</declname>
        <defname>OFFSET</defname>
      </param>
      <param>
        <type>uint8_t</type>
        <declname>WIDTH</declname>
        <defname>WIDTH</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1_l_u_decomposition_1_1_l_u_sub_decomposition_3_01_t_00_01_o_f_f_s_e_t_00_01_w_i_d_t_h_00_01_o_f_f_s_e_t_01_4_1add786bc5b1a478060997ca97249f6a44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::LUDecomposition::LUSubDecomposition&lt; T, OFFSET, WIDTH, OFFSET &gt;::decomposeRecur</definition>
        <argsstring>(T *u, T *l, int8_t *p)</argsstring>
        <name>decomposeRecur</name>
        <param>
          <type>T *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/lu_decomposition.hpp" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_l_u_decomposition_1_1_l_u_sub_decomposition_3_01_t_00_01_o_f_f_s_e_t_00_01_w_i_d_t_h_00_01_o_f_f_s_e_t_01_4_1a853f17ac819a6aaf916f7c8cc7b2aebd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::LUDecomposition::LUSubDecomposition&lt; T, OFFSET, WIDTH, OFFSET &gt;::decomposeRecur</definition>
        <argsstring>(T *u, T *l)</argsstring>
        <name>decomposeRecur</name>
        <param>
          <type>T *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/lu_decomposition.hpp" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_l_u_decomposition_1_1_l_u_sub_decomposition_3_01_t_00_01_o_f_f_s_e_t_00_01_w_i_d_t_h_00_01_o_f_f_s_e_t_01_4_1a8b5e22b5b3e13c82f2e21e1646dd8683" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>BXWIDTH</declname>
            <defname>BXWIDTH</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool modm::LUDecomposition::LUSubDecomposition&lt; T, OFFSET, WIDTH, OFFSET &gt;::solveUxEqualsY</definition>
        <argsstring>(Matrix&lt; T, WIDTH, OFFSET &gt; *u, Matrix&lt; T, OFFSET, BXWIDTH &gt; *bx)</argsstring>
        <name>solveUxEqualsY</name>
        <param>
          <type><ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, WIDTH, OFFSET &gt; *</type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, OFFSET, BXWIDTH &gt; *</type>
          <declname>bx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/lu_decomposition.hpp" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_l_u_decomposition_1_1_l_u_sub_decomposition_3_01_t_00_01_o_f_f_s_e_t_00_01_w_i_d_t_h_00_01_o_f_f_s_e_t_01_4_1aafa66e996954be3aa553fee86e2d6130" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>BXWIDTH</declname>
            <defname>BXWIDTH</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool modm::LUDecomposition::LUSubDecomposition&lt; T, OFFSET, WIDTH, OFFSET &gt;::solveLyEqualsB</definition>
        <argsstring>(Matrix&lt; T, WIDTH, OFFSET &gt; *l, Matrix&lt; T, OFFSET, BXWIDTH &gt; *bx)</argsstring>
        <name>solveLyEqualsB</name>
        <param>
          <type><ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, WIDTH, OFFSET &gt; *</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, OFFSET, BXWIDTH &gt; *</type>
          <declname>bx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/lu_decomposition.hpp" line="166" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/lu_decomposition.hpp" line="150" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/lu_decomposition.hpp" bodystart="149" bodyend="169"/>
    <listofallmembers>
      <member refid="classmodm_1_1_l_u_decomposition_1_1_l_u_sub_decomposition_3_01_t_00_01_o_f_f_s_e_t_00_01_w_i_d_t_h_00_01_o_f_f_s_e_t_01_4_1add786bc5b1a478060997ca97249f6a44" prot="public" virt="non-virtual"><scope>modm::LUDecomposition::LUSubDecomposition&lt; T, OFFSET, WIDTH, OFFSET &gt;</scope><name>decomposeRecur</name></member>
      <member refid="classmodm_1_1_l_u_decomposition_1_1_l_u_sub_decomposition_3_01_t_00_01_o_f_f_s_e_t_00_01_w_i_d_t_h_00_01_o_f_f_s_e_t_01_4_1a853f17ac819a6aaf916f7c8cc7b2aebd" prot="public" virt="non-virtual"><scope>modm::LUDecomposition::LUSubDecomposition&lt; T, OFFSET, WIDTH, OFFSET &gt;</scope><name>decomposeRecur</name></member>
      <member refid="classmodm_1_1_l_u_decomposition_1_1_l_u_sub_decomposition_3_01_t_00_01_o_f_f_s_e_t_00_01_w_i_d_t_h_00_01_o_f_f_s_e_t_01_4_1aafa66e996954be3aa553fee86e2d6130" prot="public" virt="non-virtual"><scope>modm::LUDecomposition::LUSubDecomposition&lt; T, OFFSET, WIDTH, OFFSET &gt;</scope><name>solveLyEqualsB</name></member>
      <member refid="classmodm_1_1_l_u_decomposition_1_1_l_u_sub_decomposition_3_01_t_00_01_o_f_f_s_e_t_00_01_w_i_d_t_h_00_01_o_f_f_s_e_t_01_4_1a8b5e22b5b3e13c82f2e21e1646dd8683" prot="public" virt="non-virtual"><scope>modm::LUDecomposition::LUSubDecomposition&lt; T, OFFSET, WIDTH, OFFSET &gt;</scope><name>solveUxEqualsY</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
