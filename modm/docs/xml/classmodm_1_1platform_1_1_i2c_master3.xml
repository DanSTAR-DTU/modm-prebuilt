<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1platform_1_1_i2c_master3" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::I2cMaster3</compoundname>
    <basecompoundref refid="classmodm_1_1_i2c_master" prot="public" virt="non-virtual">modm::I2cMaster</basecompoundref>
    <includes refid="i2c__master__3_8hpp" local="no">modm/platform/i2c/i2c_master_3.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_i2c_master3_1aa1dc60c90394235cf15e40603241be89" prot="public" static="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t modm::platform::I2cMaster3::TransactionBufferSize</definition>
        <argsstring></argsstring>
        <name>TransactionBufferSize</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/i2c/i2c_master_3.hpp" line="39" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/i2c/i2c_master_3.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_i2c_master3_1aae253c89b1b1537e9232db5681369b82" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; <ref refid="namespacemodm_1_1platform_1a9a75ca82fea26cd4f4948f93899d0f55" kindref="member">Peripheral</ref> _ &gt; class...</type>
            <declname>Signals</declname>
            <defname>Signals</defname>
          </param>
          <param>
            <type><ref refid="classmodm_1_1_i2c_master_1a141efec8e032cdcd5c9766fbf0f1ddcb" kindref="member">ResetDevices</ref></type>
            <declname>reset</declname>
            <defname>reset</defname>
            <defval><ref refid="classmodm_1_1_i2c_master_1a141efec8e032cdcd5c9766fbf0f1ddcbaeb6d8ae6f20283755b339c0dc273988b" kindref="member">ResetDevices::Standard</ref></defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void modm::platform::I2cMaster3::connect</definition>
        <argsstring>(PullUps pullups=PullUps::External)</argsstring>
        <name>connect</name>
        <param>
          <type><ref refid="classmodm_1_1_i2c_master_1a51438a8241ababe94f9ca4b69b75d91c" kindref="member">PullUps</ref></type>
          <declname>pullups</declname>
          <defval><ref refid="classmodm_1_1_i2c_master_1a51438a8241ababe94f9ca4b69b75d91cab206a1b4ea1097761f78e8876f6da779" kindref="member">PullUps::External</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/i2c/i2c_master_3.hpp" line="44" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/i2c/i2c_master_3.hpp" bodystart="44" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_i2c_master3_1a2cfc5f5558d2a4e8ab4252414ef2b718" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SystemClock</type>
          </param>
          <param>
            <type><ref refid="group__modm__math__units_1ga30af1fac499efa181bc4708e24c577d1" kindref="member">baudrate_t</ref></type>
            <declname>baudrate</declname>
            <defname>baudrate</defname>
            <defval><ref refid="group__modm__math__units_1gaf31b3ba53e2eef7b3d4780d5f6ef0c30" kindref="member">kBd</ref>(100)</defval>
          </param>
          <param>
            <type><ref refid="group__modm__math__units_1ga4f017ee3fdf26cb780b0df55356f031c" kindref="member">percent_t</ref></type>
            <declname>tolerance</declname>
            <defname>tolerance</defname>
            <defval><ref refid="group__modm__math__units_1gaa849cad2910e94feb4a7f31a6dacbb1c" kindref="member">pct</ref>(5)</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void modm::platform::I2cMaster3::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set up the I2C module for master operation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>Standard</computeroutput> or <computeroutput>Fast</computeroutput>, <computeroutput>High</computeroutput> datarate is not supported </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/i2c/i2c_master_3.hpp" line="72" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/i2c/i2c_master_3.hpp" bodystart="72" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_i2c_master3_1ad7f0a86862b5ab06e0975c48098f7535" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::I2cMaster3::start</definition>
        <argsstring>(I2cTransaction *transaction, ConfigurationHandler handler=nullptr)</argsstring>
        <name>start</name>
        <param>
          <type><ref refid="classmodm_1_1_i2c_transaction" kindref="compound">I2cTransaction</ref> *</type>
          <declname>transaction</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1_i2c_1acc3232e086891a4564399117a4e0e450" kindref="member">ConfigurationHandler</ref></type>
          <declname>handler</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/i2c/i2c_master_3.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_i2c_master3_1a51f264af4f0c8b8502e0c0e04866adef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_i2c_master_1aaeba2d490d4a099a1d45cd713106b3e8" kindref="member">Error</ref></type>
        <definition>static Error modm::platform::I2cMaster3::getErrorState</definition>
        <argsstring>()</argsstring>
        <name>getErrorState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/i2c/i2c_master_3.hpp" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_i2c_master3_1a427fd19f4ed97217cbfda41d322bb82e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::I2cMaster3::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/i2c/i2c_master_3.hpp" line="128" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_i2c_master3_1a3d21bc52f57847c2eca234f746b77aaa" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::I2cMaster3::initializeWithPrescaler</definition>
        <argsstring>(uint8_t peripheralFrequency, uint8_t riseTime, uint16_t prescaler)</argsstring>
        <name>initializeWithPrescaler</name>
        <param>
          <type>uint8_t</type>
          <declname>peripheralFrequency</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>riseTime</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>prescaler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/i2c/i2c_master_3.hpp" line="133" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classmodm_1_1_i2c_master" kindref="compound">I2cMaster</ref> implementation of I2C3 module.</para><para>Interrupts must be enabled.</para><para><simplesect kind="author"><para>Georgi Grinshpun </para></simplesect>
<simplesect kind="author"><para>Niklas Hauser </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1279">
        <label>modm::platform::I2cMaster3</label>
        <link refid="classmodm_1_1platform_1_1_i2c_master3"/>
        <childnode refid="1280" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1282">
        <label>modm::I2c</label>
        <link refid="structmodm_1_1_i2c"/>
      </node>
      <node id="1280">
        <label>modm::I2cMaster</label>
        <link refid="classmodm_1_1_i2c_master"/>
        <childnode refid="1281" relation="public-inheritance">
        </childnode>
        <childnode refid="1282" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1281">
        <label>modm::PeripheralDriver</label>
        <link refid="classmodm_1_1_peripheral_driver"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1283">
        <label>modm::platform::I2cMaster3</label>
        <link refid="classmodm_1_1platform_1_1_i2c_master3"/>
        <childnode refid="1284" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1286">
        <label>modm::I2c</label>
        <link refid="structmodm_1_1_i2c"/>
      </node>
      <node id="1284">
        <label>modm::I2cMaster</label>
        <link refid="classmodm_1_1_i2c_master"/>
        <childnode refid="1285" relation="public-inheritance">
        </childnode>
        <childnode refid="1286" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1285">
        <label>modm::PeripheralDriver</label>
        <link refid="classmodm_1_1_peripheral_driver"/>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/i2c/i2c_master_3.hpp" line="37" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/i2c/i2c_master_3.hpp" bodystart="36" bodyend="134"/>
    <listofallmembers>
      <member refid="classmodm_1_1_peripheral_driver_1a5c336ff9889c347e7eadb810bf984ebd" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>assertBaudrateInTolerance</name></member>
      <member refid="structmodm_1_1_i2c_1acc3232e086891a4564399117a4e0e450" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>ConfigurationHandler</name></member>
      <member refid="classmodm_1_1platform_1_1_i2c_master3_1aae253c89b1b1537e9232db5681369b82" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>connect</name></member>
      <member refid="structmodm_1_1_i2c_1a0406997126d064926cdb512911a17dcd" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>DetachCause</name></member>
      <member refid="classmodm_1_1_i2c_master_1aaeba2d490d4a099a1d45cd713106b3e8" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>Error</name></member>
      <member refid="classmodm_1_1platform_1_1_i2c_master3_1a51f264af4f0c8b8502e0c0e04866adef" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>getErrorState</name></member>
      <member refid="classmodm_1_1platform_1_1_i2c_master3_1a2cfc5f5558d2a4e8ab4252414ef2b718" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>initialize</name></member>
      <member refid="classmodm_1_1platform_1_1_i2c_master3_1a3d21bc52f57847c2eca234f746b77aaa" prot="private" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>initializeWithPrescaler</name></member>
      <member refid="structmodm_1_1_i2c_1a768a0860e730f40db13d750648eb42ad" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>Operation</name></member>
      <member refid="structmodm_1_1_i2c_1a9b3a80feb3a8f179706ee1d5afe8bb31" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>OperationAfterRead</name></member>
      <member refid="structmodm_1_1_i2c_1ae92dc2a408c98192b77d0702fd18350d" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>OperationAfterStart</name></member>
      <member refid="structmodm_1_1_i2c_1aec4012822851f4abbe0ed0dc03c24cbb" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>OperationAfterWrite</name></member>
      <member refid="classmodm_1_1_i2c_master_1a51438a8241ababe94f9ca4b69b75d91c" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>PullUps</name></member>
      <member refid="structmodm_1_1_i2c_1af314fb0ec2e32a25c17cf9f0a54447ee" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>Read</name></member>
      <member refid="classmodm_1_1platform_1_1_i2c_master3_1a427fd19f4ed97217cbfda41d322bb82e" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>reset</name></member>
      <member refid="classmodm_1_1_i2c_master_1a141efec8e032cdcd5c9766fbf0f1ddcb" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>ResetDevices</name></member>
      <member refid="structmodm_1_1_i2c_1a1855002ad6a0992e32db4f3ebf0432da" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>resetDevices</name></member>
      <member refid="classmodm_1_1platform_1_1_i2c_master3_1ad7f0a86862b5ab06e0975c48098f7535" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>start</name></member>
      <member refid="classmodm_1_1platform_1_1_i2c_master3_1aa1dc60c90394235cf15e40603241be89" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>TransactionBufferSize</name></member>
      <member refid="structmodm_1_1_i2c_1a0ba607aa36d2c6c1e5f3ddd9a969c713" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>TransactionState</name></member>
      <member refid="structmodm_1_1_i2c_1a1f77408aecf63279f7c085d8c3692681" prot="public" virt="non-virtual"><scope>modm::platform::I2cMaster3</scope><name>Write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
