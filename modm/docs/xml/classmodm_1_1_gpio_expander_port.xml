<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_gpio_expander_port" kind="class" language="C++" prot="public">
    <compoundname>modm::GpioExpanderPort</compoundname>
    <basecompoundref refid="classmodm_1_1_gpio_port" prot="public" virt="non-virtual">modm::GpioPort</basecompoundref>
    <includes refid="gpio__expander_8hpp" local="no">modm/architecture/interface/gpio_expander.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classmodm_1_1_gpio_expander" kindref="compound">GpioExpander</ref></type>
      </param>
      <param>
        <type><ref refid="classmodm_1_1_gpio_expander" kindref="compound">GpioExpander</ref> &amp;</type>
        <declname>expander</declname>
        <defname>expander</defname>
      </param>
      <param>
        <type>typename GpioExpander::Pin</type>
        <declname>StartPin</declname>
        <defname>StartPin</defname>
      </param>
      <param>
        <type>uint8_t</type>
        <declname>Width</declname>
        <defname>Width</defname>
      </param>
      <param>
        <type><ref refid="classmodm_1_1_gpio_port_1a7ff5dde1f0e7851f0059d35be50bea33" kindref="member">GpioPort::DataOrder</ref></type>
        <declname>DataOrder</declname>
        <defname>DataOrder</defname>
        <defval><ref refid="classmodm_1_1_gpio_port_1a7ff5dde1f0e7851f0059d35be50bea33a960b44c579bc2f6818d2daaf9e4c16f0" kindref="member">GpioPort::DataOrder::Normal</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmodm_1_1_gpio_expander_port_1a82c2830e234ea22d46316c4901e1ba35" prot="private" static="no">
        <type>typename GpioExpander::Pins</type>
        <definition>using modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::Pins =  typename GpioExpander::Pins</definition>
        <argsstring></argsstring>
        <name>Pins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="355" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1_gpio_expander_port_1ab1ebbd3409c50398edaa16ec79b5adfe" prot="private" static="no">
        <type>typename <ref refid="classmodm_1_1_gpio_expander_1a7465c714b304d6c0be85a04c4529f82c" kindref="member">GpioExpander::PortType</ref></type>
        <definition>using modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::PortType =  typename GpioExpander::PortType</definition>
        <argsstring></argsstring>
        <name>PortType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="356" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="356" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1_gpio_expander_port_1abaddbcb448765620212343cb424fa547" prot="private" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::StartIndex</definition>
        <argsstring></argsstring>
        <name>StartIndex</name>
        <initializer>= <ref refid="classmodm_1_1_gpio_expander_1a5b49a30356d258534f5725d12c604404" kindref="member">GpioExpander::indexFromPin</ref>(StartPin)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="349" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_gpio_expander_port_1af843990014bf32218098c2e1d357a935" prot="private" static="yes" mutable="no">
        <type>constexpr PortType</type>
        <definition>constexpr PortType modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::dataMask</definition>
        <argsstring></argsstring>
        <name>dataMask</name>
        <initializer>= (1 &lt;&lt; Width) - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="358" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_gpio_expander_port_1aa29c4ef25de78a3876fef341e2e0268b" prot="private" static="yes" mutable="no">
        <type>constexpr PortType</type>
        <definition>constexpr PortType modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::portMask</definition>
        <argsstring></argsstring>
        <name>portMask</name>
        <initializer>= dataMask &lt;&lt; StartIndex</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="359" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="359" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1_gpio_expander_port_1ae6233408fdd231666d262ad4bf34e29c" prot="public" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <initializer>= Width</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="362" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_gpio_expander_port_1a4d925c61a810a2189e5a2d730379a8e6" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="classmodm_1_1_gpio_expander" kindref="compound">GpioExpander</ref> &amp;</type>
        <definition>constexpr GpioExpander&amp; modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::ioExpander</definition>
        <argsstring></argsstring>
        <name>ioExpander</name>
        <initializer>= expander</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="367" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1_gpio_expander_port_1a2a5bba6d09c5bb8522c3a8e1c2a23732" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classmodm_1_1_gpio_port_1a7ff5dde1f0e7851f0059d35be50bea33" kindref="member">DataOrder</ref></type>
        <definition>static constexpr DataOrder modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::getDataOrder</definition>
        <argsstring>()</argsstring>
        <name>getDataOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="365" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="365" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_gpio_expander_port_1a531e74198c5d497be066020041074bea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::setOutput</definition>
        <argsstring>()</argsstring>
        <name>setOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="371" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="371" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_gpio_expander_port_1a0fc40e89cedaae81a6bd87db440e584f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::setInput</definition>
        <argsstring>()</argsstring>
        <name>setInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="377" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="377" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_gpio_expander_port_1afca5299d0c3b66c0602dcc8acb206a46" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PortType</type>
        <definition>static PortType modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="383" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="383" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_gpio_expander_port_1a826ea8da9e043f5b8f54f89f9874bb1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::write</definition>
        <argsstring>(PortType data)</argsstring>
        <name>write</name>
        <param>
          <type>PortType</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="391" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="391" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_gpio_expander_port_1af2ac068e0a8a7c582a9287ae42cac05d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;::toggle</definition>
        <argsstring>()</argsstring>
        <name>toggle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="399" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="399" bodyend="402"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Create an <computeroutput><ref refid="classmodm_1_1_gpio_port" kindref="compound">modm::GpioPort</ref></computeroutput> compatible interface from any IO-expander conforming to the <computeroutput><ref refid="classmodm_1_1_gpio_expander" kindref="compound">modm::GpioExpander</ref></computeroutput> interface.</para><para>This allows the transparent usage of IO Expander ports in classes that require Ports as template arguments. The port access is optimized so that only one write or one read needs to be performed to update the port values. Any port position and width is supported and operates independently from the other IOs on the expander.</para><para><simplesect kind="note"><para>For every port access a blocking bus transfer is performed, therefore do not expect these ports to be fast!</para></simplesect>
<simplesect kind="warning"><para>You can also use <computeroutput>SoftwareGpioPort</computeroutput> to create a port out of individual <computeroutput><ref refid="classmodm_1_1_gpio_expander_pin" kindref="compound">GpioExpanderPin</ref></computeroutput> classes, however, since each pin is individually accessed, this means more bus traffic and a non-atomic write and read of port data! It is strongly recommended to use this optimized class instead!</para></simplesect>
Usage: <programlisting><codeline><highlight class="normal">typedef<sp/>modm::Pca8574&lt;MyI2cMaster&gt;<sp/>Expander;</highlight></codeline>
<codeline><highlight class="normal">Expander<sp/>expander;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">typedef<sp/>modm::GpioExpanderPort&lt;<sp/>Expander,<sp/>expander,<sp/>Expander::Pin::P4,<sp/>4<sp/>&gt;<sp/>Data;</highlight></codeline>
</programlisting></para><para>However, instead of using this class like that, prefer using the alias-template types provided by the IO-expander of your choice for better readability:</para><para><programlisting><codeline><highlight class="normal">typedef<sp/>modm::Pca8574&lt;MyI2cMaster&gt;<sp/>Expander;</highlight></codeline>
<codeline><highlight class="normal">Expander<sp/>expander;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>a<sp/>4bit<sp/>wide<sp/>port<sp/>in<sp/>the<sp/>upper<sp/>nibble</highlight></codeline>
<codeline><highlight class="normal">typedef<sp/>Expander::Port&lt;<sp/>expander,<sp/>Expander::Pin::P4,<sp/>4<sp/>&gt;<sp/>Data;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>writes<sp/>0x50<sp/>on<sp/>the<sp/>port</highlight></codeline>
<codeline><highlight class="normal">Data::write(0x5);</highlight></codeline>
</programlisting></para><para>You can reverse the ports bit order in software at runtime, so that data is written or read in reverse bit order when accessing the port:</para><para><programlisting><codeline><highlight class="normal">//<sp/>a<sp/>4bit<sp/>wide<sp/>port<sp/>in<sp/>the<sp/>upper<sp/>nibble<sp/>with<sp/>reversed<sp/>bit<sp/>order</highlight></codeline>
<codeline><highlight class="normal">typedef<sp/>Expander::Port&lt;<sp/>expander,<sp/>Expander::Pin::P4,<sp/>4,<sp/>modm::GpioPort::DataOrder::Reversed<sp/>&gt;<sp/>Data;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>writes<sp/>0xa0<sp/>on<sp/>the<sp/>port</highlight></codeline>
<codeline><highlight class="normal">Data::write(0x5);</highlight></codeline>
</programlisting></para><para><simplesect kind="warning"><para>Access to the IO-expander is <bold>blocking and can silently fail</bold>! If this is undesirable for you application, you need to write your own wrapper!</para></simplesect>
<simplesect kind="pre"><para>The IO-expander needs to be initialized externally, if required.</para></simplesect>
<simplesect kind="see"><para><ref refid="classmodm_1_1_gpio_expander" kindref="compound">modm::GpioExpander</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classmodm_1_1_gpio_i_o" kindref="compound">modm::GpioIO</ref></para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classmodm_1_1_gpio_expander" kindref="compound">GpioExpander</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Type of class conforming to the <computeroutput><ref refid="classmodm_1_1_gpio_expander" kindref="compound">modm::GpioExpander</ref></computeroutput> interface </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expander</parametername>
</parameternamelist>
<parameterdescription>
<para>instance of the expander with the selected pin </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>StartPin</parametername>
</parameternamelist>
<parameterdescription>
<para>starting pin of the port, physically LSB </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Width</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the entire port in bits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DataOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>the bit order mapping of data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Niklas Hauser </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1009">
        <label>modm::GpioPort</label>
        <link refid="classmodm_1_1_gpio_port"/>
      </node>
      <node id="1008">
        <label>modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;</label>
        <link refid="classmodm_1_1_gpio_expander_port"/>
        <childnode refid="1009" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1011">
        <label>modm::GpioPort</label>
        <link refid="classmodm_1_1_gpio_port"/>
      </node>
      <node id="1010">
        <label>modm::GpioExpanderPort&lt; GpioExpander, expander, StartPin, Width, DataOrder &gt;</label>
        <link refid="classmodm_1_1_gpio_expander_port"/>
        <childnode refid="1011" relation="public-inheritance">
        </childnode>
        <childnode refid="1012" relation="usage">
          <edgelabel>ioExpander</edgelabel>
        </childnode>
      </node>
      <node id="1012">
        <label>modm::GpioExpander</label>
        <link refid="classmodm_1_1_gpio_expander"/>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" line="348" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/gpio_expander.hpp" bodystart="347" bodyend="403"/>
    <listofallmembers>
      <member refid="classmodm_1_1_gpio_expander_port_1af843990014bf32218098c2e1d357a935" prot="private" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>dataMask</name></member>
      <member refid="classmodm_1_1_gpio_port_1a7ff5dde1f0e7851f0059d35be50bea33" prot="public" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>DataOrder</name></member>
      <member refid="classmodm_1_1_gpio_expander_port_1a2a5bba6d09c5bb8522c3a8e1c2a23732" prot="public" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>getDataOrder</name></member>
      <member refid="classmodm_1_1_gpio_expander_port_1a4d925c61a810a2189e5a2d730379a8e6" prot="public" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>ioExpander</name></member>
      <member refid="classmodm_1_1_gpio_port_1a0aeb54e20c1310dc35764c7f82112d2f" prot="public" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>number_of_ports</name></member>
      <member refid="classmodm_1_1_gpio_expander_port_1a82c2830e234ea22d46316c4901e1ba35" prot="private" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>Pins</name></member>
      <member refid="classmodm_1_1_gpio_expander_port_1aa29c4ef25de78a3876fef341e2e0268b" prot="private" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>portMask</name></member>
      <member refid="classmodm_1_1_gpio_expander_port_1ab1ebbd3409c50398edaa16ec79b5adfe" prot="private" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>PortType</name></member>
      <member refid="classmodm_1_1_gpio_expander_port_1afca5299d0c3b66c0602dcc8acb206a46" prot="public" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>read</name></member>
      <member refid="classmodm_1_1_gpio_expander_port_1a0fc40e89cedaae81a6bd87db440e584f" prot="public" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>setInput</name></member>
      <member refid="classmodm_1_1_gpio_expander_port_1a531e74198c5d497be066020041074bea" prot="public" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1_gpio_expander_port_1abaddbcb448765620212343cb424fa547" prot="private" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>StartIndex</name></member>
      <member refid="classmodm_1_1_gpio_expander_port_1af2ac068e0a8a7c582a9287ae42cac05d" prot="public" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>toggle</name></member>
      <member refid="classmodm_1_1_gpio_expander_port_1ae6233408fdd231666d262ad4bf34e29c" prot="public" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>width</name></member>
      <member refid="classmodm_1_1_gpio_expander_port_1a826ea8da9e043f5b8f54f89f9874bb1f" prot="public" virt="non-virtual"><scope>modm::GpioExpanderPort</scope><name>write</name></member>
      <member refid="classmodm_1_1_gpio_port_1a84acfb6bba8e796e8c4a3805228d7b80" prot="public" virt="non-virtual" ambiguityscope="modm::GpioPort::"><scope>modm::GpioExpanderPort</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
