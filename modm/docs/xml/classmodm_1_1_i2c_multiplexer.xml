<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_i2c_multiplexer" kind="class" language="C++" prot="public">
    <compoundname>modm::I2cMultiplexer</compoundname>
    <basecompoundref refid="structmodm_1_1i2c_multiplexer" prot="public" virt="non-virtual">modm::i2cMultiplexer</basecompoundref>
    <basecompoundref refid="structmodm_1_1_i2c" prot="public" virt="non-virtual">modm::I2c</basecompoundref>
    <includes refid="i2c__multiplexer_8hpp" local="no">modm/architecture/interface/i2c_multiplexer.hpp</includes>
    <templateparamlist>
      <param>
        <type>class <ref refid="classmodm_1_1_i2c_master" kindref="compound">I2cMaster</ref></type>
      </param>
      <param>
        <type>class I2cMultiplexerDevice</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="typedef" id="classmodm_1_1_i2c_multiplexer_1ad33057e6f8da95b781e36773b8a39865" prot="public" static="no">
        <type><ref refid="classmodm_1_1_i2c_multiplexer_channel" kindref="compound">I2cMultiplexerChannel</ref>&lt; object, Channel::Ch0 &gt;</type>
        <definition>using modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;::Ch0 =  I2cMultiplexerChannel&lt; object, Channel::Ch0 &gt;</definition>
        <argsstring></argsstring>
        <name>Ch0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Alias-templates for simpler use of the Channels </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="76" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1_i2c_multiplexer_1a24332f7115d526aaa8390a74537bb2f6" prot="public" static="no">
        <type><ref refid="classmodm_1_1_i2c_multiplexer_channel" kindref="compound">I2cMultiplexerChannel</ref>&lt; object, Channel::Ch1 &gt;</type>
        <definition>using modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;::Ch1 =  I2cMultiplexerChannel&lt; object, Channel::Ch1 &gt;</definition>
        <argsstring></argsstring>
        <name>Ch1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="78" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1_i2c_multiplexer_1a8b30c7b2b684e4cd71978cfa822894bb" prot="public" static="no">
        <type><ref refid="classmodm_1_1_i2c_multiplexer_channel" kindref="compound">I2cMultiplexerChannel</ref>&lt; object, Channel::Ch2 &gt;</type>
        <definition>using modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;::Ch2 =  I2cMultiplexerChannel&lt; object, Channel::Ch2 &gt;</definition>
        <argsstring></argsstring>
        <name>Ch2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="80" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1_i2c_multiplexer_1a051abf9be1531e7bd6bd076508907e4d" prot="public" static="no">
        <type><ref refid="classmodm_1_1_i2c_multiplexer_channel" kindref="compound">I2cMultiplexerChannel</ref>&lt; object, Channel::Ch3 &gt;</type>
        <definition>using modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;::Ch3 =  I2cMultiplexerChannel&lt; object, Channel::Ch3 &gt;</definition>
        <argsstring></argsstring>
        <name>Ch3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="82" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1_i2c_multiplexer_1afabd605a7594b53a7aea2f6af60f26b7" prot="public" static="no">
        <type><ref refid="classmodm_1_1_i2c_multiplexer_channel" kindref="compound">I2cMultiplexerChannel</ref>&lt; object, Channel::Ch4 &gt;</type>
        <definition>using modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;::Ch4 =  I2cMultiplexerChannel&lt; object, Channel::Ch4 &gt;</definition>
        <argsstring></argsstring>
        <name>Ch4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="84" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1_i2c_multiplexer_1a8b795dd242abbd3596ff9d2fa1e0e256" prot="public" static="no">
        <type><ref refid="classmodm_1_1_i2c_multiplexer_channel" kindref="compound">I2cMultiplexerChannel</ref>&lt; object, Channel::Ch5 &gt;</type>
        <definition>using modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;::Ch5 =  I2cMultiplexerChannel&lt; object, Channel::Ch5 &gt;</definition>
        <argsstring></argsstring>
        <name>Ch5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="86" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1_i2c_multiplexer_1afc67081304ac801dd31080a2c8a9eb97" prot="public" static="no">
        <type><ref refid="classmodm_1_1_i2c_multiplexer_channel" kindref="compound">I2cMultiplexerChannel</ref>&lt; object, Channel::Ch6 &gt;</type>
        <definition>using modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;::Ch6 =  I2cMultiplexerChannel&lt; object, Channel::Ch6 &gt;</definition>
        <argsstring></argsstring>
        <name>Ch6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="88" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1_i2c_multiplexer_1aab08e2b55a8f8b78448ead21ad44d77a" prot="public" static="no">
        <type><ref refid="classmodm_1_1_i2c_multiplexer_channel" kindref="compound">I2cMultiplexerChannel</ref>&lt; object, Channel::Ch7 &gt;</type>
        <definition>using modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;::Ch7 =  I2cMultiplexerChannel&lt; object, Channel::Ch7 &gt;</definition>
        <argsstring></argsstring>
        <name>Ch7</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="90" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmodm_1_1_i2c_multiplexer_1afed212c22164cb35738352a121b5b65c" prot="public" static="no" mutable="no">
        <type>I2cMultiplexerDevice</type>
        <definition>I2cMultiplexerDevice modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;::multiplexerDevice</definition>
        <argsstring></argsstring>
        <name>multiplexerDevice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="93" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_i2c_multiplexer_1a39f2d6ea6245adac5abaf96d8269e7de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;::I2cMultiplexer</definition>
        <argsstring>()</argsstring>
        <name>I2cMultiplexer</name>
        <briefdescription>
<para>Constructor, sets address to default of 0x70. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="64" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="99" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1_i2c_multiplexer_1a68418bcfa1ab93389501f1717d4e44d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;::start</definition>
        <argsstring>(I2cTransaction *transaction, ConfigurationHandler handler=nullptr)</argsstring>
        <name>start</name>
        <param>
          <type><ref refid="classmodm_1_1_i2c_transaction" kindref="compound">I2cTransaction</ref> *</type>
          <declname>transaction</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1_i2c_1acc3232e086891a4564399117a4e0e450" kindref="member">ConfigurationHandler</ref></type>
          <declname>handler</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="67" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="67" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1295">
        <label>modm::i2cMultiplexer</label>
        <link refid="structmodm_1_1i2c_multiplexer"/>
      </node>
      <node id="1296">
        <label>modm::I2c</label>
        <link refid="structmodm_1_1_i2c"/>
      </node>
      <node id="1294">
        <label>modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;</label>
        <link refid="classmodm_1_1_i2c_multiplexer"/>
        <childnode refid="1295" relation="public-inheritance">
        </childnode>
        <childnode refid="1296" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1298">
        <label>modm::i2cMultiplexer</label>
        <link refid="structmodm_1_1i2c_multiplexer"/>
      </node>
      <node id="1299">
        <label>modm::I2c</label>
        <link refid="structmodm_1_1_i2c"/>
      </node>
      <node id="1297">
        <label>modm::I2cMultiplexer&lt; I2cMaster, I2cMultiplexerDevice &gt;</label>
        <link refid="classmodm_1_1_i2c_multiplexer"/>
        <childnode refid="1298" relation="public-inheritance">
        </childnode>
        <childnode refid="1299" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="61" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="60" bodyend="94"/>
    <listofallmembers>
      <member refid="classmodm_1_1_i2c_multiplexer_1ad33057e6f8da95b781e36773b8a39865" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>Ch0</name></member>
      <member refid="classmodm_1_1_i2c_multiplexer_1a24332f7115d526aaa8390a74537bb2f6" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>Ch1</name></member>
      <member refid="classmodm_1_1_i2c_multiplexer_1a8b30c7b2b684e4cd71978cfa822894bb" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>Ch2</name></member>
      <member refid="classmodm_1_1_i2c_multiplexer_1a051abf9be1531e7bd6bd076508907e4d" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>Ch3</name></member>
      <member refid="classmodm_1_1_i2c_multiplexer_1afabd605a7594b53a7aea2f6af60f26b7" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>Ch4</name></member>
      <member refid="classmodm_1_1_i2c_multiplexer_1a8b795dd242abbd3596ff9d2fa1e0e256" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>Ch5</name></member>
      <member refid="classmodm_1_1_i2c_multiplexer_1afc67081304ac801dd31080a2c8a9eb97" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>Ch6</name></member>
      <member refid="classmodm_1_1_i2c_multiplexer_1aab08e2b55a8f8b78448ead21ad44d77a" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>Ch7</name></member>
      <member refid="structmodm_1_1i2c_multiplexer_1acf4190fce27312433a69fcec9da17bae" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>Channel</name></member>
      <member refid="structmodm_1_1_i2c_1acc3232e086891a4564399117a4e0e450" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>ConfigurationHandler</name></member>
      <member refid="structmodm_1_1_i2c_1a0406997126d064926cdb512911a17dcd" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>DetachCause</name></member>
      <member refid="classmodm_1_1_i2c_multiplexer_1a39f2d6ea6245adac5abaf96d8269e7de" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>I2cMultiplexer</name></member>
      <member refid="classmodm_1_1_i2c_multiplexer_1afed212c22164cb35738352a121b5b65c" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>multiplexerDevice</name></member>
      <member refid="structmodm_1_1_i2c_1a768a0860e730f40db13d750648eb42ad" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>Operation</name></member>
      <member refid="structmodm_1_1_i2c_1a9b3a80feb3a8f179706ee1d5afe8bb31" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>OperationAfterRead</name></member>
      <member refid="structmodm_1_1_i2c_1ae92dc2a408c98192b77d0702fd18350d" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>OperationAfterStart</name></member>
      <member refid="structmodm_1_1_i2c_1aec4012822851f4abbe0ed0dc03c24cbb" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>OperationAfterWrite</name></member>
      <member refid="structmodm_1_1_i2c_1af314fb0ec2e32a25c17cf9f0a54447ee" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>Read</name></member>
      <member refid="structmodm_1_1_i2c_1a1855002ad6a0992e32db4f3ebf0432da" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>resetDevices</name></member>
      <member refid="classmodm_1_1_i2c_multiplexer_1a68418bcfa1ab93389501f1717d4e44d1" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>start</name></member>
      <member refid="structmodm_1_1_i2c_1a0ba607aa36d2c6c1e5f3ddd9a969c713" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>TransactionState</name></member>
      <member refid="structmodm_1_1_i2c_1a1f77408aecf63279f7c085d8c3692681" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexer</scope><name>Write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
