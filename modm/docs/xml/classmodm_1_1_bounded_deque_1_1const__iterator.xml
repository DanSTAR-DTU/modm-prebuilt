<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_bounded_deque_1_1const__iterator" kind="class" language="C++" prot="public">
    <compoundname>modm::BoundedDeque::const_iterator</compoundname>
    <includes refid="deque_8hpp" local="no">modm/container/deque.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmodm_1_1_bounded_deque_1_1const__iterator_1a0963c95bc99b14c0d114006148771887" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class BoundedDeque</definition>
        <argsstring></argsstring>
        <name>BoundedDeque</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="194" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1_bounded_deque_1_1const__iterator_1ac8a1fd2bcea32aef1e0e254a0a993936" prot="private" static="no" mutable="no">
        <type><ref refid="classmodm_1_1_bounded_deque_1ab9c0649c8f547e1e364c99f09dddc77c" kindref="member">Index</ref></type>
        <definition>Index modm::BoundedDeque&lt; T, N &gt;::const_iterator::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="211" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_bounded_deque_1_1const__iterator_1a9b41a506af990a40b56312b599999024" prot="private" static="no" mutable="no">
        <type>const <ref refid="classmodm_1_1_bounded_deque" kindref="compound">BoundedDeque</ref> *</type>
        <definition>const BoundedDeque* modm::BoundedDeque&lt; T, N &gt;::const_iterator::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="212" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_bounded_deque_1_1const__iterator_1aa0e1eed9da2fda0b5259bef5b566f0b6" prot="private" static="no" mutable="no">
        <type><ref refid="classmodm_1_1_bounded_deque_1aef6c75d57dfc1ac40f10fb6bb79d951b" kindref="member">Size</ref></type>
        <definition>Size modm::BoundedDeque&lt; T, N &gt;::const_iterator::count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="214" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_bounded_deque_1_1const__iterator_1a9614f63314fe01caef3c88cc8a2fd8b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::BoundedDeque&lt; T, N &gt;::const_iterator::const_iterator</definition>
        <argsstring>()</argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_bounded_deque_1_1const__iterator_1a322360a3705b147d3f366643bca7104a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::BoundedDeque&lt; T, N &gt;::const_iterator::const_iterator</definition>
        <argsstring>(const const_iterator &amp;other)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const <ref refid="classmodm_1_1_bounded_deque_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_bounded_deque_1_1const__iterator_1a62ad7ee2411816929ec37133f4af6cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_bounded_deque_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; modm::BoundedDeque&lt; T, N &gt;::const_iterator::operator=</definition>
        <argsstring>(const const_iterator &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_bounded_deque_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_bounded_deque_1_1const__iterator_1a3e5421eee6600e7c9d7ec8332cfdb4fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_bounded_deque_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; modm::BoundedDeque&lt; T, N &gt;::const_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_bounded_deque_1_1const__iterator_1ab1c5a2d33cd2106440fb70507350a6f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_bounded_deque_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; modm::BoundedDeque&lt; T, N &gt;::const_iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_bounded_deque_1_1const__iterator_1a07531eedba898ae6533769b416a5994b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::BoundedDeque&lt; T, N &gt;::const_iterator::operator==</definition>
        <argsstring>(const const_iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmodm_1_1_bounded_deque_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_bounded_deque_1_1const__iterator_1ac8efa3535f07c76f391de96f7d05aa7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::BoundedDeque&lt; T, N &gt;::const_iterator::operator!=</definition>
        <argsstring>(const const_iterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_bounded_deque_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_bounded_deque_1_1const__iterator_1a9d6194436f9d79135dd1119172c78bc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::BoundedDeque&lt; T, N &gt;::const_iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_bounded_deque_1_1const__iterator_1a628f2c31c9933fe6e9a914f62145b17d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* modm::BoundedDeque&lt; T, N &gt;::const_iterator::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="206" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmodm_1_1_bounded_deque_1_1const__iterator_1a7a3ac569ea28f05e73fe76db5e73525b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::BoundedDeque&lt; T, N &gt;::const_iterator::const_iterator</definition>
        <argsstring>(Index index, const BoundedDeque *parent)</argsstring>
        <name>const_iterator</name>
        <param>
          <type><ref refid="classmodm_1_1_bounded_deque_1ab9c0649c8f547e1e364c99f09dddc77c" kindref="member">Index</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_bounded_deque" kindref="compound">BoundedDeque</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="209" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bidirectional const iterator. </para>    </briefdescription>
    <detaileddescription>
<para><xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>check if a simpler implementation is possible </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" line="193" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/deque.hpp" bodystart="192" bodyend="215"/>
    <listofallmembers>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1a0963c95bc99b14c0d114006148771887" prot="private" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>BoundedDeque</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1a9614f63314fe01caef3c88cc8a2fd8b7" prot="public" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1a322360a3705b147d3f366643bca7104a" prot="public" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1a7a3ac569ea28f05e73fe76db5e73525b" prot="private" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1aa0e1eed9da2fda0b5259bef5b566f0b6" prot="private" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>count</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1ac8a1fd2bcea32aef1e0e254a0a993936" prot="private" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>index</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1ac8efa3535f07c76f391de96f7d05aa7d" prot="public" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>operator!=</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1a9d6194436f9d79135dd1119172c78bc7" prot="public" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>operator*</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1a3e5421eee6600e7c9d7ec8332cfdb4fc" prot="public" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>operator++</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1ab1c5a2d33cd2106440fb70507350a6f1" prot="public" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>operator--</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1a628f2c31c9933fe6e9a914f62145b17d" prot="public" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>operator-&gt;</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1a62ad7ee2411816929ec37133f4af6cf8" prot="public" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>operator=</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1a07531eedba898ae6533769b416a5994b" prot="public" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>operator==</name></member>
      <member refid="classmodm_1_1_bounded_deque_1_1const__iterator_1a9b41a506af990a40b56312b599999024" prot="private" virt="non-virtual"><scope>modm::BoundedDeque::const_iterator</scope><name>parent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
