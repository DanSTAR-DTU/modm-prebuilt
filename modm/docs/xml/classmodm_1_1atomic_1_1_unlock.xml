<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classmodm_1_1atomic_1_1_unlock" kind="class" language="C++" prot="public">
    <compoundname>modm::atomic::Unlock</compoundname>
    <includes refid="architecture_2interface_2atomic__lock_8hpp" local="no">modm/architecture/interface/atomic_lock.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1atomic_1_1_unlock_1a9de53b86ef2240c3a4af3cc453ddc926" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>modm::atomic::Unlock::Unlock</definition>
        <argsstring>()</argsstring>
        <name>Unlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/atomic_lock.hpp" line="70" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Opposite to <ref refid="classmodm_1_1atomic_1_1_lock" kindref="compound">atomic::Lock</ref></para>
<para>Use this class to create a block of code with interrupts enabled inside a locked block.</para>
<para>Most of the time you won&apos;t need this class. But on some rare times it is useful. The modm::Scheduler is an example for that. </para>
    </detaileddescription>
    <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/atomic_lock.hpp" line="67" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/atomic_lock.hpp" bodystart="66" bodyend="71"/>
    <listofallmembers>
      <member refid="classmodm_1_1atomic_1_1_unlock_1a9de53b86ef2240c3a4af3cc453ddc926" prot="public" virt="non-virtual"><scope>modm::atomic::Unlock</scope><name>Unlock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
