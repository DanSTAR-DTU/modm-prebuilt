<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_location2_d" kind="class" language="C++" prot="public">
    <compoundname>modm::Location2D</compoundname>
    <includes refid="location__2d_8hpp" local="no">modm/math/geometry/location_2d.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
        <defval>int16_t</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1_location2_d_1af9adf6838f32c82c456c91ad0bc935b4" prot="private" static="no" mutable="no">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt;</type>
        <definition>Vector&lt;T, 2&gt; modm::Location2D&lt; T &gt;::position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="116" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_location2_d_1a077108bc42d79f20560b83f7f9d5a640" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float modm::Location2D&lt; T &gt;::orientation</definition>
        <argsstring></argsstring>
        <name>orientation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="117" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a6242e4c4e88527a57f6ce23456a55ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Location2D&lt; T &gt;::Location2D</definition>
        <argsstring>()</argsstring>
        <name>Location2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a1f6fa54e13b1984d67b836147067985a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Location2D&lt; T &gt;::Location2D</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;position, const float &amp;orientation)</argsstring>
        <name>Location2D</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a0d5adcf65411fa664bbefdb4cc80f310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Location2D&lt; T &gt;::Location2D</definition>
        <argsstring>(const T &amp;x, const T &amp;y, const float &amp;orientation)</argsstring>
        <name>Location2D</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a929503c6a5ff2769184491867a9e8cc2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
        <definition>const Vector&lt;T, 2&gt;&amp; modm::Location2D&lt; T &gt;::getPosition</definition>
        <argsstring>() const</argsstring>
        <name>getPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1aaf48779eb513e1b6c7882a33eebbf1a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Location2D&lt; T &gt;::getX</definition>
        <argsstring>() const</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a7eed71ed7a2f93e98f64e4bd8d9f5570" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Location2D&lt; T &gt;::getY</definition>
        <argsstring>() const</argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1ab77f8ea0fe067f59f8fa5c1ad0a23f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Location2D&lt; T &gt;::setPosition</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;point)</argsstring>
        <name>setPosition</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a595afbe59aef915cd85041d05e32ff3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Location2D&lt; T &gt;::setPosition</definition>
        <argsstring>(const T &amp;x, const T &amp;y)</argsstring>
        <name>setPosition</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a041ba0d989c009dcb26c9251bfa7dc03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float modm::Location2D&lt; T &gt;::getOrientation</definition>
        <argsstring>() const</argsstring>
        <name>getOrientation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a196e0fc09fa571d2b555abee926b1b8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Location2D&lt; T &gt;::setOrientation</definition>
        <argsstring>(const float &amp;phi)</argsstring>
        <name>setOrientation</name>
        <param>
          <type>const float &amp;</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a4a2fa313d471a0bfcc0c2aef31059644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Location2D&lt; T &gt;::move</definition>
        <argsstring>(const Location2D &amp;diff)</argsstring>
        <name>move</name>
        <param>
          <type>const <ref refid="classmodm_1_1_location2_d" kindref="compound">Location2D</ref> &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
<para>Add a position increment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a584881982d7dc3e60beec9241f8e313c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Location2D&lt; T &gt;::move</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;diff)</argsstring>
        <name>move</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a9753fa56afdb46f06536f342ddacdda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Location2D&lt; T &gt;::move</definition>
        <argsstring>(T x, float phi)</argsstring>
        <name>move</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>phi</declname>
        </param>
        <briefdescription>
<para>Add a increment only in x-direction. </para>        </briefdescription>
        <detaileddescription>
<para>Our robots mostly use a differential drive with two driven wheels side by side, allowing the robot to move only in the drive direction (x-direction in the local coordinate system of the robot) and rotate. A movement perpendicular to the drive direction is impossible without an external force.</para><para>To estimate the position of the robot over time, we use odometry. Therefore it is necessary to add a lot small increments of movement over time. Because the y-component will always be zero, we created this method, which avoids unnecessary computations for the y-component and is therefore faster the the universal move-method.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>movement in x-direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>rotation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a9857d432a62556f5feeeefc51b30f9b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt;</type>
        <definition>Vector&lt;T, 2&gt; modm::Location2D&lt; T &gt;::translated</definition>
        <argsstring>(const Vector&lt; T, 2 &gt; &amp;vector) const</argsstring>
        <name>translated</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>TODO. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a8cceca0c307ebc9cda25c01ed2ae811f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmodm_1_1_location2_d" kindref="compound">Location2D</ref>&lt; U &gt;</type>
        <definition>Location2D&lt;U&gt; modm::Location2D&lt; T &gt;::convert</definition>
        <argsstring>() const</argsstring>
        <name>convert</name>
        <briefdescription>
<para>Convert between Location-objects with different base-types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1aafa8c00fa5a0adc7b2d3d2c40752268c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Location2D&lt; T &gt;::operator==</definition>
        <argsstring>(const Location2D &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmodm_1_1_location2_d" kindref="compound">Location2D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_location2_d_1a5a2c7c79d04e5b0b22332b2cd652d914" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Location2D&lt; T &gt;::operator!=</definition>
        <argsstring>(const Location2D &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_location2_d" kindref="compound">Location2D</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="109" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmodm_1_1_location2_d_1a2539c5f16ca41078027c6233c5926ae8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>friend <ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; operator&lt;&lt;</definition>
        <argsstring>(IOStream &amp;, const Location2D&lt; U &gt; &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_location2_d" kindref="compound">Location2D</ref>&lt; U &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="113" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Location in a 2D coordinate system. </para>    </briefdescription>
    <detaileddescription>
<para>This class is primarily used to describe the location of a robot on the field. The robot has a position (x- and y-coordinate) and a orientation (absolute angle in the range (-pi, pi)). </para>    </detaileddescription>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" line="38" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/location_2d.hpp" bodystart="37" bodyend="118"/>
    <listofallmembers>
      <member refid="classmodm_1_1_location2_d_1a8cceca0c307ebc9cda25c01ed2ae811f" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>convert</name></member>
      <member refid="classmodm_1_1_location2_d_1a041ba0d989c009dcb26c9251bfa7dc03" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>getOrientation</name></member>
      <member refid="classmodm_1_1_location2_d_1a929503c6a5ff2769184491867a9e8cc2" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>getPosition</name></member>
      <member refid="classmodm_1_1_location2_d_1aaf48779eb513e1b6c7882a33eebbf1a2" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>getX</name></member>
      <member refid="classmodm_1_1_location2_d_1a7eed71ed7a2f93e98f64e4bd8d9f5570" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>getY</name></member>
      <member refid="classmodm_1_1_location2_d_1a6242e4c4e88527a57f6ce23456a55ae3" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>Location2D</name></member>
      <member refid="classmodm_1_1_location2_d_1a1f6fa54e13b1984d67b836147067985a" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>Location2D</name></member>
      <member refid="classmodm_1_1_location2_d_1a0d5adcf65411fa664bbefdb4cc80f310" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>Location2D</name></member>
      <member refid="classmodm_1_1_location2_d_1a4a2fa313d471a0bfcc0c2aef31059644" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>move</name></member>
      <member refid="classmodm_1_1_location2_d_1a584881982d7dc3e60beec9241f8e313c" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>move</name></member>
      <member refid="classmodm_1_1_location2_d_1a9753fa56afdb46f06536f342ddacdda2" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>move</name></member>
      <member refid="classmodm_1_1_location2_d_1a5a2c7c79d04e5b0b22332b2cd652d914" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>operator!=</name></member>
      <member refid="classmodm_1_1_location2_d_1a2539c5f16ca41078027c6233c5926ae8" prot="private" virt="non-virtual"><scope>modm::Location2D</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_location2_d_1aafa8c00fa5a0adc7b2d3d2c40752268c" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>operator==</name></member>
      <member refid="classmodm_1_1_location2_d_1a077108bc42d79f20560b83f7f9d5a640" prot="private" virt="non-virtual"><scope>modm::Location2D</scope><name>orientation</name></member>
      <member refid="classmodm_1_1_location2_d_1af9adf6838f32c82c456c91ad0bc935b4" prot="private" virt="non-virtual"><scope>modm::Location2D</scope><name>position</name></member>
      <member refid="classmodm_1_1_location2_d_1a196e0fc09fa571d2b555abee926b1b8b" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>setOrientation</name></member>
      <member refid="classmodm_1_1_location2_d_1ab77f8ea0fe067f59f8fa5c1ad0a23f48" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>setPosition</name></member>
      <member refid="classmodm_1_1_location2_d_1a595afbe59aef915cd85041d05e32ff3d" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>setPosition</name></member>
      <member refid="classmodm_1_1_location2_d_1a9857d432a62556f5feeeefc51b30f9b7" prot="public" virt="non-virtual"><scope>modm::Location2D</scope><name>translated</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
