<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="doubly__linked__list_8hpp" kind="file" language="C++">
    <compoundname>doubly_linked_list.hpp</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="allocator_8hpp" local="no">modm/utils/allocator.hpp</includes>
    <includes local="yes">doubly_linked_list_impl.hpp</includes>
    <includes local="yes">doubly_linked_list_iterator_impl.hpp</includes>
    <includedby refid="container_8hpp" local="yes">/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container.hpp</includedby>
    <incdepgraph>
      <node id="1732">
        <label>doubly_linked_list_iterator_impl.hpp</label>
      </node>
      <node id="1723">
        <label>stdint.h</label>
      </node>
      <node id="1731">
        <label>doubly_linked_list_impl.hpp</label>
      </node>
      <node id="1729">
        <label>allocator/static.hpp</label>
        <link refid="static_8hpp"/>
        <childnode refid="1726" relation="include">
        </childnode>
      </node>
      <node id="1725">
        <label>allocator/dynamic.hpp</label>
        <link refid="dynamic_8hpp"/>
        <childnode refid="1726" relation="include">
        </childnode>
      </node>
      <node id="1730">
        <label>allocator/block.hpp</label>
        <link refid="block_8hpp"/>
        <childnode refid="1726" relation="include">
        </childnode>
      </node>
      <node id="1722">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp</label>
        <link refid="doubly__linked__list_8hpp"/>
        <childnode refid="1723" relation="include">
        </childnode>
        <childnode refid="1724" relation="include">
        </childnode>
        <childnode refid="1731" relation="include">
        </childnode>
        <childnode refid="1732" relation="include">
        </childnode>
      </node>
      <node id="1728">
        <label>new</label>
      </node>
      <node id="1724">
        <label>modm/utils/allocator.hpp</label>
        <link refid="allocator_8hpp"/>
        <childnode refid="1725" relation="include">
        </childnode>
        <childnode refid="1729" relation="include">
        </childnode>
        <childnode refid="1730" relation="include">
        </childnode>
      </node>
      <node id="1727">
        <label>cstddef</label>
      </node>
      <node id="1726">
        <label>allocator_base.hpp</label>
        <link refid="allocator__base_8hpp"/>
        <childnode refid="1727" relation="include">
        </childnode>
        <childnode refid="1728" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1734">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container.hpp</label>
        <link refid="container_8hpp"/>
      </node>
      <node id="1733">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp</label>
        <link refid="doubly__linked__list_8hpp"/>
        <childnode refid="1734" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmodm_1_1_doubly_linked_list" prot="public">modm::DoublyLinkedList</innerclass>
    <innerclass refid="structmodm_1_1_doubly_linked_list_1_1_node" prot="protected">modm::DoublyLinkedList::Node</innerclass>
    <innerclass refid="classmodm_1_1_doubly_linked_list_1_1iterator" prot="public">modm::DoublyLinkedList::iterator</innerclass>
    <innerclass refid="classmodm_1_1_doubly_linked_list_1_1const__iterator" prot="public">modm::DoublyLinkedList::const_iterator</innerclass>
    <innernamespace refid="namespacemodm">modm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/container/doubly_linked_list.hpp"/>
  </compounddef>
</doxygen>
