<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_angle" kind="class" language="C++" prot="public">
    <compoundname>modm::Angle</compoundname>
    <includes refid="angle_8hpp" local="no">modm/math/geometry/angle.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1_angle_1a6f373a7d8f4a4fbddd09afb7327e2201" prot="public" static="no">
        <type>float</type>
        <definition>typedef float modm::Angle::Type</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/angle.hpp" line="79" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/angle.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1_angle_1aa1e080d6fa9c59487fd848ac40def9d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float modm::Angle::normalize</definition>
        <argsstring>(float angle)</argsstring>
        <name>normalize</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Normalize angle. </para>        </briefdescription>
        <detaileddescription>
<para>Normalize the given angle to [-Pi,Pi] by repeatedly adding/subtracting 2*Pi. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/angle.hpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_angle_1a12e4bbe9cb8fa255ec77c821f582f672" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float modm::Angle::reverse</definition>
        <argsstring>(float angle)</argsstring>
        <name>reverse</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Reverse the angle. </para>        </briefdescription>
        <detaileddescription>
<para>Reverse the angle and keep it normalized to [-Pi,Pi].</para><para>Equivalent to: <programlisting><codeline><highlight class="normal">float<sp/>angle<sp/>=<sp/>modm::Angle::normalize(angle<sp/>+<sp/>M_PI);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/angle.hpp" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_angle_1a941012886789d60779433358aa94202e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float modm::Angle::perpendicular</definition>
        <argsstring>(float angle, const bool cw)</argsstring>
        <name>perpendicular</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>cw</declname>
        </param>
        <briefdescription>
<para>Find a perpendicular angle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cw</parametername>
</parameternamelist>
<parameterdescription>
<para>If cw is true the angle is rotated clockwise. Ohterwise the angle is rotated anti clockwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/angle.hpp" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_angle_1ad7fa85c53ed6f1c23ca26c7aa18dde91" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>static constexpr float modm::Angle::toRadian</definition>
        <argsstring>(float angle)</argsstring>
        <name>toRadian</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/angle.hpp" line="115" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/angle.hpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_angle_1a2a14bb7ee75cdb9371487a78567e0c45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>static constexpr float modm::Angle::toDegree</definition>
        <argsstring>(float angle)</argsstring>
        <name>toDegree</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/angle.hpp" line="121" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/angle.hpp" bodystart="121" bodyend="124"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Collection of functions for handling of angles. </para>    </briefdescription>
    <detaileddescription>
<para>Angles are always represented by float values in the range from -Pi to Pi. </para>    </detaileddescription>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/angle.hpp" line="77" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/geometry/angle.hpp" bodystart="76" bodyend="125"/>
    <listofallmembers>
      <member refid="classmodm_1_1_angle_1aa1e080d6fa9c59487fd848ac40def9d1" prot="public" virt="non-virtual"><scope>modm::Angle</scope><name>normalize</name></member>
      <member refid="classmodm_1_1_angle_1a941012886789d60779433358aa94202e" prot="public" virt="non-virtual"><scope>modm::Angle</scope><name>perpendicular</name></member>
      <member refid="classmodm_1_1_angle_1a12e4bbe9cb8fa255ec77c821f582f672" prot="public" virt="non-virtual"><scope>modm::Angle</scope><name>reverse</name></member>
      <member refid="classmodm_1_1_angle_1a2a14bb7ee75cdb9371487a78567e0c45" prot="public" virt="non-virtual"><scope>modm::Angle</scope><name>toDegree</name></member>
      <member refid="classmodm_1_1_angle_1ad7fa85c53ed6f1c23ca26c7aa18dde91" prot="public" virt="non-virtual"><scope>modm::Angle</scope><name>toRadian</name></member>
      <member refid="classmodm_1_1_angle_1a6f373a7d8f4a4fbddd09afb7327e2201" prot="public" virt="non-virtual"><scope>modm::Angle</scope><name>Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
