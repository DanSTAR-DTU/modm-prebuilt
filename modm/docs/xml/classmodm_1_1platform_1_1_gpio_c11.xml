<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1platform_1_1_gpio_c11" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::GpioC11</compoundname>
    <basecompoundref refid="structmodm_1_1platform_1_1_gpio" prot="public" virt="non-virtual">modm::platform::Gpio</basecompoundref>
    <basecompoundref refid="classmodm_1_1_gpio_i_o" prot="public" virt="non-virtual">modm::GpioIO</basecompoundref>
    <includes refid="gpio___c11_8hpp" local="no">modm/platform/gpio/gpio_C11.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_c11_1a896e4c9fadf9c0b2e3bc56cc17596980" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioC11::BitBang =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>BitBang</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Connect to any software peripheral </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="167" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_c11_1ae6dc05eef9265d61950c7cf49a9ae774" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioC11::Bk2Ncs =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Bk2Ncs</name>
        <briefdescription>
<para>Connect to Quadspi. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="169" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_c11_1abe847cbefba8337ef9279f1effce65ac" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioC11::D3 =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>D3</name>
        <briefdescription>
<para>Connect to Sdio. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="171" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_c11_1aab07c39776d9cb622ea438320b067ad8" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioC11::D4 =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>D4</name>
        <briefdescription>
<para>Connect to Dcmi. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="173" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_c11_1a6c186b82744e206786f4d1b58d78dc46" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioC11::Miso =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Miso</name>
        <briefdescription>
<para>Connect to Spi3. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="175" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_c11_1a8abcafbff965796ae7b553c86c80d419" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioC11::Rx =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Rx</name>
        <briefdescription>
<para>Connect to <ref refid="classmodm_1_1platform_1_1_usart3" kindref="compound">Usart3</ref> or <ref refid="classmodm_1_1platform_1_1_uart4" kindref="compound">Uart4</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="177" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_c11_1ab1e376a8ff70113def97c95c60f5be1b" prot="private" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_set" kindref="compound">GpioSet</ref>&lt; <ref refid="classmodm_1_1platform_1_1_gpio_c11" kindref="compound">GpioC11</ref> &gt;</type>
        <definition>using modm::platform::GpioC11::PinSet =  GpioSet&lt;GpioC11&gt;</definition>
        <argsstring></argsstring>
        <name>PinSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="37" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_c11_1ab5c5ed90050c5d7d6e6859d6024f279c" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_c11" kindref="compound">GpioC11</ref></type>
        <definition>using modm::platform::GpioC11::Output =  GpioC11</definition>
        <argsstring></argsstring>
        <name>Output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="42" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_c11_1aef96f6b4541b5e26a4f4a912ed438f0a" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_c11" kindref="compound">GpioC11</ref></type>
        <definition>using modm::platform::GpioC11::Input =  GpioC11</definition>
        <argsstring></argsstring>
        <name>Input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="43" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_c11_1a1f4252e5c96a908db4c0ad58b153f22a" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_c11" kindref="compound">GpioC11</ref></type>
        <definition>using modm::platform::GpioC11::IO =  GpioC11</definition>
        <argsstring></argsstring>
        <name>IO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="44" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_c11_1a47df00580543f8c76de03fc36872b433" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_c11" kindref="compound">GpioC11</ref></type>
        <definition>using modm::platform::GpioC11::Type =  GpioC11</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="45" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_c11_1a4e7835d7980cbc422c366c10fdbc1f77" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Gpios</declname>
            <defname>Gpios</defname>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class GpioSet</definition>
        <argsstring></argsstring>
        <name>GpioSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="36" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_c11_1a6f211b1a6fb32c7354ec26cb136397d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc</definition>
        <argsstring></argsstring>
        <name>Adc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="38" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_c11_1a408d9d1af47860a0d441db9e682a0286" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc1</definition>
        <argsstring></argsstring>
        <name>Adc1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="39" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_c11_1aa23e1a089c072f958a021d20e3999d1d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc2</definition>
        <argsstring></argsstring>
        <name>Adc2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="39" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_c11_1a5ed7caa4b9cdb2a9e493c0d14f0969ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc3</definition>
        <argsstring></argsstring>
        <name>Adc3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="40" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_c11_1a448248fc7a1c51bccc4b77743edcb11f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc4</definition>
        <argsstring></argsstring>
        <name>Adc4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="40" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_c11_1a152649294cd9c23f2939784c5eea90de" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool modm::platform::GpioC11::isInverted</definition>
        <argsstring></argsstring>
        <name>isInverted</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="46" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_c11_1a96dfff0b662db28d2ee2f33e499d44fe" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" kindref="member">Port</ref></type>
        <definition>constexpr Port modm::platform::GpioC11::port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <initializer>= <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba0d61f8370cad1d412f80b84d143e1257" kindref="member">Port::C</ref></initializer>
        <briefdescription>
<para>Port name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="47" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_c11_1a572d11e2e2672f206f855c1c1ad78cd4" prot="public" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioC11::pin</definition>
        <argsstring></argsstring>
        <name>pin</name>
        <initializer>= 11</initializer>
        <briefdescription>
<para>Pin number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="48" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_c11_1afe5ae097990876ae93ae20f369c22785" prot="protected" static="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t modm::platform::GpioC11::mask</definition>
        <argsstring></argsstring>
        <name>mask</name>
        <initializer>= 0x1 &lt;&lt; pin</initializer>
        <briefdescription>
<para>Bitmask for registers that contain a 1bit value for every pin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="52" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_c11_1a438c8ec4f8f11dea15820225aad4c2c5" prot="protected" static="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t modm::platform::GpioC11::mask2</definition>
        <argsstring></argsstring>
        <name>mask2</name>
        <initializer>= 0x3 &lt;&lt; (pin * 2)</initializer>
        <briefdescription>
<para>Bitmask for registers that contain a 2bit value for every pin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="54" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_c11_1a43199c62f7816ca9e0f19573f0044286" prot="protected" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioC11::port_nr</definition>
        <argsstring></argsstring>
        <name>port_nr</name>
        <initializer>= uint8_t(<ref refid="classmodm_1_1platform_1_1_gpio_c11_1a96dfff0b662db28d2ee2f33e499d44fe" kindref="member">port</ref>)</initializer>
        <briefdescription>
<para>Port Number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="56" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_c11_1a62371d809a5560ec2a0d433edff06114" prot="protected" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioC11::af_id</definition>
        <argsstring></argsstring>
        <name>af_id</name>
        <initializer>= <ref refid="classmodm_1_1platform_1_1_gpio_c11_1a572d11e2e2672f206f855c1c1ad78cd4" kindref="member">pin</ref> / 8</initializer>
        <briefdescription>
<para>Alternate Function register id. 0 for pin 0-7. 1 for pin 8-15. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="58" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_c11_1af3b7c635f1b5655d903e035a1cd73127" prot="protected" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioC11::af_offset</definition>
        <argsstring></argsstring>
        <name>af_offset</name>
        <initializer>= (<ref refid="classmodm_1_1platform_1_1_gpio_c11_1a572d11e2e2672f206f855c1c1ad78cd4" kindref="member">pin</ref> * 4) % 32</initializer>
        <briefdescription>
<para>Alternate Function offset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="60" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_c11_1a83a18a1d98f2a7029d9b29573f1b0cad" prot="protected" static="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t modm::platform::GpioC11::af_mask</definition>
        <argsstring></argsstring>
        <name>af_mask</name>
        <initializer>= 0xf &lt;&lt; af_offset</initializer>
        <briefdescription>
<para>Alternate Function register mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="62" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_c11_1a56f05f73481f96bd0882f7262191b981" prot="protected" static="yes" mutable="no">
        <type>constexpr IRQn_Type</type>
        <definition>constexpr IRQn_Type modm::platform::GpioC11::ExternalInterruptIRQ</definition>
        <argsstring></argsstring>
        <name>ExternalInterruptIRQ</name>
        <initializer>= EXTI15_10_IRQn</initializer>
        <briefdescription>
<para>ExternalInterruptIRQ. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="64" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_c11_1a7224ab3b2761ba4d8477b6fe107e9e43" prot="private" static="yes" mutable="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespacemodm_1_1platform_1a9a75ca82fea26cd4f4948f93899d0f55" kindref="member">Peripheral</ref></type>
            <declname>peripheral</declname>
            <defname>peripheral</defname>
          </param>
        </templateparamlist>
        <type>constexpr int8_t</type>
        <definition>constexpr int8_t modm::platform::GpioC11::AdcChannel</definition>
        <argsstring></argsstring>
        <name>AdcChannel</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="221" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1ad693d078d53616e8603f74a501de0e31" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::setOutput</definition>
        <argsstring>()</argsstring>
        <name>setOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="80" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1acb2618de23538c7e55e94a462f2d9a95" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::setOutput</definition>
        <argsstring>(bool status)</argsstring>
        <name>setOutput</name>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="81" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1acc2752abb3587746dd6e8f84ac356ade" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::set</definition>
        <argsstring>()</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="82" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1a8a87584e836077e138bea99e99e8353b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::set</definition>
        <argsstring>(bool status)</argsstring>
        <name>set</name>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="83" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1a2cfc750464df63b2fadafb2dde5f2411" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="84" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1a4b11f2a89c0271a0a7af8bb87ba8e66d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::toggle</definition>
        <argsstring>()</argsstring>
        <name>toggle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="85" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1ad6ff0d2215660bc7e33cb0a1f24e7e92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioC11::isSet</definition>
        <argsstring>()</argsstring>
        <name>isSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="89" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1abb515cf7262236838a475f00b4338aed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::configure</definition>
        <argsstring>(OutputType type, OutputSpeed speed=OutputSpeed::MHz50)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" kindref="member">OutputType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" kindref="member">OutputSpeed</ref></type>
          <declname>speed</declname>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09a291c765b56a54ef8453ee3aceef60ed3" kindref="member">OutputSpeed::MHz50</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="91" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1a91062ce9c83e08731e2726be0f8dd263" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::setOutput</definition>
        <argsstring>(OutputType type, OutputSpeed speed=OutputSpeed::MHz50)</argsstring>
        <name>setOutput</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" kindref="member">OutputType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" kindref="member">OutputSpeed</ref></type>
          <declname>speed</declname>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09a291c765b56a54ef8453ee3aceef60ed3" kindref="member">OutputSpeed::MHz50</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="92" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1a0358a4507c8d65648dfd6bac49748f9e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::setInput</definition>
        <argsstring>()</argsstring>
        <name>setInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="95" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1a957bdd63d8c6db202a2871be373a1fda" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioC11::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="96" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1ad9f5a51344da00b9854612f8f2979722" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::configure</definition>
        <argsstring>(InputType type)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">InputType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="98" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1a8706879a183f01565d4de8313b1036f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::setInput</definition>
        <argsstring>(InputType type)</argsstring>
        <name>setInput</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">InputType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="99" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1aeefa93b573b37929c91a280600696c95" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::enableExternalInterrupt</definition>
        <argsstring>()</argsstring>
        <name>enableExternalInterrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="104" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="104" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1ad648fe2062ded2a4d61a85360d59bd67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::disableExternalInterrupt</definition>
        <argsstring>()</argsstring>
        <name>disableExternalInterrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="119" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1af74c6273750e12cc10e89d1aaf943119" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::enableExternalInterruptVector</definition>
        <argsstring>(const uint32_t priority)</argsstring>
        <name>enableExternalInterruptVector</name>
        <param>
          <type>const uint32_t</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="120" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1a9fcdf0d65cff35328145996654d2132d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::disableExternalInterruptVector</definition>
        <argsstring>()</argsstring>
        <name>disableExternalInterruptVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="125" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1af3b76286200826b8e464b141f8e7bd11" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::setInputTrigger</definition>
        <argsstring>(const InputTrigger trigger)</argsstring>
        <name>setInputTrigger</name>
        <param>
          <type>const <ref refid="structmodm_1_1platform_1_1_gpio_1a5f683814888fa5a34c2bcf2db9b803a5" kindref="member">InputTrigger</ref></type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="126" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="126" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1a248e4d68012721c10a61d816121b936d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioC11::getExternalInterruptFlag</definition>
        <argsstring>()</argsstring>
        <name>getExternalInterruptFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="144" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1a0a1714af5b26cf381c8c0dbe0210f33e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::acknowledgeExternalInterruptFlag</definition>
        <argsstring>()</argsstring>
        <name>acknowledgeExternalInterruptFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="145" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1ab3a0603384cefe0ed935ee4bc4eb4cdb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" kindref="member">Direction</ref></type>
        <definition>static Direction modm::platform::GpioC11::getDirection</definition>
        <argsstring>()</argsstring>
        <name>getDirection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="148" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="148" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1a5cceb54650aec6f6acb67083b6cef9e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="157" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_c11_1a6a1cabb6b0d7a7fd641fad0f4598c601" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioC11::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="158" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="158" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>IO class for Pin C11 </para>    </detaileddescription>
    <inheritancegraph>
      <node id="828">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
      <node id="829">
        <label>modm::GpioIO</label>
        <link refid="classmodm_1_1_gpio_i_o"/>
        <childnode refid="830" relation="public-inheritance">
        </childnode>
        <childnode refid="832" relation="public-inheritance">
        </childnode>
      </node>
      <node id="832">
        <label>modm::GpioInput</label>
        <link refid="classmodm_1_1_gpio_input"/>
        <childnode refid="831" relation="public-inheritance">
        </childnode>
      </node>
      <node id="830">
        <label>modm::GpioOutput</label>
        <link refid="classmodm_1_1_gpio_output"/>
        <childnode refid="831" relation="public-inheritance">
        </childnode>
      </node>
      <node id="827">
        <label>modm::platform::GpioC11</label>
        <link refid="classmodm_1_1platform_1_1_gpio_c11"/>
        <childnode refid="828" relation="public-inheritance">
        </childnode>
        <childnode refid="829" relation="public-inheritance">
        </childnode>
      </node>
      <node id="831">
        <label>modm::Gpio</label>
        <link refid="structmodm_1_1_gpio"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="834">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
      <node id="835">
        <label>modm::GpioIO</label>
        <link refid="classmodm_1_1_gpio_i_o"/>
        <childnode refid="836" relation="public-inheritance">
        </childnode>
        <childnode refid="838" relation="public-inheritance">
        </childnode>
      </node>
      <node id="838">
        <label>modm::GpioInput</label>
        <link refid="classmodm_1_1_gpio_input"/>
        <childnode refid="837" relation="public-inheritance">
        </childnode>
      </node>
      <node id="836">
        <label>modm::GpioOutput</label>
        <link refid="classmodm_1_1_gpio_output"/>
        <childnode refid="837" relation="public-inheritance">
        </childnode>
      </node>
      <node id="833">
        <label>modm::platform::GpioC11</label>
        <link refid="classmodm_1_1platform_1_1_gpio_c11"/>
        <childnode refid="834" relation="public-inheritance">
        </childnode>
        <childnode refid="835" relation="public-inheritance">
        </childnode>
      </node>
      <node id="837">
        <label>modm::Gpio</label>
        <link refid="structmodm_1_1_gpio"/>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" line="34" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_C11.hpp" bodystart="33" bodyend="222"/>
    <listofallmembers>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a0a1714af5b26cf381c8c0dbe0210f33e" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>acknowledgeExternalInterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a6f211b1a6fb32c7354ec26cb136397d7" prot="private" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>Adc</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a408d9d1af47860a0d441db9e682a0286" prot="private" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>Adc1</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1aa23e1a089c072f958a021d20e3999d1d" prot="private" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>Adc2</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a5ed7caa4b9cdb2a9e493c0d14f0969ab" prot="private" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>Adc3</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a448248fc7a1c51bccc4b77743edcb11f" prot="private" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>Adc4</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a7224ab3b2761ba4d8477b6fe107e9e43" prot="private" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>AdcChannel</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a62371d809a5560ec2a0d433edff06114" prot="protected" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>af_id</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a83a18a1d98f2a7029d9b29573f1b0cad" prot="protected" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>af_mask</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1af3b7c635f1b5655d903e035a1cd73127" prot="protected" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>af_offset</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a896e4c9fadf9c0b2e3bc56cc17596980" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>BitBang</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1ae6dc05eef9265d61950c7cf49a9ae774" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>Bk2Ncs</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1abb515cf7262236838a475f00b4338aed" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>configure</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1ad9f5a51344da00b9854612f8f2979722" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>configure</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1abe847cbefba8337ef9279f1effce65ac" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>D3</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1aab07c39776d9cb622ea438320b067ad8" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>D4</name></member>
      <member refid="classmodm_1_1_gpio_i_o_1ac3e00d004cfc8c6268085b4468e22684" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>direction</name></member>
      <member refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioC11</scope><name>Direction</name></member>
      <member refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioC11</scope><name>Direction</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1ad648fe2062ded2a4d61a85360d59bd67" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>disableExternalInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a9fcdf0d65cff35328145996654d2132d" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>disableExternalInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a6a1cabb6b0d7a7fd641fad0f4598c601" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>disconnect</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1aeefa93b573b37929c91a280600696c95" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>enableExternalInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1af74c6273750e12cc10e89d1aaf943119" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>enableExternalInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a56f05f73481f96bd0882f7262191b981" prot="protected" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>ExternalInterruptIRQ</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1ab3a0603384cefe0ed935ee4bc4eb4cdb" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>getDirection</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a248e4d68012721c10a61d816121b936d" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>getExternalInterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a4e7835d7980cbc422c366c10fdbc1f77" prot="private" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>GpioSet</name></member>
      <member refid="structmodm_1_1_gpio_1a17454096f07c8ae16d603ff46ad53c6a" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioC11</scope><name>High</name></member>
      <member refid="structmodm_1_1_gpio_1a17454096f07c8ae16d603ff46ad53c6a" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioC11</scope><name>High</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1aef96f6b4541b5e26a4f4a912ed438f0a" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>Input</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a5f683814888fa5a34c2bcf2db9b803a5" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>InputTrigger</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>InputType</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a1f4252e5c96a908db4c0ad58b153f22a" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>IO</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a152649294cd9c23f2939784c5eea90de" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>isInverted</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1ad6ff0d2215660bc7e33cb0a1f24e7e92" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>isSet</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a5cceb54650aec6f6acb67083b6cef9e2" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>lock</name></member>
      <member refid="structmodm_1_1_gpio_1a85ddb071ba8af1c2b89b4e8c079ea58f" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioC11</scope><name>Low</name></member>
      <member refid="structmodm_1_1_gpio_1a85ddb071ba8af1c2b89b4e8c079ea58f" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioC11</scope><name>Low</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1afe5ae097990876ae93ae20f369c22785" prot="protected" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>mask</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a438c8ec4f8f11dea15820225aad4c2c5" prot="protected" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>mask2</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a6c186b82744e206786f4d1b58d78dc46" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>Miso</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1ab5c5ed90050c5d7d6e6859d6024f279c" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>Output</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>OutputSpeed</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>OutputType</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a572d11e2e2672f206f855c1c1ad78cd4" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>pin</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1ab1e376a8ff70113def97c95c60f5be1b" prot="private" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>PinSet</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>Port</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a96dfff0b662db28d2ee2f33e499d44fe" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>port</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a43199c62f7816ca9e0f19573f0044286" prot="protected" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>port_nr</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a957bdd63d8c6db202a2871be373a1fda" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>read</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a2cfc750464df63b2fadafb2dde5f2411" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>reset</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a8abcafbff965796ae7b553c86c80d419" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>Rx</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1acc2752abb3587746dd6e8f84ac356ade" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a8a87584e836077e138bea99e99e8353b" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a0358a4507c8d65648dfd6bac49748f9e" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a8706879a183f01565d4de8313b1036f2" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1af3b76286200826b8e464b141f8e7bd11" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>setInputTrigger</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1ad693d078d53616e8603f74a501de0e31" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1acb2618de23538c7e55e94a462f2d9a95" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a91062ce9c83e08731e2726be0f8dd263" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a4b11f2a89c0271a0a7af8bb87ba8e66d" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>toggle</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_c11_1a47df00580543f8c76de03fc36872b433" prot="public" virt="non-virtual"><scope>modm::platform::GpioC11</scope><name>Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
