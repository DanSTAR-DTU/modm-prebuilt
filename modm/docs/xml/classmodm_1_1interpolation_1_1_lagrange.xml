<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classmodm_1_1interpolation_1_1_lagrange" kind="class" language="C++" prot="public">
    <compoundname>modm::interpolation::Lagrange</compoundname>
    <includes refid="lagrange_8hpp" local="no">modm/math/interpolation/lagrange.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>template&lt; typename &gt; class</type>
        <declname>Accessor</declname>
        <defname>Accessor</defname>
        <defval>::<ref refid="classmodm_1_1accessor_1_1_ram" kindref="compound">modm::accessor::Ram</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1interpolation_1_1_lagrange_1a060bd65fe4b7eb248a74aee57635d5a0" prot="public" static="no">
        <type>T::FirstType</type>
        <definition>typedef T::FirstType modm::interpolation::Lagrange&lt; T, Accessor &gt;::InputType</definition>
        <argsstring></argsstring>
        <name>InputType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/interpolation/lagrange.hpp" line="46" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/interpolation/lagrange.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1interpolation_1_1_lagrange_1ae06bde24db60d83a218cbcacc1f95c33" prot="public" static="no">
        <type>T::SecondType</type>
        <definition>typedef T::SecondType modm::interpolation::Lagrange&lt; T, Accessor &gt;::OutputType</definition>
        <argsstring></argsstring>
        <name>OutputType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/interpolation/lagrange.hpp" line="47" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/interpolation/lagrange.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1interpolation_1_1_lagrange_1ac981f0d9627f178ef7f3ec54f0a9b2e2" prot="private" static="no" mutable="no">
        <type>const Accessor&lt; T &gt;</type>
        <definition>const Accessor&lt;T&gt; modm::interpolation::Lagrange&lt; T, Accessor &gt;::supportingPoints</definition>
        <argsstring></argsstring>
        <name>supportingPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/interpolation/lagrange.hpp" line="74" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/interpolation/lagrange.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1interpolation_1_1_lagrange_1a964995c63952be331b0ddaef3db06a75" prot="private" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t modm::interpolation::Lagrange&lt; T, Accessor &gt;::numberOfPoints</definition>
        <argsstring></argsstring>
        <name>numberOfPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/interpolation/lagrange.hpp" line="75" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/interpolation/lagrange.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1interpolation_1_1_lagrange_1a1a696a316e57abcdca57f2944ef60089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::interpolation::Lagrange&lt; T, Accessor &gt;::Lagrange</definition>
        <argsstring>(Accessor&lt; T &gt; supportingPoints, uint8_t numberOfPoints)</argsstring>
        <name>Lagrange</name>
        <param>
          <type>Accessor&lt; T &gt;</type>
          <declname>supportingPoints</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>numberOfPoints</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>supportingPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>Supporting points of the curve. Needs to be an Array of modm::Pair&lt;&gt;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numberOfPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>length of <computeroutput>supportingPoints</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/interpolation/lagrange.hpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1interpolation_1_1_lagrange_1a4d568b2245d0a3ea35572116ff967bd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1interpolation_1_1_lagrange_1ae06bde24db60d83a218cbcacc1f95c33" kindref="member">OutputType</ref></type>
        <definition>OutputType modm::interpolation::Lagrange&lt; T, Accessor &gt;::interpolate</definition>
        <argsstring>(const InputType &amp;value) const</argsstring>
        <name>interpolate</name>
        <param>
          <type>const <ref refid="classmodm_1_1interpolation_1_1_lagrange_1a060bd65fe4b7eb248a74aee57635d5a0" kindref="member">InputType</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Perform a Lagrange-interpolation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>input value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>interpolated value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/interpolation/lagrange.hpp" line="71" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>Only floating points types are allowed as second type of <ref refid="classmodm_1_1_pair" kindref="compound">modm::Pair</ref>, otherwise the calculation will deliver wrong results!</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Any specialization of modm::Pair&lt;&gt; with a floating point type as second template argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Accessor</parametername>
</parameternamelist>
<parameterdescription>
<para>Accessor class. <ref refid="classmodm_1_1_can" kindref="compound">Can</ref> be <ref refid="classmodm_1_1accessor_1_1_ram" kindref="compound">modm::accessor::Ram</ref>, <ref refid="classmodm_1_1accessor_1_1_flash" kindref="compound">modm::accessor::Flash</ref> or any self defined accessor class. Default is <ref refid="classmodm_1_1accessor_1_1_ram" kindref="compound">modm::accessor::Ram</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/interpolation/lagrange.hpp" line="44" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/math/interpolation/lagrange.hpp" bodystart="43" bodyend="76"/>
    <listofallmembers>
      <member refid="classmodm_1_1interpolation_1_1_lagrange_1a060bd65fe4b7eb248a74aee57635d5a0" prot="public" virt="non-virtual"><scope>modm::interpolation::Lagrange</scope><name>InputType</name></member>
      <member refid="classmodm_1_1interpolation_1_1_lagrange_1a4d568b2245d0a3ea35572116ff967bd4" prot="public" virt="non-virtual"><scope>modm::interpolation::Lagrange</scope><name>interpolate</name></member>
      <member refid="classmodm_1_1interpolation_1_1_lagrange_1a1a696a316e57abcdca57f2944ef60089" prot="public" virt="non-virtual"><scope>modm::interpolation::Lagrange</scope><name>Lagrange</name></member>
      <member refid="classmodm_1_1interpolation_1_1_lagrange_1a964995c63952be331b0ddaef3db06a75" prot="private" virt="non-virtual"><scope>modm::interpolation::Lagrange</scope><name>numberOfPoints</name></member>
      <member refid="classmodm_1_1interpolation_1_1_lagrange_1ae06bde24db60d83a218cbcacc1f95c33" prot="public" virt="non-virtual"><scope>modm::interpolation::Lagrange</scope><name>OutputType</name></member>
      <member refid="classmodm_1_1interpolation_1_1_lagrange_1ac981f0d9627f178ef7f3ec54f0a9b2e2" prot="private" virt="non-virtual"><scope>modm::interpolation::Lagrange</scope><name>supportingPoints</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
