<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_resumable" kind="class" language="C++" prot="public">
    <compoundname>modm::Resumable</compoundname>
    <includes refid="resumable_2resumable_8hpp" local="no">modm/processing/resumable/resumable.hpp</includes>
    <templateparamlist>
      <param>
        <type>uint8_t</type>
        <declname>Functions</declname>
        <defname>Functions</defname>
        <defval>1</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1_resumable_1abbed508a78f69da5e8d8f6c190d16be3" prot="private" static="no" mutable="no">
        <type>rf::State</type>
        <definition>rf::State modm::Resumable&lt; Functions &gt;::rfStateArray[Functions]</definition>
        <argsstring>[Functions]</argsstring>
        <name>rfStateArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" line="271" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classmodm_1_1_resumable_1a514be756f57ef4c98c3896f4b9aa8c06" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>modm::Resumable&lt; Functions &gt;::Resumable</definition>
        <argsstring>()</argsstring>
        <name>Resumable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" line="114" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" bodystart="114" bodyend="117"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_resumable_1a9ae029f475d31b35645fe8831bb35f5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Resumable&lt; Functions &gt;::stopAllResumables</definition>
        <argsstring>()</argsstring>
        <name>stopAllResumables</name>
        <briefdescription>
<para>Force all resumable functions to stop running. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" line="122" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" bodystart="122" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_resumable_1a9380d3c94670c1527792d09675ca0463" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Resumable&lt; Functions &gt;::stopResumable</definition>
        <argsstring>(uint8_t id)</argsstring>
        <name>stopResumable</name>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Force the specified resumable function to stop running. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" line="132" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" bodystart="132" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_resumable_1a0c740e13791ac3e3a80291b7a5f4fe94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Resumable&lt; Functions &gt;::isResumableRunning</definition>
        <argsstring>(uint8_t id) const</argsstring>
        <name>isResumableRunning</name>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the specified resumable function is running, else <computeroutput>false</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" line="143" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_resumable_1a1809254b9ee44c4c8a18848c9c5da887" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Resumable&lt; Functions &gt;::areAnyResumablesRunning</definition>
        <argsstring>() const</argsstring>
        <name>areAnyResumablesRunning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if any resumable function of this class is running, else <computeroutput>false</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" line="150" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" bodystart="150" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_resumable_1a1dfe1ea6df251c28620d7f2d2ff1b3e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Resumable&lt; Functions &gt;::areAnyResumablesRunning</definition>
        <argsstring>(std::initializer_list&lt; uint8_t &gt; ids) const</argsstring>
        <name>areAnyResumablesRunning</name>
        <param>
          <type>std::initializer_list&lt; uint8_t &gt;</type>
          <declname>ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if any of the specified resumable function are running, else <computeroutput>false</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" line="162" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" bodystart="162" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_resumable_1add237012a198066220d1223e2b308f14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Resumable&lt; Functions &gt;::areAllResumablesRunning</definition>
        <argsstring>(std::initializer_list&lt; uint8_t &gt; ids) const</argsstring>
        <name>areAllResumablesRunning</name>
        <param>
          <type>std::initializer_list&lt; uint8_t &gt;</type>
          <declname>ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if all of the specified resumable function are running, else <computeroutput>false</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" line="174" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" bodystart="174" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_resumable_1a54150e987abca974321b00e3b928c453" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Resumable&lt; Functions &gt;::joinResumables</definition>
        <argsstring>(std::initializer_list&lt; uint8_t &gt; ids) const</argsstring>
        <name>joinResumables</name>
        <param>
          <type>std::initializer_list&lt; uint8_t &gt;</type>
          <declname>ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if none of the specified resumable function are running, else <computeroutput>false</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" line="187" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" bodystart="187" bodyend="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Niklas Hauser </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Functions</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of resumable functions that are available in this class. Must be non-zero! </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" line="110" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/processing/resumable/resumable.hpp" bodystart="109" bodyend="272"/>
    <listofallmembers>
      <member refid="classmodm_1_1_resumable_1add237012a198066220d1223e2b308f14" prot="public" virt="non-virtual"><scope>modm::Resumable</scope><name>areAllResumablesRunning</name></member>
      <member refid="classmodm_1_1_resumable_1a1809254b9ee44c4c8a18848c9c5da887" prot="public" virt="non-virtual"><scope>modm::Resumable</scope><name>areAnyResumablesRunning</name></member>
      <member refid="classmodm_1_1_resumable_1a1dfe1ea6df251c28620d7f2d2ff1b3e6" prot="public" virt="non-virtual"><scope>modm::Resumable</scope><name>areAnyResumablesRunning</name></member>
      <member refid="classmodm_1_1_resumable_1a0c740e13791ac3e3a80291b7a5f4fe94" prot="public" virt="non-virtual"><scope>modm::Resumable</scope><name>isResumableRunning</name></member>
      <member refid="classmodm_1_1_resumable_1a54150e987abca974321b00e3b928c453" prot="public" virt="non-virtual"><scope>modm::Resumable</scope><name>joinResumables</name></member>
      <member refid="classmodm_1_1_resumable_1a514be756f57ef4c98c3896f4b9aa8c06" prot="protected" virt="non-virtual"><scope>modm::Resumable</scope><name>Resumable</name></member>
      <member refid="classmodm_1_1_resumable_1abbed508a78f69da5e8d8f6c190d16be3" prot="private" virt="non-virtual"><scope>modm::Resumable</scope><name>rfStateArray</name></member>
      <member refid="classmodm_1_1_resumable_1a9ae029f475d31b35645fe8831bb35f5c" prot="public" virt="non-virtual"><scope>modm::Resumable</scope><name>stopAllResumables</name></member>
      <member refid="classmodm_1_1_resumable_1a9380d3c94670c1527792d09675ca0463" prot="public" virt="non-virtual"><scope>modm::Resumable</scope><name>stopResumable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
