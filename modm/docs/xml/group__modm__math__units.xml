<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__modm__math__units" kind="group">
    <compoundname>modm_math_units</compoundname>
    <title>SI Units</title>
      <sectiondef kind="user-defined">
      <memberdef kind="typedef" id="group__modm__math__units_1gaedfcd0a3509b2f2ae47fd1efd95bd3ce" prot="public" static="no">
        <type>uint32_t</type>
        <definition>using modm::frequency_t = typedef uint32_t</definition>
        <argsstring></argsstring>
        <name>frequency_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="24" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__modm__math__units_1ga30af1fac499efa181bc4708e24c577d1" prot="public" static="no">
        <type>uint32_t</type>
        <definition>using modm::baudrate_t = typedef uint32_t</definition>
        <argsstring></argsstring>
        <name>baudrate_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="29" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__modm__math__units_1ga03efd30b9bcb8788d36e4b55228ea6dd" prot="public" static="no">
        <type>uint32_t</type>
        <definition>using modm::bitrate_t = typedef uint32_t</definition>
        <argsstring></argsstring>
        <name>bitrate_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="34" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__modm__math__units_1ga4f017ee3fdf26cb780b0df55356f031c" prot="public" static="no">
        <type>uint16_t</type>
        <definition>using modm::percent_t = typedef uint16_t</definition>
        <argsstring></argsstring>
        <name>percent_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="39" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1gafc7bd3891947ef9d6b3cc0d6b77db457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr frequency_t</type>
        <definition>constexpr frequency_t modm::Hz</definition>
        <argsstring>(T value)</argsstring>
        <name>Hz</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga5b32614a70970e9df66d00d174e011d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr frequency_t</type>
        <definition>constexpr frequency_t modm::kHz</definition>
        <argsstring>(T value)</argsstring>
        <name>kHz</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga2020ec8d88e38c63e7104fd91c721e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr frequency_t</type>
        <definition>constexpr frequency_t modm::MHz</definition>
        <argsstring>(T value)</argsstring>
        <name>MHz</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga3b9715e5f69365216889e85a265d81ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr baudrate_t</type>
        <definition>constexpr baudrate_t modm::Bd</definition>
        <argsstring>(T value)</argsstring>
        <name>Bd</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1gaf31b3ba53e2eef7b3d4780d5f6ef0c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr baudrate_t</type>
        <definition>constexpr baudrate_t modm::kBd</definition>
        <argsstring>(T value)</argsstring>
        <name>kBd</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1gaef886c89016768744f89476c3d87f1cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr baudrate_t</type>
        <definition>constexpr baudrate_t modm::MBd</definition>
        <argsstring>(T value)</argsstring>
        <name>MBd</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga71a525699779b80ef319bb4efe1e4ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bitrate_t</type>
        <definition>constexpr bitrate_t modm::bps</definition>
        <argsstring>(T value)</argsstring>
        <name>bps</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga9ce2bf9e99d363dd23d9835cb8db88f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bitrate_t</type>
        <definition>constexpr bitrate_t modm::kbps</definition>
        <argsstring>(T value)</argsstring>
        <name>kbps</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1gae90901c790a783cdf1e3afa277051399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bitrate_t</type>
        <definition>constexpr bitrate_t modm::Mbps</definition>
        <argsstring>(T value)</argsstring>
        <name>Mbps</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1gaa849cad2910e94feb4a7f31a6dacbb1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr percent_t</type>
        <definition>constexpr percent_t modm::pct</definition>
        <argsstring>(T value)</argsstring>
        <name>pct</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="40" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__modm__math__units_1gafded1ce6142a783128f6b4d60f3e300f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr modm::literals::operator&quot;&quot;_Hz</definition>
        <argsstring>(T value)</argsstring>
        <name>operator&quot;&quot;_Hz</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga0e4fbb7aa14778d6099b50837cd2be5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr modm::literals::operator&quot;&quot;_kHz</definition>
        <argsstring>(T value)</argsstring>
        <name>operator&quot;&quot;_kHz</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga9d963f9980a1f919daa79d81e2444d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr modm::literals::operator&quot;&quot;_MHz</definition>
        <argsstring>(T value)</argsstring>
        <name>operator&quot;&quot;_MHz</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga23698e2915481d46123dfe2da7a58502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr modm::literals::operator&quot;&quot;_Bd</definition>
        <argsstring>(T value)</argsstring>
        <name>operator&quot;&quot;_Bd</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga96d2adc5802246e0b354a76d1d725ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr modm::literals::operator&quot;&quot;_kBd</definition>
        <argsstring>(T value)</argsstring>
        <name>operator&quot;&quot;_kBd</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga12bde80cbcce6923b2f352278defd02b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr modm::literals::operator&quot;&quot;_MBd</definition>
        <argsstring>(T value)</argsstring>
        <name>operator&quot;&quot;_MBd</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1gafe3fa52185fb00341d4244054cf7a8ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr modm::literals::operator&quot;&quot;_bps</definition>
        <argsstring>(T value)</argsstring>
        <name>operator&quot;&quot;_bps</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga0b3a1a423cc384bb47d2de94112b5738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr modm::literals::operator&quot;&quot;_kbps</definition>
        <argsstring>(T value)</argsstring>
        <name>operator&quot;&quot;_kbps</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga1759549446fa07ae582c27fb74260733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr modm::literals::operator&quot;&quot;_Mbps</definition>
        <argsstring>(T value)</argsstring>
        <name>operator&quot;&quot;_Mbps</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__math__units_1ga6df9478ba609d33beb148ad882b87058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr modm::literals::operator&quot;&quot;_pct</definition>
        <argsstring>(T value)</argsstring>
        <name>operator&quot;&quot;_pct</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/units.hpp" line="59" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>modm uses a couple of common SI units for configuration of peripherals:</para><para><itemizedlist>
<listitem><para><computeroutput>frequency_t</computeroutput> in Hertz: <computeroutput>Hz</computeroutput>, <computeroutput>kHz</computeroutput> and <computeroutput>MHz</computeroutput>.</para></listitem><listitem><para><computeroutput>baudrate_t</computeroutput> in Baud: <computeroutput>Bd</computeroutput>, <computeroutput>kBd</computeroutput>, <computeroutput>MBd</computeroutput>.</para></listitem><listitem><para><computeroutput>bitrate_t</computeroutput> in bit/s, <computeroutput>bps</computeroutput>.</para></listitem></itemizedlist>
</para><para>These are integral units, so 1 Hz/Bd/bps cannot be split further, and are cast directly to <computeroutput>uint32_t</computeroutput> type, so they can be used as a non-type template argument.</para><para>Conversion can be done via constexpr functions from <emphasis>any</emphasis> numerical type:</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__modm__math__units_1gafc7bd3891947ef9d6b3cc0d6b77db457" kindref="member">modm::Hz(T value)</ref></computeroutput>, <computeroutput><ref refid="group__modm__math__units_1ga5b32614a70970e9df66d00d174e011d3" kindref="member">modm::kHz(T value)</ref></computeroutput>, <computeroutput><ref refid="group__modm__math__units_1ga2020ec8d88e38c63e7104fd91c721e10" kindref="member">modm::MHz(T value)</ref></computeroutput>.</para></listitem><listitem><para><computeroutput><ref refid="group__modm__math__units_1ga3b9715e5f69365216889e85a265d81ec" kindref="member">modm::Bd(T value)</ref></computeroutput>, <computeroutput><ref refid="group__modm__math__units_1gaf31b3ba53e2eef7b3d4780d5f6ef0c30" kindref="member">modm::kBd(T value)</ref></computeroutput>, <computeroutput><ref refid="group__modm__math__units_1gaef886c89016768744f89476c3d87f1cf" kindref="member">modm::MBd(T value)</ref></computeroutput>.</para></listitem><listitem><para><computeroutput><ref refid="group__modm__math__units_1ga71a525699779b80ef319bb4efe1e4ec9" kindref="member">modm::bps(T value)</ref></computeroutput>, <computeroutput><ref refid="group__modm__math__units_1ga9ce2bf9e99d363dd23d9835cb8db88f9" kindref="member">modm::kbps(T value)</ref></computeroutput>, <computeroutput><ref refid="group__modm__math__units_1gae90901c790a783cdf1e3afa277051399" kindref="member">modm::Mbps(T value)</ref></computeroutput>.</para></listitem></itemizedlist>
</para><para>In addition, user-defined literals are provided in the <computeroutput><ref refid="namespacemodm_1_1literals" kindref="compound">modm::literals</ref></computeroutput> namespace:</para><para><programlisting><codeline><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemodm_1_1literals" kindref="compound">modm::literals</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__modm__math__units_1gaedfcd0a3509b2f2ae47fd1efd95bd3ce" kindref="member">frequency_t</ref><sp/>frequency<sp/>=<sp/>modm::Mhz(10.5);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>10.5_MHz;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__modm__math__units_1ga30af1fac499efa181bc4708e24c577d1" kindref="member">baudrate_t</ref><sp/>baudrate<sp/>=<sp/>115.2_kBd;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baudrate<sp/>=<sp/><ref refid="group__modm__math__units_1gaf31b3ba53e2eef7b3d4780d5f6ef0c30" kindref="member">modm::kBd</ref>(115.2);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__modm__math__units_1ga03efd30b9bcb8788d36e4b55228ea6dd" kindref="member">bitrate_t</ref><sp/>bitrate<sp/>=<sp/><ref refid="group__modm__math__units_1ga9ce2bf9e99d363dd23d9835cb8db88f9" kindref="member">modm::kbps</ref>(125);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitrate<sp/>=<sp/>125_kbps;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">frequency<sp/>=<sp/>4295_MHz;<sp/></highlight><highlight class="comment">//<sp/>OVERFLOW<sp/>at<sp/>2^32<sp/>units!</highlight></codeline>
</programlisting></para><para><heading level="2">Integral Percentages</heading>
</para><para>Since <computeroutput>float</computeroutput> cannot be used as a non-type template argument, an integer type for providing tolerances in <computeroutput>percent_t</computeroutput> is available. Note that <computeroutput>percent_t</computeroutput> is implemented as an enum class, which prevents implicit conversions, since the base for this is not 1. You must therefore use the <computeroutput><ref refid="group__modm__math__units_1gaa849cad2910e94feb4a7f31a6dacbb1c" kindref="member">modm::pct(T value)</ref></computeroutput> or <computeroutput>_pct</computeroutput> constructors.</para><para><programlisting><codeline><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemodm_1_1literals" kindref="compound">modm::literals</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__modm__math__units_1ga4f017ee3fdf26cb780b0df55356f031c" kindref="member">percent_t</ref><sp/>tolerance<sp/>=<sp/><ref refid="group__modm__math__units_1gaa849cad2910e94feb4a7f31a6dacbb1c" kindref="member">modm::pct</ref>(10);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tolerance<sp/>=<sp/>10_pct;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>convert<sp/>back<sp/>to<sp/>float.<sp/>*internal<sp/>use<sp/>only*</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent<sp/>=<sp/>modm::pct2f(tolerance);</highlight></codeline>
</programlisting></para><para><simplesect kind="warning"><para>&quot;This type is not guaranteed to hold more than 100 percent!&quot; </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
