<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1platform_1_1_gpio_unused" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::GpioUnused</compoundname>
    <basecompoundref refid="structmodm_1_1platform_1_1_gpio" prot="public" virt="non-virtual">modm::platform::Gpio</basecompoundref>
    <basecompoundref refid="classmodm_1_1_gpio_i_o" prot="public" virt="non-virtual">modm::GpioIO</basecompoundref>
    <includes refid="unused_8hpp" local="no">modm/platform/gpio/unused.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_unused_1a0eb4e97ed98b5f9fb029542e2a829092" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_unused" kindref="compound">GpioUnused</ref></type>
        <definition>using modm::platform::GpioUnused::Output =  GpioUnused</definition>
        <argsstring></argsstring>
        <name>Output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="59" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_unused_1a8b3b20cd20a9b48d197519628b925313" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_unused" kindref="compound">GpioUnused</ref></type>
        <definition>using modm::platform::GpioUnused::Input =  GpioUnused</definition>
        <argsstring></argsstring>
        <name>Input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="60" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_unused_1a6d5094d3fd3a997e96365c101493519c" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_unused" kindref="compound">GpioUnused</ref></type>
        <definition>using modm::platform::GpioUnused::IO =  GpioUnused</definition>
        <argsstring></argsstring>
        <name>IO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="61" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_unused_1a38afb852986684fb6426224130da57f9" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_unused" kindref="compound">GpioUnused</ref></type>
        <definition>using modm::platform::GpioUnused::Type =  GpioUnused</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="62" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_unused_1a231002eac7954db7410c4e13faa5df50" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool modm::platform::GpioUnused::isInverted</definition>
        <argsstring></argsstring>
        <name>isInverted</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="63" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_unused_1a7011459da47b850ebaf5628990f9e853" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" kindref="member">Port</ref></type>
        <definition>constexpr Port modm::platform::GpioUnused::port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <initializer>= <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" kindref="member">Port</ref>(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="64" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_unused_1ad613afe1323af026fa403d3be1d09160" prot="public" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioUnused::pin</definition>
        <argsstring></argsstring>
        <name>pin</name>
        <initializer>= uint8_t(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="65" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_unused_1a8aa93928d7144481f5710aea64e33466" prot="public" static="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t modm::platform::GpioUnused::mask</definition>
        <argsstring></argsstring>
        <name>mask</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="66" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a322e8838fc1f00894b08b5466117203b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::setOutput</definition>
        <argsstring>()</argsstring>
        <name>setOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="77" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a43754d7ec7151dd684acde80fd9639f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::setOutput</definition>
        <argsstring>(bool)</argsstring>
        <name>setOutput</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="78" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a98c1333b5568bd03419c84f8af146514" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::set</definition>
        <argsstring>()</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="79" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a9d311b18dca5ee24a84f765c3e0942da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::set</definition>
        <argsstring>(bool)</argsstring>
        <name>set</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="80" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1aa55312334b0d0c54e276777c8dc7d4b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="81" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a39e134426dafc7d65e569d041ea1d279" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::toggle</definition>
        <argsstring>()</argsstring>
        <name>toggle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="82" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a6597030dc5dd0b590502e88734b0bf18" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioUnused::isSet</definition>
        <argsstring>()</argsstring>
        <name>isSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="83" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1ae84cc35cedc6dbb4886e66854718b840" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::configure</definition>
        <argsstring>(OutputType, OutputSpeed=OutputSpeed::MHz50)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" kindref="member">OutputType</ref></type>
        </param>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" kindref="member">OutputSpeed</ref></type>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09a291c765b56a54ef8453ee3aceef60ed3" kindref="member">OutputSpeed::MHz50</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="85" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a10691bbbf1d252d9e662e8c5c7e0e313" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::setOutput</definition>
        <argsstring>(OutputType, OutputSpeed=OutputSpeed::MHz50)</argsstring>
        <name>setOutput</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" kindref="member">OutputType</ref></type>
        </param>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" kindref="member">OutputSpeed</ref></type>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09a291c765b56a54ef8453ee3aceef60ed3" kindref="member">OutputSpeed::MHz50</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="86" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1af8d95f5f17c7603cb7e6ac4739069fe7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::setInput</definition>
        <argsstring>()</argsstring>
        <name>setInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="90" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a9425168b22c8002c69a69c7b81e9c033" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioUnused::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="91" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a5bb06ce726702d23d26fa14bd24c3595" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::configure</definition>
        <argsstring>(InputType)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">InputType</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="93" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a8fe0f554f6f99fa0248e52f307036f19" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::setInput</definition>
        <argsstring>(InputType)</argsstring>
        <name>setInput</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">InputType</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="94" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a5fd2be00695f8f3426790f1de055785c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::enableExternalInterrupt</definition>
        <argsstring>()</argsstring>
        <name>enableExternalInterrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="96" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1ad2038642335deb975fd37dd221f2a14a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::disableExternalInterrupt</definition>
        <argsstring>()</argsstring>
        <name>disableExternalInterrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="97" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1af0ba5cdac244635ec593e2ebd70c740a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::enableExternalInterruptVector</definition>
        <argsstring>(const uint32_t)</argsstring>
        <name>enableExternalInterruptVector</name>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="98" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a13ed401ed03dda3ee7fc013a8cfab58e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::disableExternalInterruptVector</definition>
        <argsstring>()</argsstring>
        <name>disableExternalInterruptVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="99" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a0c9e7e3144b1841d371ea0111a9eb022" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::setInputTrigger</definition>
        <argsstring>(const InputTrigger)</argsstring>
        <name>setInputTrigger</name>
        <param>
          <type>const <ref refid="structmodm_1_1platform_1_1_gpio_1a5f683814888fa5a34c2bcf2db9b803a5" kindref="member">InputTrigger</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="100" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a8f4f491f1da68b2178c54607882a9b72" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioUnused::getExternalInterruptFlag</definition>
        <argsstring>()</argsstring>
        <name>getExternalInterruptFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="101" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a693bc526f6c1343de48e3cca693dc196" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::acknowledgeExternalInterruptFlag</definition>
        <argsstring>()</argsstring>
        <name>acknowledgeExternalInterruptFlag</name>
        <briefdescription>
<para>Reset the interrupt flag in the interrupt routine. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="103" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1a22ece710e37629b70307af36e6f83dcf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" kindref="member">Direction</ref></type>
        <definition>static Direction modm::platform::GpioUnused::getDirection</definition>
        <argsstring>()</argsstring>
        <name>getDirection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="107" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1aa64a7e5396df89e241bbe1128f468311" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="109" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_unused_1ac90ddb98517d545f47155ba98776bd14" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioUnused::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="110" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="110" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Dummy implementation of an I/O pin.</para><para>This class can be used when a pin is not required. All functions are dummy functions which do nothing. <computeroutput><ref refid="classmodm_1_1platform_1_1_gpio_unused_1a9425168b22c8002c69a69c7b81e9c033" kindref="member">read()</ref></computeroutput> will always return <computeroutput>false</computeroutput>.</para><para>For example when creating a software SPI with the modm::SoftwareSimpleSpi class and the return channel (MISO - Master In Slave Out) is not needed, a good way is to use this class as a parameter when defining the SPI class.</para><para>Example: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;modm/architecture/platform.hpp&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">namespace<sp/>pin</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>typedef<sp/>GpioOutputD7<sp/>Clk;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>typedef<sp/>GpioOutputD5<sp/>Mosi;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">modm::SoftwareSpiMaster&lt;<sp/>pin::Clk,<sp/>pin::Mosi,<sp/>GpioUnused<sp/>&gt;<sp/>Spi;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">Spi::write(0xaa);</highlight></codeline>
</programlisting></para><para><simplesect kind="author"><para>Fabian Greif </para></simplesect>
<simplesect kind="author"><para>Niklas Hauser </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1228">
        <label>modm::platform::GpioUnused</label>
        <link refid="classmodm_1_1platform_1_1_gpio_unused"/>
        <childnode refid="1229" relation="public-inheritance">
        </childnode>
        <childnode refid="1230" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1229">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
      <node id="1230">
        <label>modm::GpioIO</label>
        <link refid="classmodm_1_1_gpio_i_o"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
        <childnode refid="1233" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1233">
        <label>modm::GpioInput</label>
        <link refid="classmodm_1_1_gpio_input"/>
        <childnode refid="1232" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1231">
        <label>modm::GpioOutput</label>
        <link refid="classmodm_1_1_gpio_output"/>
        <childnode refid="1232" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1232">
        <label>modm::Gpio</label>
        <link refid="structmodm_1_1_gpio"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1234">
        <label>modm::platform::GpioUnused</label>
        <link refid="classmodm_1_1platform_1_1_gpio_unused"/>
        <childnode refid="1235" relation="public-inheritance">
        </childnode>
        <childnode refid="1236" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1235">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
      <node id="1236">
        <label>modm::GpioIO</label>
        <link refid="classmodm_1_1_gpio_i_o"/>
        <childnode refid="1237" relation="public-inheritance">
        </childnode>
        <childnode refid="1239" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1239">
        <label>modm::GpioInput</label>
        <link refid="classmodm_1_1_gpio_input"/>
        <childnode refid="1238" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1237">
        <label>modm::GpioOutput</label>
        <link refid="classmodm_1_1_gpio_output"/>
        <childnode refid="1238" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1238">
        <label>modm::Gpio</label>
        <link refid="structmodm_1_1_gpio"/>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" line="57" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/unused.hpp" bodystart="56" bodyend="885"/>
    <listofallmembers>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a693bc526f6c1343de48e3cca693dc196" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>acknowledgeExternalInterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1ae84cc35cedc6dbb4886e66854718b840" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>configure</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a5bb06ce726702d23d26fa14bd24c3595" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>configure</name></member>
      <member refid="classmodm_1_1_gpio_i_o_1ac3e00d004cfc8c6268085b4468e22684" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>direction</name></member>
      <member refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioUnused</scope><name>Direction</name></member>
      <member refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioUnused</scope><name>Direction</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1ad2038642335deb975fd37dd221f2a14a" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>disableExternalInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a13ed401ed03dda3ee7fc013a8cfab58e" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>disableExternalInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1ac90ddb98517d545f47155ba98776bd14" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>disconnect</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a5fd2be00695f8f3426790f1de055785c" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>enableExternalInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1af0ba5cdac244635ec593e2ebd70c740a" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>enableExternalInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a22ece710e37629b70307af36e6f83dcf" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>getDirection</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a8f4f491f1da68b2178c54607882a9b72" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>getExternalInterruptFlag</name></member>
      <member refid="structmodm_1_1_gpio_1a17454096f07c8ae16d603ff46ad53c6a" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioUnused</scope><name>High</name></member>
      <member refid="structmodm_1_1_gpio_1a17454096f07c8ae16d603ff46ad53c6a" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioUnused</scope><name>High</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a8b3b20cd20a9b48d197519628b925313" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>Input</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a5f683814888fa5a34c2bcf2db9b803a5" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>InputTrigger</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>InputType</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a6d5094d3fd3a997e96365c101493519c" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>IO</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a231002eac7954db7410c4e13faa5df50" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>isInverted</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a6597030dc5dd0b590502e88734b0bf18" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>isSet</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1aa64a7e5396df89e241bbe1128f468311" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>lock</name></member>
      <member refid="structmodm_1_1_gpio_1a85ddb071ba8af1c2b89b4e8c079ea58f" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioUnused</scope><name>Low</name></member>
      <member refid="structmodm_1_1_gpio_1a85ddb071ba8af1c2b89b4e8c079ea58f" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioUnused</scope><name>Low</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a8aa93928d7144481f5710aea64e33466" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>mask</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a0eb4e97ed98b5f9fb029542e2a829092" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>Output</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>OutputSpeed</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>OutputType</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1ad613afe1323af026fa403d3be1d09160" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>pin</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>Port</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a7011459da47b850ebaf5628990f9e853" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>port</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a9425168b22c8002c69a69c7b81e9c033" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>read</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1aa55312334b0d0c54e276777c8dc7d4b3" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>reset</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a98c1333b5568bd03419c84f8af146514" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a9d311b18dca5ee24a84f765c3e0942da" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1af8d95f5f17c7603cb7e6ac4739069fe7" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a8fe0f554f6f99fa0248e52f307036f19" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a0c9e7e3144b1841d371ea0111a9eb022" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>setInputTrigger</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a322e8838fc1f00894b08b5466117203b" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a43754d7ec7151dd684acde80fd9639f2" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a10691bbbf1d252d9e662e8c5c7e0e313" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a39e134426dafc7d65e569d041ea1d279" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>toggle</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_unused_1a38afb852986684fb6426224130da57f9" prot="public" virt="non-virtual"><scope>modm::platform::GpioUnused</scope><name>Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
