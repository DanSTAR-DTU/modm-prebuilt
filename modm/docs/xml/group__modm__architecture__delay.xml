<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__modm__architecture__delay" kind="group">
    <compoundname>modm_architecture_delay</compoundname>
    <title>Blocking Delays</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__modm__architecture__delay_1gac74a1138fd586eafa8cd4c1928f4ccab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::delayNanoseconds</definition>
        <argsstring>(uint16_t ns)</argsstring>
        <name>delayNanoseconds</name>
        <param>
          <type>uint16_t</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Spin for nanoseconds. This function is implemented as best-effort and its resolution will be very coarse especially on platforms with very slow clocks. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/delay.hpp" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__architecture__delay_1ga03e5053cd9552409229bec06accb44b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::delayMicroseconds</definition>
        <argsstring>(uint16_t us)</argsstring>
        <name>delayMicroseconds</name>
        <param>
          <type>uint16_t</type>
          <declname>us</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Spin for microseconds. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/delay.hpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__modm__architecture__delay_1gacf0606c81a2e71403a44a768b16e5268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::delayMilliseconds</definition>
        <argsstring>(uint16_t ms)</argsstring>
        <name>delayMilliseconds</name>
        <param>
          <type>uint16_t</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Spin for milliseconds. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/delay.hpp" line="38" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>These functions allow you to spin for a short time using only the CPU.</para><para>You should always prefer Software Timers (see <computeroutput>modm:processing:timer</computeroutput>) over these blocking* delay functions. However, when <computeroutput><ref refid="classmodm_1_1_clock" kindref="compound">modm::Clock</ref></computeroutput> is not set up yet, or when you need very small delays (for example to bit-bang a protocol), you need to use these delay functions.</para><para>The only guarantee given to you is to delay for <emphasis>at least</emphasis> the specified time. Note that invocation of interrupts during spinning may add delay too.</para><para><simplesect kind="warning"><para>&quot;No real-time guarantees!&quot; You must not rely on delay functions for ANY time-keeping!</para></simplesect>
Delay functions work at any CPU clock speed, even if changed dynamically and are available very early in the startup process at hardware-init time.</para><para><simplesect kind="warning"><para>&quot;Use the largest time unit possible!&quot; Correct behavior is not guaranteed for delays over 1000ns, us or ms! </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
