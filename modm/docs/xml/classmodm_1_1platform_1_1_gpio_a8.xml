<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1platform_1_1_gpio_a8" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::GpioA8</compoundname>
    <basecompoundref refid="structmodm_1_1platform_1_1_gpio" prot="public" virt="non-virtual">modm::platform::Gpio</basecompoundref>
    <basecompoundref refid="classmodm_1_1_gpio_i_o" prot="public" virt="non-virtual">modm::GpioIO</basecompoundref>
    <includes refid="gpio___a8_8hpp" local="no">modm/platform/gpio/gpio_A8.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a8_1aeef129a663dc5ef09fc927570fd4664c" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioA8::BitBang =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>BitBang</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Connect to any software peripheral </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="166" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a8_1a61e66dfc1b6440d75ea13822be30da03" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioA8::Ch1 =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Ch1</name>
        <briefdescription>
<para>Connect to Tim1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="168" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a8_1ab36d6b20a235e58fa702e28b4cb884b6" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioA8::Ck =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Ck</name>
        <briefdescription>
<para>Connect to <ref refid="classmodm_1_1platform_1_1_usart1" kindref="compound">Usart1</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="170" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a8_1a8783e2eb4489bc14cca01b65d9e5cab1" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioA8::Mco1 =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Mco1</name>
        <briefdescription>
<para>Connect to <ref refid="classmodm_1_1platform_1_1_rcc" kindref="compound">Rcc</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="172" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a8_1ade822b57cda4616ca0894f067fe536b7" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioA8::Scl =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Scl</name>
        <briefdescription>
<para>Connect to I2c3. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="174" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a8_1aa29dea12963575e2cc5ff0312365991b" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioA8::Sof =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Sof</name>
        <briefdescription>
<para>Connect to UsbOtgFs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="176" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a8_1a5729b0ff443d606466d2163b6cc140ba" prot="private" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_set" kindref="compound">GpioSet</ref>&lt; <ref refid="classmodm_1_1platform_1_1_gpio_a8" kindref="compound">GpioA8</ref> &gt;</type>
        <definition>using modm::platform::GpioA8::PinSet =  GpioSet&lt;GpioA8&gt;</definition>
        <argsstring></argsstring>
        <name>PinSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="34" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a8_1a0e5f4b052c23aef3f2856ed6748a2fc9" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_a8" kindref="compound">GpioA8</ref></type>
        <definition>using modm::platform::GpioA8::Output =  GpioA8</definition>
        <argsstring></argsstring>
        <name>Output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="39" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a8_1a175ebef520e76d079892691f14f44d3d" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_a8" kindref="compound">GpioA8</ref></type>
        <definition>using modm::platform::GpioA8::Input =  GpioA8</definition>
        <argsstring></argsstring>
        <name>Input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="40" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a8_1a40f8cf232ee0897a9cd716c84da38623" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_a8" kindref="compound">GpioA8</ref></type>
        <definition>using modm::platform::GpioA8::IO =  GpioA8</definition>
        <argsstring></argsstring>
        <name>IO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="41" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_a8_1acecfd5642f4ad04543f5ea0245ce997c" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_a8" kindref="compound">GpioA8</ref></type>
        <definition>using modm::platform::GpioA8::Type =  GpioA8</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="42" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_a8_1a4e7835d7980cbc422c366c10fdbc1f77" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Gpios</declname>
            <defname>Gpios</defname>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class GpioSet</definition>
        <argsstring></argsstring>
        <name>GpioSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="33" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_a8_1a6f211b1a6fb32c7354ec26cb136397d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc</definition>
        <argsstring></argsstring>
        <name>Adc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="35" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_a8_1a408d9d1af47860a0d441db9e682a0286" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc1</definition>
        <argsstring></argsstring>
        <name>Adc1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="36" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_a8_1aa23e1a089c072f958a021d20e3999d1d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc2</definition>
        <argsstring></argsstring>
        <name>Adc2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="36" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_a8_1a5ed7caa4b9cdb2a9e493c0d14f0969ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc3</definition>
        <argsstring></argsstring>
        <name>Adc3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="37" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_a8_1a448248fc7a1c51bccc4b77743edcb11f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc4</definition>
        <argsstring></argsstring>
        <name>Adc4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="37" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a8_1af3802a9b2b8299bca11d3ea3dd1d6c0b" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool modm::platform::GpioA8::isInverted</definition>
        <argsstring></argsstring>
        <name>isInverted</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="43" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a8_1a3b87917d8a5ca4637fd418ffc2f74a59" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" kindref="member">Port</ref></type>
        <definition>constexpr Port modm::platform::GpioA8::port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <initializer>= <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba7fc56270e7a70fa81a5935b72eacbe29" kindref="member">Port::A</ref></initializer>
        <briefdescription>
<para>Port name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="44" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a8_1a6699acbc5929176f3dc0650fe407cbba" prot="public" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioA8::pin</definition>
        <argsstring></argsstring>
        <name>pin</name>
        <initializer>= 8</initializer>
        <briefdescription>
<para>Pin number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="45" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a8_1ac106baf44b71b6b40b90a846cbb75f8d" prot="protected" static="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t modm::platform::GpioA8::mask</definition>
        <argsstring></argsstring>
        <name>mask</name>
        <initializer>= 0x1 &lt;&lt; pin</initializer>
        <briefdescription>
<para>Bitmask for registers that contain a 1bit value for every pin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="49" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a8_1a1f35807fd02691a47b8a36571c31159f" prot="protected" static="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t modm::platform::GpioA8::mask2</definition>
        <argsstring></argsstring>
        <name>mask2</name>
        <initializer>= 0x3 &lt;&lt; (pin * 2)</initializer>
        <briefdescription>
<para>Bitmask for registers that contain a 2bit value for every pin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="51" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a8_1aea9d7a039783509f936a149094c4fead" prot="protected" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioA8::port_nr</definition>
        <argsstring></argsstring>
        <name>port_nr</name>
        <initializer>= uint8_t(<ref refid="classmodm_1_1platform_1_1_gpio_a8_1a3b87917d8a5ca4637fd418ffc2f74a59" kindref="member">port</ref>)</initializer>
        <briefdescription>
<para>Port Number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="53" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a8_1a917d53f09a0440d6a51841c0c500f4c8" prot="protected" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioA8::af_id</definition>
        <argsstring></argsstring>
        <name>af_id</name>
        <initializer>= <ref refid="classmodm_1_1platform_1_1_gpio_a8_1a6699acbc5929176f3dc0650fe407cbba" kindref="member">pin</ref> / 8</initializer>
        <briefdescription>
<para>Alternate Function register id. 0 for pin 0-7. 1 for pin 8-15. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="55" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a8_1a00d461180a9624ff787b75b5b280a4a0" prot="protected" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioA8::af_offset</definition>
        <argsstring></argsstring>
        <name>af_offset</name>
        <initializer>= (<ref refid="classmodm_1_1platform_1_1_gpio_a8_1a6699acbc5929176f3dc0650fe407cbba" kindref="member">pin</ref> * 4) % 32</initializer>
        <briefdescription>
<para>Alternate Function offset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="57" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a8_1a49622dad78befd74060e9fce0215ac0e" prot="protected" static="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t modm::platform::GpioA8::af_mask</definition>
        <argsstring></argsstring>
        <name>af_mask</name>
        <initializer>= 0xf &lt;&lt; af_offset</initializer>
        <briefdescription>
<para>Alternate Function register mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="59" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a8_1a81fa1cdbaa1bf5a318132297f55592bf" prot="protected" static="yes" mutable="no">
        <type>constexpr IRQn_Type</type>
        <definition>constexpr IRQn_Type modm::platform::GpioA8::ExternalInterruptIRQ</definition>
        <argsstring></argsstring>
        <name>ExternalInterruptIRQ</name>
        <initializer>= EXTI9_5_IRQn</initializer>
        <briefdescription>
<para>ExternalInterruptIRQ. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="61" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_a8_1ae3902bfa169b8226b13d63cbb005a958" prot="private" static="yes" mutable="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespacemodm_1_1platform_1a9a75ca82fea26cd4f4948f93899d0f55" kindref="member">Peripheral</ref></type>
            <declname>peripheral</declname>
            <defname>peripheral</defname>
          </param>
        </templateparamlist>
        <type>constexpr int8_t</type>
        <definition>constexpr int8_t modm::platform::GpioA8::AdcChannel</definition>
        <argsstring></argsstring>
        <name>AdcChannel</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="219" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a0680ec0256afc0d71d7aba1f09408812" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::setOutput</definition>
        <argsstring>()</argsstring>
        <name>setOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="77" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a747f48cd568590f53879ae4575a195a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::setOutput</definition>
        <argsstring>(bool status)</argsstring>
        <name>setOutput</name>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="78" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1ab1e3274fa129de9c8ee6f4a55ee582c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::set</definition>
        <argsstring>()</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="79" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1aeddd81add92e27de3bbd848b12f06152" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::set</definition>
        <argsstring>(bool status)</argsstring>
        <name>set</name>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="80" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a1de5f353fd4ea8ab9ff757ab6a7140a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="81" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1ac68454bd16e8523041fafc05d4a36f94" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::toggle</definition>
        <argsstring>()</argsstring>
        <name>toggle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="82" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a9f32b7fd57f05246f7ecd6ca500a70a3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioA8::isSet</definition>
        <argsstring>()</argsstring>
        <name>isSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="86" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a7f71be76271741e5d3a5063a0e699814" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::configure</definition>
        <argsstring>(OutputType type, OutputSpeed speed=OutputSpeed::MHz50)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" kindref="member">OutputType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" kindref="member">OutputSpeed</ref></type>
          <declname>speed</declname>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09a291c765b56a54ef8453ee3aceef60ed3" kindref="member">OutputSpeed::MHz50</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="88" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1ac81a9190a54eaff42b4a424522f07fe8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::setOutput</definition>
        <argsstring>(OutputType type, OutputSpeed speed=OutputSpeed::MHz50)</argsstring>
        <name>setOutput</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" kindref="member">OutputType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" kindref="member">OutputSpeed</ref></type>
          <declname>speed</declname>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09a291c765b56a54ef8453ee3aceef60ed3" kindref="member">OutputSpeed::MHz50</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="89" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a231d5c6ff0f0885b390faa4e341d2eab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::setInput</definition>
        <argsstring>()</argsstring>
        <name>setInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="92" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1aee5ce7fff58e4211b31e3e765d2c7b98" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioA8::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="93" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a9b1851459cea92acaf3ee3ce0fb6db42" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::configure</definition>
        <argsstring>(InputType type)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">InputType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="95" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a7a86ae0d855f77e2296b66d5ab002a20" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::setInput</definition>
        <argsstring>(InputType type)</argsstring>
        <name>setInput</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">InputType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="96" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a5ef441362e75a161f9e211b8788a8793" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::enableExternalInterrupt</definition>
        <argsstring>()</argsstring>
        <name>enableExternalInterrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="101" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="101" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a0145e96956bdc7f049ce92143ac926f4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::disableExternalInterrupt</definition>
        <argsstring>()</argsstring>
        <name>disableExternalInterrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="116" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1ab29471a43a20f3b1179d264d0d5bb706" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::enableExternalInterruptVector</definition>
        <argsstring>(const uint32_t priority)</argsstring>
        <name>enableExternalInterruptVector</name>
        <param>
          <type>const uint32_t</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="117" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a75a8ff75334b936f04a6bc5feef58bb0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::disableExternalInterruptVector</definition>
        <argsstring>()</argsstring>
        <name>disableExternalInterruptVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="122" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a47d41040e3ffa1a87c8007580046404f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::setInputTrigger</definition>
        <argsstring>(const InputTrigger trigger)</argsstring>
        <name>setInputTrigger</name>
        <param>
          <type>const <ref refid="structmodm_1_1platform_1_1_gpio_1a5f683814888fa5a34c2bcf2db9b803a5" kindref="member">InputTrigger</ref></type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="123" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="123" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a3e4e18d18476166c2909aec28d32e482" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioA8::getExternalInterruptFlag</definition>
        <argsstring>()</argsstring>
        <name>getExternalInterruptFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="141" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1aec956dd53cd419081017041520052563" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::acknowledgeExternalInterruptFlag</definition>
        <argsstring>()</argsstring>
        <name>acknowledgeExternalInterruptFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="142" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a61b2d6fb7ce55c86b7ad513b044f24fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" kindref="member">Direction</ref></type>
        <definition>static Direction modm::platform::GpioA8::getDirection</definition>
        <argsstring>()</argsstring>
        <name>getDirection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="145" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="145" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1a6e69e917c58ce02171b305e06b2ae05b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="156" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_a8_1ae00f5c2fb1735af6866c9c857eff5aea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioA8::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="157" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="157" bodyend="160"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>IO class for Pin A8 </para>    </detaileddescription>
    <inheritancegraph>
      <node id="588">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
      <node id="589">
        <label>modm::GpioIO</label>
        <link refid="classmodm_1_1_gpio_i_o"/>
        <childnode refid="590" relation="public-inheritance">
        </childnode>
        <childnode refid="592" relation="public-inheritance">
        </childnode>
      </node>
      <node id="587">
        <label>modm::platform::GpioA8</label>
        <link refid="classmodm_1_1platform_1_1_gpio_a8"/>
        <childnode refid="588" relation="public-inheritance">
        </childnode>
        <childnode refid="589" relation="public-inheritance">
        </childnode>
      </node>
      <node id="592">
        <label>modm::GpioInput</label>
        <link refid="classmodm_1_1_gpio_input"/>
        <childnode refid="591" relation="public-inheritance">
        </childnode>
      </node>
      <node id="590">
        <label>modm::GpioOutput</label>
        <link refid="classmodm_1_1_gpio_output"/>
        <childnode refid="591" relation="public-inheritance">
        </childnode>
      </node>
      <node id="591">
        <label>modm::Gpio</label>
        <link refid="structmodm_1_1_gpio"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="594">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
      <node id="595">
        <label>modm::GpioIO</label>
        <link refid="classmodm_1_1_gpio_i_o"/>
        <childnode refid="596" relation="public-inheritance">
        </childnode>
        <childnode refid="598" relation="public-inheritance">
        </childnode>
      </node>
      <node id="593">
        <label>modm::platform::GpioA8</label>
        <link refid="classmodm_1_1platform_1_1_gpio_a8"/>
        <childnode refid="594" relation="public-inheritance">
        </childnode>
        <childnode refid="595" relation="public-inheritance">
        </childnode>
      </node>
      <node id="598">
        <label>modm::GpioInput</label>
        <link refid="classmodm_1_1_gpio_input"/>
        <childnode refid="597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="596">
        <label>modm::GpioOutput</label>
        <link refid="classmodm_1_1_gpio_output"/>
        <childnode refid="597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="597">
        <label>modm::Gpio</label>
        <link refid="structmodm_1_1_gpio"/>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" line="31" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_A8.hpp" bodystart="30" bodyend="220"/>
    <listofallmembers>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1aec956dd53cd419081017041520052563" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>acknowledgeExternalInterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a6f211b1a6fb32c7354ec26cb136397d7" prot="private" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Adc</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a408d9d1af47860a0d441db9e682a0286" prot="private" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Adc1</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1aa23e1a089c072f958a021d20e3999d1d" prot="private" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Adc2</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a5ed7caa4b9cdb2a9e493c0d14f0969ab" prot="private" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Adc3</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a448248fc7a1c51bccc4b77743edcb11f" prot="private" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Adc4</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1ae3902bfa169b8226b13d63cbb005a958" prot="private" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>AdcChannel</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a917d53f09a0440d6a51841c0c500f4c8" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>af_id</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a49622dad78befd74060e9fce0215ac0e" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>af_mask</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a00d461180a9624ff787b75b5b280a4a0" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>af_offset</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1aeef129a663dc5ef09fc927570fd4664c" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>BitBang</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a61e66dfc1b6440d75ea13822be30da03" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Ch1</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1ab36d6b20a235e58fa702e28b4cb884b6" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Ck</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a7f71be76271741e5d3a5063a0e699814" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>configure</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a9b1851459cea92acaf3ee3ce0fb6db42" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>configure</name></member>
      <member refid="classmodm_1_1_gpio_i_o_1ac3e00d004cfc8c6268085b4468e22684" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>direction</name></member>
      <member refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioA8</scope><name>Direction</name></member>
      <member refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioA8</scope><name>Direction</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a0145e96956bdc7f049ce92143ac926f4" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>disableExternalInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a75a8ff75334b936f04a6bc5feef58bb0" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>disableExternalInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1ae00f5c2fb1735af6866c9c857eff5aea" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>disconnect</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a5ef441362e75a161f9e211b8788a8793" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>enableExternalInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1ab29471a43a20f3b1179d264d0d5bb706" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>enableExternalInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a81fa1cdbaa1bf5a318132297f55592bf" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>ExternalInterruptIRQ</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a61b2d6fb7ce55c86b7ad513b044f24fd" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>getDirection</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a3e4e18d18476166c2909aec28d32e482" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>getExternalInterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a4e7835d7980cbc422c366c10fdbc1f77" prot="private" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>GpioSet</name></member>
      <member refid="structmodm_1_1_gpio_1a17454096f07c8ae16d603ff46ad53c6a" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioA8</scope><name>High</name></member>
      <member refid="structmodm_1_1_gpio_1a17454096f07c8ae16d603ff46ad53c6a" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioA8</scope><name>High</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a175ebef520e76d079892691f14f44d3d" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Input</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a5f683814888fa5a34c2bcf2db9b803a5" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>InputTrigger</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>InputType</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a40f8cf232ee0897a9cd716c84da38623" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>IO</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1af3802a9b2b8299bca11d3ea3dd1d6c0b" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>isInverted</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a9f32b7fd57f05246f7ecd6ca500a70a3" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>isSet</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a6e69e917c58ce02171b305e06b2ae05b" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>lock</name></member>
      <member refid="structmodm_1_1_gpio_1a85ddb071ba8af1c2b89b4e8c079ea58f" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioA8</scope><name>Low</name></member>
      <member refid="structmodm_1_1_gpio_1a85ddb071ba8af1c2b89b4e8c079ea58f" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioA8</scope><name>Low</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1ac106baf44b71b6b40b90a846cbb75f8d" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>mask</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a1f35807fd02691a47b8a36571c31159f" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>mask2</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a8783e2eb4489bc14cca01b65d9e5cab1" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Mco1</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a0e5f4b052c23aef3f2856ed6748a2fc9" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Output</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>OutputSpeed</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>OutputType</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a6699acbc5929176f3dc0650fe407cbba" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>pin</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a5729b0ff443d606466d2163b6cc140ba" prot="private" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>PinSet</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a3b87917d8a5ca4637fd418ffc2f74a59" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>port</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Port</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1aea9d7a039783509f936a149094c4fead" prot="protected" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>port_nr</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1aee5ce7fff58e4211b31e3e765d2c7b98" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>read</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a1de5f353fd4ea8ab9ff757ab6a7140a0" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>reset</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1ade822b57cda4616ca0894f067fe536b7" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Scl</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1ab1e3274fa129de9c8ee6f4a55ee582c5" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1aeddd81add92e27de3bbd848b12f06152" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a231d5c6ff0f0885b390faa4e341d2eab" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a7a86ae0d855f77e2296b66d5ab002a20" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a47d41040e3ffa1a87c8007580046404f" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>setInputTrigger</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a0680ec0256afc0d71d7aba1f09408812" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1a747f48cd568590f53879ae4575a195a4" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1ac81a9190a54eaff42b4a424522f07fe8" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1aa29dea12963575e2cc5ff0312365991b" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Sof</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1ac68454bd16e8523041fafc05d4a36f94" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>toggle</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_a8_1acecfd5642f4ad04543f5ea0245ce997c" prot="public" virt="non-virtual"><scope>modm::platform::GpioA8</scope><name>Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
