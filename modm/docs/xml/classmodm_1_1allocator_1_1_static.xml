<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1allocator_1_1_static" kind="class" language="C++" prot="public">
    <compoundname>modm::allocator::Static</compoundname>
    <basecompoundref refid="classmodm_1_1allocator_1_1_allocator_base" prot="public" virt="non-virtual">modm::allocator::AllocatorBase&lt; T &gt;</basecompoundref>
    <includes refid="static_8hpp" local="no">modm/utils/allocator/static.hpp</includes>
    <innerclass refid="structmodm_1_1allocator_1_1_static_1_1rebind" prot="public">modm::allocator::Static::rebind</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1allocator_1_1_static_1a63d4e5e11bb6fb19df8dda863a56d7c8" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::allocator::Static&lt; T, N &gt;::memory[N]</definition>
        <argsstring>[N]</argsstring>
        <name>memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/utils/allocator/static.hpp" line="68" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/utils/allocator/static.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1allocator_1_1_static_1a44d167e74cca0ecdc38d36c4a07dec3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>modm::allocator::Static&lt; T, N &gt;::Static</definition>
        <argsstring>()</argsstring>
        <name>Static</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/utils/allocator/static.hpp" line="44" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/utils/allocator/static.hpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1allocator_1_1_static_1adcc303f83200eb62a628f41a2218b1f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>modm::allocator::Static&lt; T, N &gt;::Static</definition>
        <argsstring>(const Static &amp;other)</argsstring>
        <name>Static</name>
        <param>
          <type>const <ref refid="classmodm_1_1allocator_1_1_static" kindref="compound">Static</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/utils/allocator/static.hpp" line="49" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/utils/allocator/static.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1allocator_1_1_static_1afe6322b5816c19606d3bb69f5848c859" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>modm::allocator::Static&lt; T, N &gt;::Static</definition>
        <argsstring>(const Static&lt; U, N &gt; &amp;)</argsstring>
        <name>Static</name>
        <param>
          <type>const <ref refid="classmodm_1_1allocator_1_1_static" kindref="compound">Static</ref>&lt; U, N &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/utils/allocator/static.hpp" line="55" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/utils/allocator/static.hpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1allocator_1_1_static_1a8e937a5690416fc2cf5956aff32c85cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T *</type>
        <definition>T* modm::allocator::Static&lt; T, N &gt;::allocate</definition>
        <argsstring>(std::size_t other)</argsstring>
        <name>allocate</name>
        <param>
          <type>std::size_t</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/utils/allocator/static.hpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1allocator_1_1_static_1a156da9a1642ca044dc93c5a8a722dba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::allocator::Static&lt; T, N &gt;::deallocate</definition>
        <argsstring>(T *)</argsstring>
        <name>deallocate</name>
        <param>
          <type>T *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/utils/allocator/static.hpp" line="65" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classmodm_1_1allocator_1_1_static" kindref="compound">Static</ref> memory allocator. </para>    </briefdescription>
    <detaileddescription>
<para>Allocates a big static block and distributes pieces of it during run-time. No reallocation is done when no more pieces are available.</para><para><simplesect kind="author"><para>Fabian Greif </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1598">
        <label>modm::allocator::Static&lt; T, N &gt;</label>
        <link refid="classmodm_1_1allocator_1_1_static"/>
        <childnode refid="1599" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1599">
        <label>modm::allocator::AllocatorBase&lt; T &gt;</label>
        <link refid="classmodm_1_1allocator_1_1_allocator_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1600">
        <label>modm::allocator::Static&lt; T, N &gt;</label>
        <link refid="classmodm_1_1allocator_1_1_static"/>
        <childnode refid="1601" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1601">
        <label>modm::allocator::AllocatorBase&lt; T &gt;</label>
        <link refid="classmodm_1_1allocator_1_1_allocator_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/utils/allocator/static.hpp" line="35" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/utils/allocator/static.hpp" bodystart="34" bodyend="69"/>
    <listofallmembers>
      <member refid="classmodm_1_1allocator_1_1_static_1a8e937a5690416fc2cf5956aff32c85cd" prot="public" virt="non-virtual"><scope>modm::allocator::Static</scope><name>allocate</name></member>
      <member refid="classmodm_1_1allocator_1_1_allocator_base_1a609f717f38153960b28c8b7894c53761" prot="protected" virt="non-virtual"><scope>modm::allocator::Static</scope><name>AllocatorBase</name></member>
      <member refid="classmodm_1_1allocator_1_1_allocator_base_1aa00e230191734784a8e0576871016fac" prot="public" virt="non-virtual"><scope>modm::allocator::Static</scope><name>construct</name></member>
      <member refid="classmodm_1_1allocator_1_1_static_1a156da9a1642ca044dc93c5a8a722dba2" prot="public" virt="non-virtual"><scope>modm::allocator::Static</scope><name>deallocate</name></member>
      <member refid="classmodm_1_1allocator_1_1_allocator_base_1a3ac0e1c924c98d1ac554f27c218cd574" prot="public" virt="non-virtual"><scope>modm::allocator::Static</scope><name>destroy</name></member>
      <member refid="classmodm_1_1allocator_1_1_static_1a63d4e5e11bb6fb19df8dda863a56d7c8" prot="private" virt="non-virtual"><scope>modm::allocator::Static</scope><name>memory</name></member>
      <member refid="classmodm_1_1allocator_1_1_static_1a44d167e74cca0ecdc38d36c4a07dec3e" prot="public" virt="non-virtual"><scope>modm::allocator::Static</scope><name>Static</name></member>
      <member refid="classmodm_1_1allocator_1_1_static_1adcc303f83200eb62a628f41a2218b1f2" prot="public" virt="non-virtual"><scope>modm::allocator::Static</scope><name>Static</name></member>
      <member refid="classmodm_1_1allocator_1_1_static_1afe6322b5816c19606d3bb69f5848c859" prot="public" virt="non-virtual"><scope>modm::allocator::Static</scope><name>Static</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
