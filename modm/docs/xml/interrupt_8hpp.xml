<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="interrupt_8hpp" kind="file" language="C++">
    <compoundname>interrupt.hpp</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="architecture_2utils_8hpp" local="no">modm/architecture/utils.hpp</includes>
    <includedby refid="interface_8hpp" local="yes">/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface.hpp</includedby>
    <includedby refid="uart__base_8hpp" local="no">/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_base.hpp</includedby>
    <incdepgraph>
      <node id="1204">
        <label>stdint.h</label>
      </node>
      <node id="1205">
        <label>modm/architecture/utils.hpp</label>
        <link refid="architecture_2utils_8hpp"/>
        <childnode refid="1206" relation="include">
        </childnode>
      </node>
      <node id="1203">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/interrupt.hpp</label>
        <link refid="interrupt_8hpp"/>
        <childnode refid="1204" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
      </node>
      <node id="1206">
        <label>detect.hpp</label>
        <link refid="detect_8hpp"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1210">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_base.hpp</label>
        <link refid="uart__base_8hpp"/>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1218" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
        <childnode refid="1220" relation="include">
        </childnode>
        <childnode refid="1221" relation="include">
        </childnode>
        <childnode refid="1222" relation="include">
        </childnode>
        <childnode refid="1223" relation="include">
        </childnode>
        <childnode refid="1224" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1216">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_hal_2.hpp</label>
        <link refid="uart__hal__2_8hpp"/>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1218">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_hal_3.hpp</label>
        <link refid="uart__hal__3_8hpp"/>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1214">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_hal_1.hpp</label>
        <link refid="uart__hal__1_8hpp"/>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1209">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture.hpp</label>
        <link refid="architecture_8hpp"/>
      </node>
      <node id="1211">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_1.hpp</label>
        <link refid="uart__1_8hpp"/>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1213">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_baudrate.hpp</label>
        <link refid="uart__baudrate_8hpp"/>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1218" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
        <childnode refid="1220" relation="include">
        </childnode>
        <childnode refid="1221" relation="include">
        </childnode>
        <childnode refid="1222" relation="include">
        </childnode>
        <childnode refid="1223" relation="include">
        </childnode>
        <childnode refid="1224" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1217">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_3.hpp</label>
        <link refid="uart__3_8hpp"/>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1208">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface.hpp</label>
        <link refid="interface_8hpp"/>
        <childnode refid="1209" relation="include">
        </childnode>
      </node>
      <node id="1215">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_2.hpp</label>
        <link refid="uart__2_8hpp"/>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1221">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp</label>
        <link refid="uart__5_8hpp"/>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1219">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_4.hpp</label>
        <link refid="uart__4_8hpp"/>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1207">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/interrupt.hpp</label>
        <link refid="interrupt_8hpp"/>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1223">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_6.hpp</label>
        <link refid="uart__6_8hpp"/>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1212">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform.hpp</label>
        <link refid="platform_8hpp"/>
      </node>
      <node id="1224">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_hal_6.hpp</label>
        <link refid="uart__hal__6_8hpp"/>
        <childnode refid="1223" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1220">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_hal_4.hpp</label>
        <link refid="uart__hal__4_8hpp"/>
        <childnode refid="1219" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1222">
        <label>/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/platform/uart/uart_hal_5.hpp</label>
        <link refid="uart__hal__5_8hpp"/>
        <childnode refid="1221" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__modm__architecture__interrupt_1ga77bb348e9bb73625bb63cdba1f0579c3" prot="public" static="no">
        <name>MODM_ISR_NAME</name>
        <param><defname>vector</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the expanded interrupt name.</para>
<para>On AVRs this maps to <computeroutput>{vector}_vect</computeroutput>. On Cortex-M this maps to <computeroutput>{vector}_IRQHandler</computeroutput>. On Hosted this maps to <computeroutput>{vector}_isr</computeroutput>. <simplesect kind="warning"><para>These mappings are internal and can change without notice!</para>
</simplesect>
<simplesect kind="warning"><para>The CMSIS header files may define a macro with an identical name as an interrupt vector, such as <computeroutput><ref refid="group__modm__architecture__interrupt_1ga77bb348e9bb73625bb63cdba1f0579c3" kindref="member">MODM_ISR_NAME(ADC)</ref></computeroutput> vs. the <computeroutput>ADC</computeroutput> peripheral. When defining interrupt vectors for compatibility, you MUST use this macro instead of manually defining it! <programlisting><codeline><highlight class="normal">#define<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_CAN_TX<sp/><sp/>//<sp/>will<sp/>not<sp/>compile!</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>MODM_ISR_NAME(ADC)<sp/><sp/><sp/>MODM_ISR_NAME(ADC_CAN_TX)<sp/>//<sp/>will<sp/><sp/><sp/><sp/><sp/>compile</highlight></codeline>
<codeline><highlight class="normal">MODM_ISR(ADC)<sp/>{...}</highlight></codeline>
</programlisting></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the interrupt without any suffix (neither <computeroutput>_vect</computeroutput>, nor <computeroutput>_IRQHandler</computeroutput>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/interrupt.hpp" line="44" column="9" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/interrupt.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__modm__architecture__interrupt_1gab02617ca00c48a96f22183259ddd2056" prot="public" static="no">
        <name>MODM_ISR_DECL</name>
        <param><defname>vector</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forward declare in interrupt function.</para>
<para>This maps to <computeroutput>extern void MODM_ISR_NAME({vector})(void)</computeroutput>. <computeroutput>extern &quot;C&quot;</computeroutput> is used automatically in a C++ environment.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the interrupt without any suffix (neither <computeroutput>_vect</computeroutput>, nor <computeroutput>_IRQHandler</computeroutput>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/interrupt.hpp" line="57" column="9" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/interrupt.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__modm__architecture__interrupt_1ga25ac8549c414665d552f94a5db17d702" prot="public" static="no">
        <name>MODM_ISR_CALL</name>
        <param><defname>vector</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Directly calls an interrupt function.</para>
<para>This maps to <computeroutput>MODM_ISR_NAME({vector})()</computeroutput>. <simplesect kind="note"><para>You may have to forward declare the interrupt using <computeroutput>MODM_ISR_DECL({vector})</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the interrupt without any suffix (neither <computeroutput>_vect</computeroutput>, nor <computeroutput>_IRQHandler</computeroutput>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/interrupt.hpp" line="70" column="9" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/interrupt.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__modm__architecture__interrupt_1ga19738f4b356780cd9dc590e90c2481c7" prot="public" static="no">
        <name>MODM_ISR</name>
        <param><defname>vector</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Declare an interrupt handler.</para>
<para>This macro allows the declaration of interrupt handlers using the name declared in the datasheet in C or C++ code on any platform.</para>
<para>On AVRs this maps to <computeroutput>ISR(MODM_ISR_NAME({vector}), args)</computeroutput>. On Cortex-M and Hosted this maps to <computeroutput>void MODM_ISR_NAME({vector})(void) args</computeroutput>. <computeroutput>extern &quot;C&quot;</computeroutput> is automatically added in a C++ environment.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the interrupt without any suffix (neither <computeroutput>_vect</computeroutput>, nor <computeroutput>_IRQHandler</computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Multiple compiler attributes can be added to an interrupt. For example <computeroutput>modm_fastcode</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/interrupt.hpp" line="89" column="9" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/interrupt.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/architecture/interface/interrupt.hpp"/>
  </compounddef>
</doxygen>
