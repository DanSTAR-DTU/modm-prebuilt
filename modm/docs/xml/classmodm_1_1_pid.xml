<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_pid" kind="class" language="C++" prot="public">
    <compoundname>modm::Pid</compoundname>
    <includes refid="pid_8hpp" local="no">modm/math/filter/pid.hpp</includes>
    <innerclass refid="structmodm_1_1_pid_1_1_parameter" prot="public">modm::Pid::Parameter</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>unsigned int</type>
        <declname>ScaleFactor</declname>
        <defname>ScaleFactor</defname>
        <defval>1</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmodm_1_1_pid_1a5399af863ffa99241c1392ba6bdb172b" prot="private" static="no">
        <type><ref refid="group__arithmetic__traits_1ga4aa9b205cd091d24be9d4b873a91d6f5" kindref="member">modm::WideType</ref>&lt; T &gt;</type>
        <definition>typedef modm::WideType&lt;T&gt; modm::Pid&lt; T, ScaleFactor &gt;::WideType</definition>
        <argsstring></argsstring>
        <name>WideType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="58" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1_pid_1abc6029c1c6375ea6599d9f2d8811ab4a" prot="public" static="no">
        <type>T</type>
        <definition>typedef T modm::Pid&lt; T, ScaleFactor &gt;::ValueType</definition>
        <argsstring></argsstring>
        <name>ValueType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="61" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1_pid_1a6c5ab0f2de8e7401407147ac711a6af9" prot="private" static="no" mutable="no">
        <type><ref refid="structmodm_1_1_pid_1_1_parameter" kindref="compound">Parameter</ref></type>
        <definition>Parameter modm::Pid&lt; T, ScaleFactor &gt;::parameter</definition>
        <argsstring></argsstring>
        <name>parameter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="181" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_pid_1aae7d25dc22523ce9e8a1916c428b6a65" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::Pid&lt; T, ScaleFactor &gt;::errorSum</definition>
        <argsstring></argsstring>
        <name>errorSum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="183" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_pid_1ac5cb4a7c0f885d771fd3dc1b7d9fd901" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::Pid&lt; T, ScaleFactor &gt;::lastError</definition>
        <argsstring></argsstring>
        <name>lastError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="184" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_pid_1aeeac2590d6125d633c42064c80fb1f67" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::Pid&lt; T, ScaleFactor &gt;::output</definition>
        <argsstring></argsstring>
        <name>output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="185" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_pid_1a070cb1f5ddd00c3a8c2a9e762696f309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Pid&lt; T, ScaleFactor &gt;::Pid</definition>
        <argsstring>(const float &amp;kp=0, const float &amp;ki=0, const float &amp;kd=0, const T &amp;maxErrorSum=0, const T &amp;maxOutput=0)</argsstring>
        <name>Pid</name>
        <param>
          <type>const float &amp;</type>
          <declname>kp</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>ki</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>kd</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>maxErrorSum</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>maxOutput</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kp</parametername>
</parameternamelist>
<parameterdescription>
<para>proportional gain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ki</parametername>
</parameternamelist>
<parameterdescription>
<para>integral gain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kd</parametername>
</parameternamelist>
<parameterdescription>
<para>differential gain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxErrorSum</parametername>
</parameternamelist>
<parameterdescription>
<para>integral will be limited to this value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxOutput</parametername>
</parameternamelist>
<parameterdescription>
<para>output will be limited to this value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_pid_1a6e6e6a3ea2ad558876847865b0d8f55c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Pid&lt; T, ScaleFactor &gt;::Pid</definition>
        <argsstring>(Parameter &amp;parameter)</argsstring>
        <name>Pid</name>
        <param>
          <type><ref refid="structmodm_1_1_pid_1_1_parameter" kindref="compound">Parameter</ref> &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>list of parameters to the controller </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_pid_1ac4c4ed849ad08d6fd511b209575107e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Pid&lt; T, ScaleFactor &gt;::setParameter</definition>
        <argsstring>(const Parameter &amp;parameter)</argsstring>
        <name>setParameter</name>
        <param>
          <type>const <ref refid="structmodm_1_1_pid_1_1_parameter" kindref="compound">Parameter</ref> &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the parameters of the controller.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>list of parameters to the controller </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_pid_1a03e5d738fd15d784b315ad85f14bd3ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Pid&lt; T, ScaleFactor &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset all values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_pid_1aae464c0c86496efd1d8bda40bb481fd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Pid&lt; T, ScaleFactor &gt;::update</definition>
        <argsstring>(const T &amp;input, bool externalLimitation=false)</argsstring>
        <name>update</name>
        <param>
          <type>const T &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>externalLimitation</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Calculate a new output value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Error </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>externalLimitation</parametername>
</parameternamelist>
<parameterdescription>
<para>If true an external limitation is applied, this disables integral summation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_pid_1a62ec431ff76bea4efbf0267d1eb2b6e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Pid&lt; T, ScaleFactor &gt;::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <briefdescription>
<para>Returns the calculated actuating variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="148" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_pid_1a3445da200fb0264ea1dd2026200f5d2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Pid&lt; T, ScaleFactor &gt;::getLastError</definition>
        <argsstring>() const</argsstring>
        <name>getLastError</name>
        <briefdescription>
<para>Get last error. </para>        </briefdescription>
        <detaileddescription>
<para>This function is provided for debugging purposes only.</para><para>The differential term is calculated via: <programlisting><codeline><highlight class="normal">Kd<sp/>*<sp/>(input<sp/>-<sp/>this-&gt;lastError);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="164" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_pid_1a968c4080e6db5596d76a5a55667216c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Pid&lt; T, ScaleFactor &gt;::getErrorSum</definition>
        <argsstring>() const</argsstring>
        <name>getErrorSum</name>
        <briefdescription>
<para>Get integrated error. </para>        </briefdescription>
        <detaileddescription>
<para>This function is provided for debugging purposes only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="175" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" bodystart="175" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A proportional-integral-derivative controller (PID controller) </para>    </briefdescription>
    <detaileddescription>
<para>The PID controller is one of the basic controlling algorithm.</para><para>The <computeroutput>maxErrorSum</computeroutput> is to be used, to limit the internal integrator and so provide an anti wind up.</para><para>With the template parameter <computeroutput>ScaleFactor</computeroutput> this class provides an fix point capability with integer types.</para><para>Example for a motor speed control with a 10-bit PWM output. <programlisting><codeline><highlight class="normal">Pid&lt;int16_t,<sp/>10&gt;<sp/>pid(0.4,<sp/>0.5,<sp/>0,<sp/>200,<sp/>512);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">v_target<sp/>=<sp/>...<sp/>//<sp/>setpoint</highlight></codeline>
<codeline><highlight class="normal">v_input<sp/><sp/>=<sp/>...<sp/>//<sp/>input<sp/>value</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">pid.update(v_target<sp/>-<sp/>v_input);</highlight></codeline>
<codeline><highlight class="normal">pwm<sp/>=<sp/>pid.getValue();</highlight></codeline>
</programlisting></para><para><xrefsect id="todo_1_todo000007"><xreftitle>Todo</xreftitle><xrefdescription><para>use the faster avr::mul and avr::mac functions</para></xrefdescription></xrefsect></para><para><simplesect kind="author"><para>Fabian Greif </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" line="57" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/filter/pid.hpp" bodystart="56" bodyend="186"/>
    <listofallmembers>
      <member refid="classmodm_1_1_pid_1aae7d25dc22523ce9e8a1916c428b6a65" prot="private" virt="non-virtual"><scope>modm::Pid</scope><name>errorSum</name></member>
      <member refid="classmodm_1_1_pid_1a968c4080e6db5596d76a5a55667216c5" prot="public" virt="non-virtual"><scope>modm::Pid</scope><name>getErrorSum</name></member>
      <member refid="classmodm_1_1_pid_1a3445da200fb0264ea1dd2026200f5d2c" prot="public" virt="non-virtual"><scope>modm::Pid</scope><name>getLastError</name></member>
      <member refid="classmodm_1_1_pid_1a62ec431ff76bea4efbf0267d1eb2b6e1" prot="public" virt="non-virtual"><scope>modm::Pid</scope><name>getValue</name></member>
      <member refid="classmodm_1_1_pid_1ac5cb4a7c0f885d771fd3dc1b7d9fd901" prot="private" virt="non-virtual"><scope>modm::Pid</scope><name>lastError</name></member>
      <member refid="classmodm_1_1_pid_1aeeac2590d6125d633c42064c80fb1f67" prot="private" virt="non-virtual"><scope>modm::Pid</scope><name>output</name></member>
      <member refid="classmodm_1_1_pid_1a6c5ab0f2de8e7401407147ac711a6af9" prot="private" virt="non-virtual"><scope>modm::Pid</scope><name>parameter</name></member>
      <member refid="classmodm_1_1_pid_1a070cb1f5ddd00c3a8c2a9e762696f309" prot="public" virt="non-virtual"><scope>modm::Pid</scope><name>Pid</name></member>
      <member refid="classmodm_1_1_pid_1a6e6e6a3ea2ad558876847865b0d8f55c" prot="public" virt="non-virtual"><scope>modm::Pid</scope><name>Pid</name></member>
      <member refid="classmodm_1_1_pid_1a03e5d738fd15d784b315ad85f14bd3ca" prot="public" virt="non-virtual"><scope>modm::Pid</scope><name>reset</name></member>
      <member refid="classmodm_1_1_pid_1ac4c4ed849ad08d6fd511b209575107e4" prot="public" virt="non-virtual"><scope>modm::Pid</scope><name>setParameter</name></member>
      <member refid="classmodm_1_1_pid_1aae464c0c86496efd1d8bda40bb481fd3" prot="public" virt="non-virtual"><scope>modm::Pid</scope><name>update</name></member>
      <member refid="classmodm_1_1_pid_1abc6029c1c6375ea6599d9f2d8811ab4a" prot="public" virt="non-virtual"><scope>modm::Pid</scope><name>ValueType</name></member>
      <member refid="classmodm_1_1_pid_1a5399af863ffa99241c1392ba6bdb172b" prot="private" virt="non-virtual"><scope>modm::Pid</scope><name>WideType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
