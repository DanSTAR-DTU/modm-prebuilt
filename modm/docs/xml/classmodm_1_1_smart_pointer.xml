<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_smart_pointer" kind="class" language="C++" prot="public">
    <compoundname>modm::SmartPointer</compoundname>
    <includes refid="smart__pointer_8hpp" local="no">modm/container/smart_pointer.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmodm_1_1_smart_pointer_1a9ea9a34e7ec959e5425f65cb82373d3d" prot="protected" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* modm::SmartPointer::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="128" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_smart_pointer_1ad1a23b4df542cb1860f54fa40ad4e899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::SmartPointer::SmartPointer</definition>
        <argsstring>()</argsstring>
        <name>SmartPointer</name>
        <briefdescription>
<para>default constructor with empty payload </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_smart_pointer_1a6a6562e5dff516155b553d6e359a637c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::SmartPointer::SmartPointer</definition>
        <argsstring>(uint16_t size)</argsstring>
        <name>SmartPointer</name>
        <param>
          <type>uint16_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allocates memory from the given size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount of memory to be allocated, has to be smaller than 65530 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_smart_pointer_1ab11e33c9917e5acfa6df394710bd721f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>modm::SmartPointer::SmartPointer</definition>
        <argsstring>(const T *data)</argsstring>
        <name>SmartPointer</name>
        <param>
          <type>const T *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="57" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_smart_pointer_1a10409f48b1c5b239988ca9475202927e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::SmartPointer::SmartPointer</definition>
        <argsstring>(const SmartPointer &amp;other)</argsstring>
        <name>SmartPointer</name>
        <param>
          <type>const <ref refid="classmodm_1_1_smart_pointer" kindref="compound">SmartPointer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_smart_pointer_1ae226334e640383d91979eb9283679d3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::SmartPointer::~SmartPointer</definition>
        <argsstring>()</argsstring>
        <name>~SmartPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_smart_pointer_1ac1973e64240f7231485040a1e96745db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* modm::SmartPointer::getPointer</definition>
        <argsstring>() const</argsstring>
        <name>getPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="70" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_smart_pointer_1aa2ce2d706f2f8715c504adce38a97c8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* modm::SmartPointer::getPointer</definition>
        <argsstring>()</argsstring>
        <name>getPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="76" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_smart_pointer_1ae7ed55cb4de4df510203192b24f00761" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t modm::SmartPointer::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="82" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_smart_pointer_1a5b5031693f73cb0902b312f4363fac67" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; modm::SmartPointer::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the value that are stored in the pointer casted to the given type. <simplesect kind="note"><para>This method has no checking mechanism, use get(T) to have at least some.</para></simplesect>
<simplesect kind="return"><para>the stored value converted to <computeroutput>T</computeroutput> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="96" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_smart_pointer_1ae2f93b6afe967b1ab6bf255b072d6aec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool modm::SmartPointer::get</definition>
        <argsstring>(T &amp;value) const</argsstring>
        <name>get</name>
        <param>
          <type>T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the value that are stored in the pointer casted to the given type. The method checks only the size but not the type of the stored data</para><para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the type fit </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="109" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" bodystart="109" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_smart_pointer_1ad68bc9d4ace026158f635ba06538c85b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::SmartPointer::operator==</definition>
        <argsstring>(const SmartPointer &amp;other)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmodm_1_1_smart_pointer" kindref="compound">SmartPointer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_smart_pointer_1a306ae53139a740dfe7e7bed7b4b7cea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_smart_pointer" kindref="compound">SmartPointer</ref> &amp;</type>
        <definition>SmartPointer&amp; modm::SmartPointer::operator=</definition>
        <argsstring>(const SmartPointer &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_smart_pointer" kindref="compound">SmartPointer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="125" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmodm_1_1_smart_pointer_1a96e98848a8890f7429bd90edb1168637" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
        <definition>IOStream&amp; operator&lt;&lt;</definition>
        <argsstring>(IOStream &amp;, const SmartPointer &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="classmodm_1_1_i_o_stream" kindref="compound">IOStream</ref> &amp;</type>
          <defname>s</defname>
        </param>
        <param>
          <type>const <ref refid="classmodm_1_1_smart_pointer" kindref="compound">SmartPointer</ref> &amp;</type>
          <defname>sPtr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="131" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Container which destroys itself when the last copy is destroyed. </para>    </briefdescription>
    <detaileddescription>
<para>This container saves a copy of the given data on the heap. It provides the functionality of a shared pointer =&gt; pointer object records when it is copied - when the last copy is destroyed the memory is released. </para>    </detaileddescription>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" line="41" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/smart_pointer.hpp" bodystart="40" bodyend="133"/>
    <listofallmembers>
      <member refid="classmodm_1_1_smart_pointer_1a5b5031693f73cb0902b312f4363fac67" prot="public" virt="non-virtual"><scope>modm::SmartPointer</scope><name>get</name></member>
      <member refid="classmodm_1_1_smart_pointer_1ae2f93b6afe967b1ab6bf255b072d6aec" prot="public" virt="non-virtual"><scope>modm::SmartPointer</scope><name>get</name></member>
      <member refid="classmodm_1_1_smart_pointer_1ac1973e64240f7231485040a1e96745db" prot="public" virt="non-virtual"><scope>modm::SmartPointer</scope><name>getPointer</name></member>
      <member refid="classmodm_1_1_smart_pointer_1aa2ce2d706f2f8715c504adce38a97c8f" prot="public" virt="non-virtual"><scope>modm::SmartPointer</scope><name>getPointer</name></member>
      <member refid="classmodm_1_1_smart_pointer_1ae7ed55cb4de4df510203192b24f00761" prot="public" virt="non-virtual"><scope>modm::SmartPointer</scope><name>getSize</name></member>
      <member refid="classmodm_1_1_smart_pointer_1a96e98848a8890f7429bd90edb1168637" prot="protected" virt="non-virtual"><scope>modm::SmartPointer</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmodm_1_1_smart_pointer_1a306ae53139a740dfe7e7bed7b4b7cea7" prot="public" virt="non-virtual"><scope>modm::SmartPointer</scope><name>operator=</name></member>
      <member refid="classmodm_1_1_smart_pointer_1ad68bc9d4ace026158f635ba06538c85b" prot="public" virt="non-virtual"><scope>modm::SmartPointer</scope><name>operator==</name></member>
      <member refid="classmodm_1_1_smart_pointer_1a9ea9a34e7ec959e5425f65cb82373d3d" prot="protected" virt="non-virtual"><scope>modm::SmartPointer</scope><name>ptr</name></member>
      <member refid="classmodm_1_1_smart_pointer_1ad1a23b4df542cb1860f54fa40ad4e899" prot="public" virt="non-virtual"><scope>modm::SmartPointer</scope><name>SmartPointer</name></member>
      <member refid="classmodm_1_1_smart_pointer_1a6a6562e5dff516155b553d6e359a637c" prot="public" virt="non-virtual"><scope>modm::SmartPointer</scope><name>SmartPointer</name></member>
      <member refid="classmodm_1_1_smart_pointer_1ab11e33c9917e5acfa6df394710bd721f" prot="public" virt="non-virtual"><scope>modm::SmartPointer</scope><name>SmartPointer</name></member>
      <member refid="classmodm_1_1_smart_pointer_1a10409f48b1c5b239988ca9475202927e" prot="public" virt="non-virtual"><scope>modm::SmartPointer</scope><name>SmartPointer</name></member>
      <member refid="classmodm_1_1_smart_pointer_1ae226334e640383d91979eb9283679d3f" prot="public" virt="non-virtual"><scope>modm::SmartPointer</scope><name>~SmartPointer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
