<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_i2c_multiplexer_channel" kind="class" language="C++" prot="public">
    <compoundname>modm::I2cMultiplexerChannel</compoundname>
    <basecompoundref refid="classmodm_1_1_i2c_master" prot="public" virt="non-virtual">modm::I2cMaster</basecompoundref>
    <includes refid="i2c__multiplexer_8hpp" local="no">modm/architecture/interface/i2c_multiplexer.hpp</includes>
    <templateparamlist>
      <param>
        <type>auto &amp;</type>
        <declname>multiplexer</declname>
        <defname>multiplexer</defname>
      </param>
      <param>
        <type>typename std::remove_reference_t&lt; decltype(multiplexer)&gt;::Channel</type>
        <declname>channel</declname>
        <defname>channel</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1_i2c_multiplexer_channel_1a0ea68bafbe503284b4becfcd8b0d0604" prot="public" static="yes" mutable="no">
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; modm::I2cMultiplexerChannel&lt; multiplexer, channel &gt;::i2cMultiplexer</definition>
        <argsstring></argsstring>
        <name>i2cMultiplexer</name>
        <initializer>= multiplexer</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="32" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1_i2c_multiplexer_channel_1a9183ed9e44bd4444e36d4a985f668804" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::I2cMultiplexerChannel&lt; multiplexer, channel &gt;::start</definition>
        <argsstring>(I2cTransaction *transaction, ConfigurationHandler handler=nullptr)</argsstring>
        <name>start</name>
        <param>
          <type><ref refid="classmodm_1_1_i2c_transaction" kindref="compound">I2cTransaction</ref> *</type>
          <declname>transaction</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1_i2c_1acc3232e086891a4564399117a4e0e450" kindref="member">ConfigurationHandler</ref></type>
          <declname>handler</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="36" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="107" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Interface of an I2C Multiplexer.</para><para>All I2C multiplexer driver should implement this interface. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1303">
        <label>modm::I2c</label>
        <link refid="structmodm_1_1_i2c"/>
      </node>
      <node id="1301">
        <label>modm::I2cMaster</label>
        <link refid="classmodm_1_1_i2c_master"/>
        <childnode refid="1302" relation="public-inheritance">
        </childnode>
        <childnode refid="1303" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1302">
        <label>modm::PeripheralDriver</label>
        <link refid="classmodm_1_1_peripheral_driver"/>
      </node>
      <node id="1300">
        <label>modm::I2cMultiplexerChannel&lt; multiplexer, channel &gt;</label>
        <link refid="classmodm_1_1_i2c_multiplexer_channel"/>
        <childnode refid="1301" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1307">
        <label>modm::I2c</label>
        <link refid="structmodm_1_1_i2c"/>
      </node>
      <node id="1305">
        <label>modm::I2cMaster</label>
        <link refid="classmodm_1_1_i2c_master"/>
        <childnode refid="1306" relation="public-inheritance">
        </childnode>
        <childnode refid="1307" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1306">
        <label>modm::PeripheralDriver</label>
        <link refid="classmodm_1_1_peripheral_driver"/>
      </node>
      <node id="1304">
        <label>modm::I2cMultiplexerChannel&lt; multiplexer, channel &gt;</label>
        <link refid="classmodm_1_1_i2c_multiplexer_channel"/>
        <childnode refid="1305" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" line="30" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/architecture/interface/i2c_multiplexer.hpp" bodystart="29" bodyend="37"/>
    <listofallmembers>
      <member refid="classmodm_1_1_peripheral_driver_1a5c336ff9889c347e7eadb810bf984ebd" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>assertBaudrateInTolerance</name></member>
      <member refid="structmodm_1_1_i2c_1acc3232e086891a4564399117a4e0e450" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>ConfigurationHandler</name></member>
      <member refid="classmodm_1_1_i2c_master_1a691a55b27dd3cb0032f5f93b6381f66b" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>connect</name></member>
      <member refid="structmodm_1_1_i2c_1a0406997126d064926cdb512911a17dcd" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>DetachCause</name></member>
      <member refid="classmodm_1_1_i2c_master_1aaeba2d490d4a099a1d45cd713106b3e8" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>Error</name></member>
      <member refid="classmodm_1_1_i2c_master_1af26642b59383fce84ceac28b85cee4c0" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>getErrorState</name></member>
      <member refid="classmodm_1_1_i2c_multiplexer_channel_1a0ea68bafbe503284b4becfcd8b0d0604" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>i2cMultiplexer</name></member>
      <member refid="classmodm_1_1_i2c_master_1a4c4273e301d9bc57ba27bb76dc6d7ca5" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>initialize</name></member>
      <member refid="structmodm_1_1_i2c_1a768a0860e730f40db13d750648eb42ad" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>Operation</name></member>
      <member refid="structmodm_1_1_i2c_1a9b3a80feb3a8f179706ee1d5afe8bb31" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>OperationAfterRead</name></member>
      <member refid="structmodm_1_1_i2c_1ae92dc2a408c98192b77d0702fd18350d" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>OperationAfterStart</name></member>
      <member refid="structmodm_1_1_i2c_1aec4012822851f4abbe0ed0dc03c24cbb" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>OperationAfterWrite</name></member>
      <member refid="classmodm_1_1_i2c_master_1a51438a8241ababe94f9ca4b69b75d91c" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>PullUps</name></member>
      <member refid="structmodm_1_1_i2c_1af314fb0ec2e32a25c17cf9f0a54447ee" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>Read</name></member>
      <member refid="classmodm_1_1_i2c_master_1a03eda724e9d299c25d66e3724bbef896" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>reset</name></member>
      <member refid="structmodm_1_1_i2c_1a1855002ad6a0992e32db4f3ebf0432da" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>resetDevices</name></member>
      <member refid="classmodm_1_1_i2c_master_1a141efec8e032cdcd5c9766fbf0f1ddcb" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>ResetDevices</name></member>
      <member refid="classmodm_1_1_i2c_multiplexer_channel_1a9183ed9e44bd4444e36d4a985f668804" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>start</name></member>
      <member refid="classmodm_1_1_i2c_master_1ad1e8c614cc60a21ded60bd4cba60bf54" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>TransactionBufferSize</name></member>
      <member refid="structmodm_1_1_i2c_1a0ba607aa36d2c6c1e5f3ddd9a969c713" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>TransactionState</name></member>
      <member refid="structmodm_1_1_i2c_1a1f77408aecf63279f7c085d8c3692681" prot="public" virt="non-virtual"><scope>modm::I2cMultiplexerChannel</scope><name>Write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
