<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1platform_1_1_basic_timer" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::BasicTimer</compoundname>
    <derivedcompoundref refid="classmodm_1_1platform_1_1_general_purpose_timer" prot="public" virt="non-virtual">modm::platform::GeneralPurposeTimer</derivedcompoundref>
    <derivedcompoundref refid="classmodm_1_1platform_1_1_timer6" prot="public" virt="non-virtual">modm::platform::Timer6</derivedcompoundref>
    <derivedcompoundref refid="classmodm_1_1platform_1_1_timer7" prot="public" virt="non-virtual">modm::platform::Timer7</derivedcompoundref>
    <includes refid="basic__base_8hpp" local="no">modm/platform/timer/basic_base.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classmodm_1_1platform_1_1_basic_timer_1ae79609753399533b77903c3c42ff65a2" prot="public" static="no">
        <name>Mode</name>
        <enumvalue id="classmodm_1_1platform_1_1_basic_timer_1ae79609753399533b77903c3c42ff65a2aa771e4a30d4558abdc5937d1a36fed9d" prot="public">
          <name>UpCounter</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmodm_1_1platform_1_1_basic_timer_1ae79609753399533b77903c3c42ff65a2aca95847671fcb0e671642c316db9c921" prot="public">
          <name>OneShotUpCounter</name>
          <initializer>= TIM_CR1_OPM</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="31" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="enum" id="classmodm_1_1platform_1_1_basic_timer_1a6ab330516e8221330ec2db8319992b15" prot="public" static="no">
        <name>Interrupt</name>
        <enumvalue id="classmodm_1_1platform_1_1_basic_timer_1a6ab330516e8221330ec2db8319992b15a06933067aafd48425d67bcb01bba5cb6" prot="public">
          <name>Update</name>
          <initializer>= TIM_DIER_UIE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="37" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="enum" id="classmodm_1_1platform_1_1_basic_timer_1a77c851e009c1a0239dabf9f3451766a2" prot="public" static="no">
        <name>InterruptFlag</name>
        <enumvalue id="classmodm_1_1platform_1_1_basic_timer_1a77c851e009c1a0239dabf9f3451766a2a06933067aafd48425d67bcb01bba5cb6" prot="public">
          <name>Update</name>
          <initializer>= TIM_SR_UIF</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="43" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_basic_timer_1aa15a59c3a874fbb1f75e07a4ad7d7c1b" prot="public" static="no">
        <type><ref refid="group__modm__architecture__register_1ga4bbc612ddbc2cf239e7c5baeabfa8a0d" kindref="member">modm::Flags32</ref>&lt; <ref refid="classmodm_1_1platform_1_1_basic_timer_1a6ab330516e8221330ec2db8319992b15" kindref="member">Interrupt</ref> &gt;</type>
        <definition>using modm::platform::BasicTimer::Interrupt_t =  modm::Flags32&lt; Interrupt &gt;</definition>
        <argsstring></argsstring>
        <name>Interrupt_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="40" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_basic_timer_1a14819cdd8cd6f7f2a8696f42606cd8a9" prot="public" static="no">
        <type><ref refid="group__modm__architecture__register_1ga4bbc612ddbc2cf239e7c5baeabfa8a0d" kindref="member">modm::Flags32</ref>&lt; <ref refid="classmodm_1_1platform_1_1_basic_timer_1a77c851e009c1a0239dabf9f3451766a2" kindref="member">InterruptFlag</ref> &gt;</type>
        <definition>using modm::platform::BasicTimer::InterruptFlag_t =  modm::Flags32&lt; InterruptFlag &gt;</definition>
        <argsstring></argsstring>
        <name>InterruptFlag_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="46" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1ab157aaf04b838264a33c7bf0cd0bb194" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::enable</definition>
        <argsstring>()</argsstring>
        <name>enable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enables the clock for the timer and resets all settings</para><para>Has to be called before calling any other function from this class! Otherwise the settings won&apos;t have any effect. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1a2e7447e2137162c81b3a0ce765ca6b6b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::disable</definition>
        <argsstring>()</argsstring>
        <name>disable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable clock.</para><para>All settings are ignored in this mode and the timer is shut down. Calling any function other than <ref refid="classmodm_1_1platform_1_1_basic_timer_1ab157aaf04b838264a33c7bf0cd0bb194" kindref="member">enable()</ref> won&apos;t have any effect. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1a319d9a325629767d36b38180c761b89d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::pause</definition>
        <argsstring>()</argsstring>
        <name>pause</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pause timer operation</para><para>All settings are stored but the timer operation is suspend until <ref refid="classmodm_1_1platform_1_1_basic_timer_1adf8f3d42818242d3b42ad8955e06edce" kindref="member">start()</ref> is called. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1adf8f3d42818242d3b42ad8955e06edce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Re-enable timer operations</para><para>Has to called after the initial configuration to start timer or after <ref refid="classmodm_1_1platform_1_1_basic_timer_1a319d9a325629767d36b38180c761b89d" kindref="member">pause()</ref> to restart the timer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1a428bd4fbf1acbae6cd25ab2d3f2182fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::setMode</definition>
        <argsstring>(Mode mode)</argsstring>
        <name>setMode</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_basic_timer_1ae79609753399533b77903c3c42ff65a2" kindref="member">Mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set operation mode of the timer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1a3fbf2e910c75f7f5b8dd75f787503c1d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::setPrescaler</definition>
        <argsstring>(uint16_t prescaler)</argsstring>
        <name>setPrescaler</name>
        <param>
          <type>uint16_t</type>
          <declname>prescaler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set new prescaler</para><para>The prescaler can divide the counter clock frequency by any factor between 1 and 65&apos;536. The new prescaler ratio is taken into account at the next update event.</para><para><simplesect kind="see"><para><ref refid="classmodm_1_1platform_1_1_basic_timer_1a0b5960f797e53edc6d6787e4edc81298" kindref="member">applyAndReset()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1abaa3878582d2142d83c0437ec3b2c8cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::setOverflow</definition>
        <argsstring>(uint16_t overflow)</argsstring>
        <name>setOverflow</name>
        <param>
          <type>uint16_t</type>
          <declname>overflow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set overflow.</para><para>This sets the maximum counter value of the timer. The timer is blocked if <computeroutput>overflow</computeroutput> is set to zero.</para><para>Takes effect at next update event.</para><para><simplesect kind="see"><para><ref refid="classmodm_1_1platform_1_1_basic_timer_1a0b5960f797e53edc6d6787e4edc81298" kindref="member">applyAndReset()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1a7d927b36368726f0b6ee7d2f683b1106" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t modm::platform::BasicTimer::setPeriod</definition>
        <argsstring>(uint32_t microseconds, bool autoApply=true)</argsstring>
        <name>setPeriod</name>
        <param>
          <type>uint32_t</type>
          <declname>microseconds</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>autoApply</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set period in microseconds</para><para>Changes prescaler and overflow values. Takes effect at next update event.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>microseconds</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested period in microseconds </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>autoApply</parametername>
</parameternamelist>
<parameterdescription>
<para>Update the new value immediately and reset the counter value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New overflow value.</para></simplesect>
<simplesect kind="see"><para><ref refid="classmodm_1_1platform_1_1_basic_timer_1a0b5960f797e53edc6d6787e4edc81298" kindref="member">applyAndReset()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1a0b5960f797e53edc6d6787e4edc81298" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::applyAndReset</definition>
        <argsstring>()</argsstring>
        <name>applyAndReset</name>
        <briefdescription>
<para>Reset the counter, and update the prescaler and overflow values. </para>        </briefdescription>
        <detaileddescription>
<para>Generates an Update-Event without generating an Update-Interrupt.</para><para>This will reset the counter to 0 in up-counting mode (the default) or to the maximal value in down-counting mode. It will also update the timer&apos;s prescaler and overflow values if you have set them up to be changed using <ref refid="classmodm_1_1platform_1_1_basic_timer_1a3fbf2e910c75f7f5b8dd75f787503c1d" kindref="member">setPrescaler()</ref> or <ref refid="classmodm_1_1platform_1_1_basic_timer_1abaa3878582d2142d83c0437ec3b2c8cf" kindref="member">setOverflow()</ref> (or <ref refid="classmodm_1_1platform_1_1_basic_timer_1a7d927b36368726f0b6ee7d2f683b1106" kindref="member">setPeriod()</ref>).</para><para>An Update-Event is also generated when the timer reaches its maximal (up-counting) or minimal (down-counting) value. The settings for Prescaler, Overflow and Compare values are applied then without calling this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1adb3f235b777fd4f10b92698389a00ab7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t modm::platform::BasicTimer::getValue</definition>
        <argsstring>()</argsstring>
        <name>getValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the counter value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1a2a1caea6b9c0cce8ee8a83d91eaf83bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::setValue</definition>
        <argsstring>(uint16_t value)</argsstring>
        <name>setValue</name>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a new counter value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1a7137a7e00d411c85285db50c5cd7b9b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::enableInterruptVector</definition>
        <argsstring>(bool enable, uint8_t priority)</argsstring>
        <name>enableInterruptVector</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enables or disables the Interrupt <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable/disable the interrupt vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>Priority of the interrupt vector (0=highest to 15=lowest). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1a0125bc3626a0051dbdc53a5483b985c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::enableInterrupt</definition>
        <argsstring>(Interrupt_t interrupt)</argsstring>
        <name>enableInterrupt</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_basic_timer_1aa15a59c3a874fbb1f75e07a4ad7d7c1b" kindref="member">Interrupt_t</ref></type>
          <declname>interrupt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enables interrupts. Don&apos;t forget to enable the Interrupt <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interrupt</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupts to enable</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classmodm_1_1platform_1_1_basic_timer_1a7137a7e00d411c85285db50c5cd7b9b4" kindref="member">enableInterruptVector()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1add0832893feb247cee7b7cbf9fba06d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::disableInterrupt</definition>
        <argsstring>(Interrupt_t interrupt)</argsstring>
        <name>disableInterrupt</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_basic_timer_1aa15a59c3a874fbb1f75e07a4ad7d7c1b" kindref="member">Interrupt_t</ref></type>
          <declname>interrupt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disables interrupts.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interrupt</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupts to disable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1ae11330dcb450c89da44342855d1c0714" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1platform_1_1_basic_timer_1a14819cdd8cd6f7f2a8696f42606cd8a9" kindref="member">InterruptFlag_t</ref></type>
        <definition>static InterruptFlag_t modm::platform::BasicTimer::getInterruptFlags</definition>
        <argsstring>()</argsstring>
        <name>getInterruptFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a bitmap of the enum StateFlag. Use this method while executing an interrupt or in other situations where you want to know which of the flags are set.</para><para>If a flag is a cause of an enabled interrupt (and the Interrupt <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> is enabled) then interrupt will be triggered as long the flag is set.</para><para><simplesect kind="warning"><para>You cannot use a switch statement for the returned value, since multiple flags may be set!</para></simplesect>
<programlisting><codeline><highlight class="normal">InterruptFlag<sp/>flags<sp/>=<sp/>TimerX::getInterruptFlags()</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(flags<sp/>&amp;<sp/>TimerX::FLAG_XX){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Flag<sp/>was<sp/>set,<sp/>clear<sp/>the<sp/>flag<sp/>since<sp/>flags<sp/>are<sp/>set<sp/>by</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>hardware,<sp/>but<sp/>have<sp/>to<sp/>be<sp/>cleared<sp/>by<sp/>software</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TimerX::resetInterruptFlags(TIMx::FLAG_XX)</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_basic_timer_1a5b2488893edd8afd43e8b4750256c391" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::BasicTimer::acknowledgeInterruptFlags</definition>
        <argsstring>(InterruptFlag_t flags)</argsstring>
        <name>acknowledgeInterruptFlags</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_basic_timer_1a14819cdd8cd6f7f2a8696f42606cd8a9" kindref="member">InterruptFlag_t</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears one or multiple flags.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitmap of StateFlag </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="229" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="90">
        <label>modm::platform::AdvancedControlTimer</label>
        <link refid="classmodm_1_1platform_1_1_advanced_control_timer"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="93">
        <label>modm::platform::Timer10</label>
        <link refid="classmodm_1_1platform_1_1_timer10"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="94">
        <label>modm::platform::Timer11</label>
        <link refid="classmodm_1_1platform_1_1_timer11"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="95">
        <label>modm::platform::Timer12</label>
        <link refid="classmodm_1_1platform_1_1_timer12"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="96">
        <label>modm::platform::Timer13</label>
        <link refid="classmodm_1_1platform_1_1_timer13"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="97">
        <label>modm::platform::Timer14</label>
        <link refid="classmodm_1_1platform_1_1_timer14"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="88">
        <label>modm::platform::BasicTimer</label>
        <link refid="classmodm_1_1platform_1_1_basic_timer"/>
      </node>
      <node id="89">
        <label>modm::platform::GeneralPurposeTimer</label>
        <link refid="classmodm_1_1platform_1_1_general_purpose_timer"/>
        <childnode refid="88" relation="public-inheritance">
        </childnode>
      </node>
      <node id="91">
        <label>modm::platform::Timer1</label>
        <link refid="classmodm_1_1platform_1_1_timer1"/>
        <childnode refid="90" relation="public-inheritance">
        </childnode>
      </node>
      <node id="98">
        <label>modm::platform::Timer2</label>
        <link refid="classmodm_1_1platform_1_1_timer2"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="99">
        <label>modm::platform::Timer3</label>
        <link refid="classmodm_1_1platform_1_1_timer3"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="100">
        <label>modm::platform::Timer4</label>
        <link refid="classmodm_1_1platform_1_1_timer4"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="101">
        <label>modm::platform::Timer5</label>
        <link refid="classmodm_1_1platform_1_1_timer5"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
      <node id="103">
        <label>modm::platform::Timer6</label>
        <link refid="classmodm_1_1platform_1_1_timer6"/>
        <childnode refid="88" relation="public-inheritance">
        </childnode>
      </node>
      <node id="104">
        <label>modm::platform::Timer7</label>
        <link refid="classmodm_1_1platform_1_1_timer7"/>
        <childnode refid="88" relation="public-inheritance">
        </childnode>
      </node>
      <node id="92">
        <label>modm::platform::Timer8</label>
        <link refid="classmodm_1_1platform_1_1_timer8"/>
        <childnode refid="90" relation="public-inheritance">
        </childnode>
      </node>
      <node id="102">
        <label>modm::platform::Timer9</label>
        <link refid="classmodm_1_1platform_1_1_timer9"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" line="28" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/platform/timer/basic_base.hpp" bodystart="27" bodyend="230"/>
    <listofallmembers>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a5b2488893edd8afd43e8b4750256c391" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>acknowledgeInterruptFlags</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a0b5960f797e53edc6d6787e4edc81298" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>applyAndReset</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a2e7447e2137162c81b3a0ce765ca6b6b" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>disable</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1add0832893feb247cee7b7cbf9fba06d5" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>disableInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1ab157aaf04b838264a33c7bf0cd0bb194" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>enable</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a0125bc3626a0051dbdc53a5483b985c8" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>enableInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a7137a7e00d411c85285db50c5cd7b9b4" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>enableInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1ae11330dcb450c89da44342855d1c0714" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>getInterruptFlags</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1adb3f235b777fd4f10b92698389a00ab7" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>getValue</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a6ab330516e8221330ec2db8319992b15" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>Interrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1aa15a59c3a874fbb1f75e07a4ad7d7c1b" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>Interrupt_t</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a77c851e009c1a0239dabf9f3451766a2" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>InterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a14819cdd8cd6f7f2a8696f42606cd8a9" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>InterruptFlag_t</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1ae79609753399533b77903c3c42ff65a2" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>Mode</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a319d9a325629767d36b38180c761b89d" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>pause</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a428bd4fbf1acbae6cd25ab2d3f2182fc" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>setMode</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1abaa3878582d2142d83c0437ec3b2c8cf" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>setOverflow</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a7d927b36368726f0b6ee7d2f683b1106" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>setPeriod</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a3fbf2e910c75f7f5b8dd75f787503c1d" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>setPrescaler</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1a2a1caea6b9c0cce8ee8a83d91eaf83bd" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>setValue</name></member>
      <member refid="classmodm_1_1platform_1_1_basic_timer_1adf8f3d42818242d3b42ad8955e06edce" prot="public" virt="non-virtual"><scope>modm::platform::BasicTimer</scope><name>start</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
