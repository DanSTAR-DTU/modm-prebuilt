<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_linked_list_1_1iterator" kind="class" language="C++" prot="public">
    <compoundname>modm::LinkedList::iterator</compoundname>
    <includes refid="linked__list_8hpp" local="no">modm/container/linked_list.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmodm_1_1_linked_list_1_1iterator_1af71fad9f4990e232af55c73aeddb3823" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class LinkedList</definition>
        <argsstring></argsstring>
        <name>LinkedList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="121" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1_linked_list_1_1iterator_1ac220ce1c155db1ac44146c12d178056f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="122" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1_linked_list_1_1iterator_1aac2dccb2e0e47e2bb23ae19d4ccb85f4" prot="private" static="no" mutable="no">
        <type><ref refid="structmodm_1_1_linked_list_1_1_node" kindref="compound">Node</ref> *</type>
        <definition>Node* modm::LinkedList&lt; T, Allocator &gt;::iterator::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="139" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_linked_list_1_1iterator_1a0a2be436c274bf784379df1638056fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::LinkedList&lt; T, Allocator &gt;::iterator::iterator</definition>
        <argsstring>()</argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_linked_list_1_1iterator_1a9e786c802f56d3cefa5cf7d4f308adb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::LinkedList&lt; T, Allocator &gt;::iterator::iterator</definition>
        <argsstring>(const iterator &amp;other)</argsstring>
        <name>iterator</name>
        <param>
          <type>const <ref refid="classmodm_1_1_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_linked_list_1_1iterator_1a0ecf11157cf416a9816911c44db834a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; modm::LinkedList&lt; T, Allocator &gt;::iterator::operator=</definition>
        <argsstring>(const iterator &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_linked_list_1_1iterator_1a9166d4567a574f7d708f58030a9ebc49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; modm::LinkedList&lt; T, Allocator &gt;::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_linked_list_1_1iterator_1ac01ec49b30c7fd7318684244b85876ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::LinkedList&lt; T, Allocator &gt;::iterator::operator==</definition>
        <argsstring>(const iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmodm_1_1_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_linked_list_1_1iterator_1aef93703bdf29353865ddd7ae20d47873" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::LinkedList&lt; T, Allocator &gt;::iterator::operator!=</definition>
        <argsstring>(const iterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_linked_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_linked_list_1_1iterator_1a37816a3922d5351dbc901a492a9ccfb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; modm::LinkedList&lt; T, Allocator &gt;::iterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_linked_list_1_1iterator_1a7024d37125ee4adc2339cd344da3dc65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T *</type>
        <definition>T* modm::LinkedList&lt; T, Allocator &gt;::iterator::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="134" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmodm_1_1_linked_list_1_1iterator_1a7fa8a22474198785d6829962e74948a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::LinkedList&lt; T, Allocator &gt;::iterator::iterator</definition>
        <argsstring>(Node *node)</argsstring>
        <name>iterator</name>
        <param>
          <type><ref refid="structmodm_1_1_linked_list_1_1_node" kindref="compound">Node</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="137" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Forward iterator. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" line="120" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/container/linked_list.hpp" bodystart="119" bodyend="140"/>
    <listofallmembers>
      <member refid="classmodm_1_1_linked_list_1_1iterator_1ac220ce1c155db1ac44146c12d178056f" prot="private" virt="non-virtual"><scope>modm::LinkedList::iterator</scope><name>const_iterator</name></member>
      <member refid="classmodm_1_1_linked_list_1_1iterator_1a0a2be436c274bf784379df1638056fde" prot="public" virt="non-virtual"><scope>modm::LinkedList::iterator</scope><name>iterator</name></member>
      <member refid="classmodm_1_1_linked_list_1_1iterator_1a9e786c802f56d3cefa5cf7d4f308adb7" prot="public" virt="non-virtual"><scope>modm::LinkedList::iterator</scope><name>iterator</name></member>
      <member refid="classmodm_1_1_linked_list_1_1iterator_1a7fa8a22474198785d6829962e74948a6" prot="private" virt="non-virtual"><scope>modm::LinkedList::iterator</scope><name>iterator</name></member>
      <member refid="classmodm_1_1_linked_list_1_1iterator_1af71fad9f4990e232af55c73aeddb3823" prot="private" virt="non-virtual"><scope>modm::LinkedList::iterator</scope><name>LinkedList</name></member>
      <member refid="classmodm_1_1_linked_list_1_1iterator_1aac2dccb2e0e47e2bb23ae19d4ccb85f4" prot="private" virt="non-virtual"><scope>modm::LinkedList::iterator</scope><name>node</name></member>
      <member refid="classmodm_1_1_linked_list_1_1iterator_1aef93703bdf29353865ddd7ae20d47873" prot="public" virt="non-virtual"><scope>modm::LinkedList::iterator</scope><name>operator!=</name></member>
      <member refid="classmodm_1_1_linked_list_1_1iterator_1a37816a3922d5351dbc901a492a9ccfb7" prot="public" virt="non-virtual"><scope>modm::LinkedList::iterator</scope><name>operator*</name></member>
      <member refid="classmodm_1_1_linked_list_1_1iterator_1a9166d4567a574f7d708f58030a9ebc49" prot="public" virt="non-virtual"><scope>modm::LinkedList::iterator</scope><name>operator++</name></member>
      <member refid="classmodm_1_1_linked_list_1_1iterator_1a7024d37125ee4adc2339cd344da3dc65" prot="public" virt="non-virtual"><scope>modm::LinkedList::iterator</scope><name>operator-&gt;</name></member>
      <member refid="classmodm_1_1_linked_list_1_1iterator_1a0ecf11157cf416a9816911c44db834a4" prot="public" virt="non-virtual"><scope>modm::LinkedList::iterator</scope><name>operator=</name></member>
      <member refid="classmodm_1_1_linked_list_1_1iterator_1ac01ec49b30c7fd7318684244b85876ac" prot="public" virt="non-virtual"><scope>modm::LinkedList::iterator</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
