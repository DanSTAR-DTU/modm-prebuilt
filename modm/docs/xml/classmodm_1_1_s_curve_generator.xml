<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_s_curve_generator" kind="class" language="C++" prot="public">
    <compoundname>modm::SCurveGenerator</compoundname>
    <includes refid="s__curve__generator_8hpp" local="no">modm/math/filter/s_curve_generator.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1_s_curve_generator_1aca84aaf0027f00ccd789a88c994b51a0" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::SCurveGenerator&lt; T &gt;::target</definition>
        <argsstring></argsstring>
        <name>target</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" line="49" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_s_curve_generator_1af337227a61513acaa323ca4c2cc01155" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::SCurveGenerator&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" line="50" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_s_curve_generator_1a2e4e16c7f9efc37905a967644e701da9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool modm::SCurveGenerator&lt; T &gt;::targetReached</definition>
        <argsstring></argsstring>
        <name>targetReached</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" line="51" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_s_curve_generator_1a9b112bfb3a4aba182f31df7f3532ed64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::SCurveGenerator&lt; T &gt;::SCurveGenerator</definition>
        <argsstring>(const T &amp;initialValue=T())</argsstring>
        <name>SCurveGenerator</name>
        <param>
          <type>const T &amp;</type>
          <declname>initialValue</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_s_curve_generator_1a39f598946a7fa03b6a7a2a7410834a3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::SCurveGenerator&lt; T &gt;::setTarget</definition>
        <argsstring>(const T &amp;target)</argsstring>
        <name>setTarget</name>
        <param>
          <type>const T &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_s_curve_generator_1a3736420e9319a02bd6d26224510613c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modm::SCurveGenerator&lt; T &gt;::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_s_curve_generator_1abb3d9712521beed0f776cb8ff46c91cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::SCurveGenerator&lt; T &gt;::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" line="40" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_s_curve_generator_1a8204f36948254762aa56847e6d440275" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::SCurveGenerator&lt; T &gt;::isTargetReached</definition>
        <argsstring>() const</argsstring>
        <name>isTargetReached</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" line="46" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Trapezoidal S-Curve Trajectory. </para>    </briefdescription>
    <detaileddescription>
<para>open-loop control</para><para><xrefsect id="todo_1_todo000013"><xreftitle>Todo</xreftitle><xrefdescription><para>documentation </para><para>implementation</para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" line="29" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/math/filter/s_curve_generator.hpp" bodystart="28" bodyend="52"/>
    <listofallmembers>
      <member refid="classmodm_1_1_s_curve_generator_1abb3d9712521beed0f776cb8ff46c91cd" prot="public" virt="non-virtual"><scope>modm::SCurveGenerator</scope><name>getValue</name></member>
      <member refid="classmodm_1_1_s_curve_generator_1a8204f36948254762aa56847e6d440275" prot="public" virt="non-virtual"><scope>modm::SCurveGenerator</scope><name>isTargetReached</name></member>
      <member refid="classmodm_1_1_s_curve_generator_1a9b112bfb3a4aba182f31df7f3532ed64" prot="public" virt="non-virtual"><scope>modm::SCurveGenerator</scope><name>SCurveGenerator</name></member>
      <member refid="classmodm_1_1_s_curve_generator_1a39f598946a7fa03b6a7a2a7410834a3e" prot="public" virt="non-virtual"><scope>modm::SCurveGenerator</scope><name>setTarget</name></member>
      <member refid="classmodm_1_1_s_curve_generator_1aca84aaf0027f00ccd789a88c994b51a0" prot="private" virt="non-virtual"><scope>modm::SCurveGenerator</scope><name>target</name></member>
      <member refid="classmodm_1_1_s_curve_generator_1a2e4e16c7f9efc37905a967644e701da9" prot="private" virt="non-virtual"><scope>modm::SCurveGenerator</scope><name>targetReached</name></member>
      <member refid="classmodm_1_1_s_curve_generator_1a3736420e9319a02bd6d26224510613c8" prot="public" virt="non-virtual"><scope>modm::SCurveGenerator</scope><name>update</name></member>
      <member refid="classmodm_1_1_s_curve_generator_1af337227a61513acaa323ca4c2cc01155" prot="private" virt="non-virtual"><scope>modm::SCurveGenerator</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
