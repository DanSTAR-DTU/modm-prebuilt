<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1platform_1_1_uart5" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::Uart5</compoundname>
    <basecompoundref refid="classmodm_1_1platform_1_1_uart_base" prot="public" virt="non-virtual">modm::platform::UartBase</basecompoundref>
    <basecompoundref refid="classmodm_1_1_uart" prot="public" virt="non-virtual">modm::Uart</basecompoundref>
    <includes refid="uart__5_8hpp" local="no">modm/platform/uart/uart_5.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_uart5_1a961c383e92e9699425e709d6a59d3e49" prot="public" static="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t modm::platform::Uart5::RxBufferSize</definition>
        <argsstring></argsstring>
        <name>RxBufferSize</name>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="48" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_uart5_1ab251d6bc3be4012532ab3fe38226b9b8" prot="public" static="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t modm::platform::Uart5::TxBufferSize</definition>
        <argsstring></argsstring>
        <name>TxBufferSize</name>
        <initializer>= 250</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="49" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1a73e36e7013b158cc5a5020400601f5f9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Uart5::initializeBuffered</definition>
        <argsstring>(uint32_t interruptPriority)</argsstring>
        <name>initializeBuffered</name>
        <param>
          <type>uint32_t</type>
          <declname>interruptPriority</declname>
        </param>
        <briefdescription>
<para>Second stage initialize for buffered uart. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="45" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1af9900eea9f68d61a1c21873483630163" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; <ref refid="namespacemodm_1_1platform_1a9a75ca82fea26cd4f4948f93899d0f55" kindref="member">Peripheral</ref> _ &gt; class...</type>
            <declname>Signals</declname>
            <defname>Signals</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void modm::platform::Uart5::connect</definition>
        <argsstring>(Gpio::InputType InputTypeRx=Gpio::InputType::PullUp)</argsstring>
        <name>connect</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">Gpio::InputType</ref></type>
          <declname>InputTypeRx</declname>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6dadbe269e26d8282186a4163a2424e3361" kindref="member">Gpio::InputType::PullUp</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="54" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" bodystart="54" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1a5e884777b4a5136f401324c5035a5883" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SystemClock</type>
          </param>
          <param>
            <type><ref refid="group__modm__math__units_1ga30af1fac499efa181bc4708e24c577d1" kindref="member">baudrate_t</ref></type>
            <declname>baudrate</declname>
            <defname>baudrate</defname>
          </param>
          <param>
            <type><ref refid="group__modm__math__units_1ga4f017ee3fdf26cb780b0df55356f031c" kindref="member">percent_t</ref></type>
            <declname>tolerance</declname>
            <defname>tolerance</defname>
            <defval><ref refid="group__modm__math__units_1gaa849cad2910e94feb4a7f31a6dacbb1c" kindref="member">pct</ref>(1)</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void modm::platform::Uart5::initialize</definition>
        <argsstring>(uint32_t interruptPriority=12, Parity parity=Parity::Disabled)</argsstring>
        <name>initialize</name>
        <param>
          <type>uint32_t</type>
          <declname>interruptPriority</declname>
          <defval>12</defval>
        </param>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_uart_base_1a598033b30db9a90ea5c34a7b1cdc41e1" kindref="member">Parity</ref></type>
          <declname>parity</declname>
          <defval><ref refid="classmodm_1_1platform_1_1_uart_base_1a598033b30db9a90ea5c34a7b1cdc41e1ab9f5c797ebbf55adccdd8539a65a0241" kindref="member">Parity::Disabled</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="71" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" bodystart="71" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1afd0fd937cc884e5fc42e40fd6f652bef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Uart5::writeBlocking</definition>
        <argsstring>(uint8_t data)</argsstring>
        <name>writeBlocking</name>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1a70a14c3b07a85aa878f12dd7cd5a2aec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Uart5::writeBlocking</definition>
        <argsstring>(const uint8_t *data, std::size_t length)</argsstring>
        <name>writeBlocking</name>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1af90a6e64f9c13dd34a5dc01e3718e894" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::Uart5::flushWriteBuffer</definition>
        <argsstring>()</argsstring>
        <name>flushWriteBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1a343992752dbd15df9b241e514781ed61" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::Uart5::write</definition>
        <argsstring>(uint8_t data)</argsstring>
        <name>write</name>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1a8ff78572039dba3e494f1fbc0ee5d26d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t modm::platform::Uart5::write</definition>
        <argsstring>(const uint8_t *data, std::size_t length)</argsstring>
        <name>write</name>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1a6ca869f4fb8ee200f72c0330ce7e359a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::Uart5::isWriteFinished</definition>
        <argsstring>()</argsstring>
        <name>isWriteFinished</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1ad1bbbed24dfb134d56385b8fdd583d2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t modm::platform::Uart5::discardTransmitBuffer</definition>
        <argsstring>()</argsstring>
        <name>discardTransmitBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1aea80bc9b8d6ddd82962d6563cd49b564" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::Uart5::read</definition>
        <argsstring>(uint8_t &amp;data)</argsstring>
        <name>read</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1a377118dbb6b6440ac4a0ef90741bb614" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t modm::platform::Uart5::read</definition>
        <argsstring>(uint8_t *buffer, std::size_t length)</argsstring>
        <name>read</name>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_uart5_1aa3e3a08784957fbb4b2970df514c64de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t modm::platform::Uart5::discardReceiveBuffer</definition>
        <argsstring>()</argsstring>
        <name>discardReceiveBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="112" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Universal asynchronous receiver transmitter (UART5)</para><para><simplesect kind="author"><para>Kevin Laeufer </para></simplesect>
<simplesect kind="author"><para>Niklas Hauser </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1722">
        <label>modm::platform::Uart5</label>
        <link refid="classmodm_1_1platform_1_1_uart5"/>
        <childnode refid="1723" relation="public-inheritance">
        </childnode>
        <childnode refid="1724" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1725">
        <label>modm::PeripheralDriver</label>
        <link refid="classmodm_1_1_peripheral_driver"/>
      </node>
      <node id="1723">
        <label>modm::platform::UartBase</label>
        <link refid="classmodm_1_1platform_1_1_uart_base"/>
      </node>
      <node id="1724">
        <label>modm::Uart</label>
        <link refid="classmodm_1_1_uart"/>
        <childnode refid="1725" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1726">
        <label>modm::platform::Uart5</label>
        <link refid="classmodm_1_1platform_1_1_uart5"/>
        <childnode refid="1727" relation="public-inheritance">
        </childnode>
        <childnode refid="1728" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1729">
        <label>modm::PeripheralDriver</label>
        <link refid="classmodm_1_1_peripheral_driver"/>
      </node>
      <node id="1727">
        <label>modm::platform::UartBase</label>
        <link refid="classmodm_1_1platform_1_1_uart_base"/>
      </node>
      <node id="1728">
        <label>modm::Uart</label>
        <link refid="classmodm_1_1_uart"/>
        <childnode refid="1729" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" line="40" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/uart/uart_5.hpp" bodystart="39" bodyend="114"/>
    <listofallmembers>
      <member refid="classmodm_1_1_peripheral_driver_1a5c336ff9889c347e7eadb810bf984ebd" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>assertBaudrateInTolerance</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1af9900eea9f68d61a1c21873483630163" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>connect</name></member>
      <member refid="classmodm_1_1_uart_1aa04c6a1afbfb99eb8cd4d0b8d4e004d8" prot="public" virt="non-virtual" ambiguityscope="modm::Uart::"><scope>modm::platform::Uart5</scope><name>connect</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1aa3e3a08784957fbb4b2970df514c64de" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>discardReceiveBuffer</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1ad1bbbed24dfb134d56385b8fdd583d2a" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>discardTransmitBuffer</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1af90a6e64f9c13dd34a5dc01e3718e894" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>flushWriteBuffer</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1a5e884777b4a5136f401324c5035a5883" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>initialize</name></member>
      <member refid="classmodm_1_1_uart_1a3efec27dfb4b49dcc5887e5cdf9e1566" prot="public" virt="non-virtual" ambiguityscope="modm::Uart::"><scope>modm::platform::Uart5</scope><name>initialize</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1a73e36e7013b158cc5a5020400601f5f9" prot="private" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>initializeBuffered</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1ac9c1bc3b77588a11d520416c22a25832" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>Interrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1a6ebe84a6b410051751c29464340e395f" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>Interrupt_t</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1a231dd8ca89bde31fb9bec6a65c1dae8f" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>InterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1a918f65a6ffc3f0f1a6c64b9088e4dc5b" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>InterruptFlag_t</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1a6ca869f4fb8ee200f72c0330ce7e359a" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>isWriteFinished</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1ace789bf4bb98f058efde7ab625f10e0a" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>LastBitClockPulse</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1a7dd12333d203f746bca00aedd0d23d05" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>OversamplingMode</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1a598033b30db9a90ea5c34a7b1cdc41e1" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>Parity</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1aea80bc9b8d6ddd82962d6563cd49b564" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>read</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1a377118dbb6b6440ac4a0ef90741bb614" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>read</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1a961c383e92e9699425e709d6a59d3e49" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>RxBufferSize</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1aa946086fdf30e477d0a317d657c4e44f" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>SpiClock</name></member>
      <member refid="classmodm_1_1platform_1_1_uart_base_1abb9ae2af6239db1ae39f2a789989e03c" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>SpiDataMode</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1ab251d6bc3be4012532ab3fe38226b9b8" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>TxBufferSize</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1a343992752dbd15df9b241e514781ed61" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>write</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1a8ff78572039dba3e494f1fbc0ee5d26d" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>write</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1afd0fd937cc884e5fc42e40fd6f652bef" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>writeBlocking</name></member>
      <member refid="classmodm_1_1platform_1_1_uart5_1a70a14c3b07a85aa878f12dd7cd5a2aec" prot="public" virt="non-virtual"><scope>modm::platform::Uart5</scope><name>writeBlocking</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
