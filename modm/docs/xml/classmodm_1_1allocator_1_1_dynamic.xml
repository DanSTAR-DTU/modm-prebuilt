<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classmodm_1_1allocator_1_1_dynamic" kind="class" language="C++" prot="public">
    <compoundname>modm::allocator::Dynamic</compoundname>
    <basecompoundref refid="classmodm_1_1allocator_1_1_allocator_base" prot="public" virt="non-virtual">modm::allocator::AllocatorBase&lt; T &gt;</basecompoundref>
    <includes refid="dynamic_8hpp" local="no">modm/utils/allocator/dynamic.hpp</includes>
    <innerclass refid="structmodm_1_1allocator_1_1_dynamic_1_1rebind" prot="public">modm::allocator::Dynamic::rebind</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1allocator_1_1_dynamic_1a7843251f80bcadc89c3bb006b1f72222" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>modm::allocator::Dynamic&lt; T &gt;::Dynamic</definition>
        <argsstring>()</argsstring>
        <name>Dynamic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/utils/allocator/dynamic.hpp" line="43" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/utils/allocator/dynamic.hpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1allocator_1_1_dynamic_1ad4b5a6866956c7caaccda2b69b66aef5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>modm::allocator::Dynamic&lt; T &gt;::Dynamic</definition>
        <argsstring>(const Dynamic &amp;other)</argsstring>
        <name>Dynamic</name>
        <param>
          <type>const <ref refid="classmodm_1_1allocator_1_1_dynamic" kindref="compound">Dynamic</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/utils/allocator/dynamic.hpp" line="48" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/utils/allocator/dynamic.hpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1allocator_1_1_dynamic_1ad95fe6dfb9c163ec45ce7aee8d80453d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>modm::allocator::Dynamic&lt; T &gt;::Dynamic</definition>
        <argsstring>(const Dynamic&lt; U &gt; &amp;)</argsstring>
        <name>Dynamic</name>
        <param>
          <type>const <ref refid="classmodm_1_1allocator_1_1_dynamic" kindref="compound">Dynamic</ref>&lt; U &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/utils/allocator/dynamic.hpp" line="54" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/utils/allocator/dynamic.hpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1allocator_1_1_dynamic_1aaf81e3dbc05de1ec73903fb4549fcd5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* modm::allocator::Dynamic&lt; T &gt;::allocate</definition>
        <argsstring>(size_t n)</argsstring>
        <name>allocate</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/utils/allocator/dynamic.hpp" line="60" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/utils/allocator/dynamic.hpp" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1allocator_1_1_dynamic_1adeba2801e6c0095546e6bc793030cb8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::allocator::Dynamic&lt; T &gt;::deallocate</definition>
        <argsstring>(T *p)</argsstring>
        <name>deallocate</name>
        <param>
          <type>T *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/utils/allocator/dynamic.hpp" line="68" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/utils/allocator/dynamic.hpp" bodystart="68" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classmodm_1_1allocator_1_1_dynamic" kindref="compound">Dynamic</ref> memory allocator. </para>
    </briefdescription>
    <detaileddescription>
<para>Wrapper for the underlying memory management. No additional management is done.</para>
<para><simplesect kind="author"><para>Fabian Greif </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="218">
        <label>modm::allocator::AllocatorBase&lt; T &gt;</label>
        <link refid="classmodm_1_1allocator_1_1_allocator_base"/>
      </node>
      <node id="217">
        <label>modm::allocator::Dynamic&lt; T &gt;</label>
        <link refid="classmodm_1_1allocator_1_1_dynamic"/>
        <childnode refid="218" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="220">
        <label>modm::allocator::AllocatorBase&lt; T &gt;</label>
        <link refid="classmodm_1_1allocator_1_1_allocator_base"/>
      </node>
      <node id="219">
        <label>modm::allocator::Dynamic&lt; T &gt;</label>
        <link refid="classmodm_1_1allocator_1_1_dynamic"/>
        <childnode refid="220" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/utils/allocator/dynamic.hpp" line="34" column="1" bodyfile="/home/amar/classes/danstar/modm-prebuilt/modm/src/modm/utils/allocator/dynamic.hpp" bodystart="33" bodyend="75"/>
    <listofallmembers>
      <member refid="classmodm_1_1allocator_1_1_dynamic_1aaf81e3dbc05de1ec73903fb4549fcd5b" prot="public" virt="non-virtual"><scope>modm::allocator::Dynamic</scope><name>allocate</name></member>
      <member refid="classmodm_1_1allocator_1_1_allocator_base_1a609f717f38153960b28c8b7894c53761" prot="protected" virt="non-virtual"><scope>modm::allocator::Dynamic</scope><name>AllocatorBase</name></member>
      <member refid="classmodm_1_1allocator_1_1_allocator_base_1aa00e230191734784a8e0576871016fac" prot="public" virt="non-virtual"><scope>modm::allocator::Dynamic</scope><name>construct</name></member>
      <member refid="classmodm_1_1allocator_1_1_dynamic_1adeba2801e6c0095546e6bc793030cb8e" prot="public" virt="non-virtual"><scope>modm::allocator::Dynamic</scope><name>deallocate</name></member>
      <member refid="classmodm_1_1allocator_1_1_allocator_base_1a3ac0e1c924c98d1ac554f27c218cd574" prot="public" virt="non-virtual"><scope>modm::allocator::Dynamic</scope><name>destroy</name></member>
      <member refid="classmodm_1_1allocator_1_1_dynamic_1a7843251f80bcadc89c3bb006b1f72222" prot="public" virt="non-virtual"><scope>modm::allocator::Dynamic</scope><name>Dynamic</name></member>
      <member refid="classmodm_1_1allocator_1_1_dynamic_1ad4b5a6866956c7caaccda2b69b66aef5" prot="public" virt="non-virtual"><scope>modm::allocator::Dynamic</scope><name>Dynamic</name></member>
      <member refid="classmodm_1_1allocator_1_1_dynamic_1ad95fe6dfb9c163ec45ce7aee8d80453d" prot="public" virt="non-virtual"><scope>modm::allocator::Dynamic</scope><name>Dynamic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
