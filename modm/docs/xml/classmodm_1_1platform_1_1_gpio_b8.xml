<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1platform_1_1_gpio_b8" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::GpioB8</compoundname>
    <basecompoundref refid="structmodm_1_1platform_1_1_gpio" prot="public" virt="non-virtual">modm::platform::Gpio</basecompoundref>
    <basecompoundref refid="classmodm_1_1_gpio_i_o" prot="public" virt="non-virtual">modm::GpioIO</basecompoundref>
    <includes refid="gpio___b8_8hpp" local="no">modm/platform/gpio/gpio_B8.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1a89c452062765d4bffa7f3a8233028651" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioB8::BitBang =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>BitBang</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Connect to any software peripheral </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="167" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1a94ebb502d3879682002dfe3dfbef1140" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioB8::Ch1 =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Ch1</name>
        <briefdescription>
<para>Connect to Tim2 or Tim10. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="169" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1a284a537844773369d73dd153233d32fe" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioB8::Ch3 =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Ch3</name>
        <briefdescription>
<para>Connect to Tim4. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="171" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1ad304937c32ad2872e1edd804bb9e4752" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioB8::D4 =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>D4</name>
        <briefdescription>
<para>Connect to Sdio. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="173" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1aef5542e8ab4106ca810808dcb26cab3d" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioB8::D6 =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>D6</name>
        <briefdescription>
<para>Connect to Dcmi. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="175" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1a75db0e550fb7561e4d4544f37b87cf68" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioB8::Etr =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Etr</name>
        <briefdescription>
<para>Connect to Tim2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="177" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1a53d3313b49db27682aba72354bfc4900" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioB8::Rx =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Rx</name>
        <briefdescription>
<para>Connect to <ref refid="classmodm_1_1platform_1_1_can1" kindref="compound">Can1</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="179" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1a50e9919e5668d8c472d12f61d1da0483" prot="public" static="no">
        <type>GpioSignal</type>
        <definition>using modm::platform::GpioB8::Scl =  GpioSignal</definition>
        <argsstring></argsstring>
        <name>Scl</name>
        <briefdescription>
<para>Connect to I2c1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="181" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1a46e5cfa7ed6b82b892cd027e9fe8885f" prot="private" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_set" kindref="compound">GpioSet</ref>&lt; <ref refid="classmodm_1_1platform_1_1_gpio_b8" kindref="compound">GpioB8</ref> &gt;</type>
        <definition>using modm::platform::GpioB8::PinSet =  GpioSet&lt;GpioB8&gt;</definition>
        <argsstring></argsstring>
        <name>PinSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="37" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1a48cfc3417fefd05d092b9fbb1626acae" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_b8" kindref="compound">GpioB8</ref></type>
        <definition>using modm::platform::GpioB8::Output =  GpioB8</definition>
        <argsstring></argsstring>
        <name>Output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="42" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1a00cb1246a15d60f28c16a9be96b51d8f" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_b8" kindref="compound">GpioB8</ref></type>
        <definition>using modm::platform::GpioB8::Input =  GpioB8</definition>
        <argsstring></argsstring>
        <name>Input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="43" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1a2fb360945f0b6e93e0bd914db71267a6" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_b8" kindref="compound">GpioB8</ref></type>
        <definition>using modm::platform::GpioB8::IO =  GpioB8</definition>
        <argsstring></argsstring>
        <name>IO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="44" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmodm_1_1platform_1_1_gpio_b8_1a9d91751bff4730e274b06ec5b4041c1f" prot="public" static="no">
        <type><ref refid="classmodm_1_1platform_1_1_gpio_b8" kindref="compound">GpioB8</ref></type>
        <definition>using modm::platform::GpioB8::Type =  GpioB8</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="45" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_b8_1a4e7835d7980cbc422c366c10fdbc1f77" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Gpios</declname>
            <defname>Gpios</defname>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class GpioSet</definition>
        <argsstring></argsstring>
        <name>GpioSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="36" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_b8_1a6f211b1a6fb32c7354ec26cb136397d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc</definition>
        <argsstring></argsstring>
        <name>Adc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="38" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_b8_1a408d9d1af47860a0d441db9e682a0286" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc1</definition>
        <argsstring></argsstring>
        <name>Adc1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="39" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_b8_1aa23e1a089c072f958a021d20e3999d1d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc2</definition>
        <argsstring></argsstring>
        <name>Adc2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="39" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_b8_1a5ed7caa4b9cdb2a9e493c0d14f0969ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc3</definition>
        <argsstring></argsstring>
        <name>Adc3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="40" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmodm_1_1platform_1_1_gpio_b8_1a448248fc7a1c51bccc4b77743edcb11f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Adc4</definition>
        <argsstring></argsstring>
        <name>Adc4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="40" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_b8_1a3034059403d2a3a712dba7903fa79231" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool modm::platform::GpioB8::isInverted</definition>
        <argsstring></argsstring>
        <name>isInverted</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="46" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_b8_1aa7fd8ba758d9f044cb591712366ca7eb" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" kindref="member">Port</ref></type>
        <definition>constexpr Port modm::platform::GpioB8::port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <initializer>= <ref refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19ba9d5ed678fe57bcca610140957afab571" kindref="member">Port::B</ref></initializer>
        <briefdescription>
<para>Port name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="47" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_b8_1a36e314c241ab5f1c5c87e205c6281f69" prot="public" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioB8::pin</definition>
        <argsstring></argsstring>
        <name>pin</name>
        <initializer>= 8</initializer>
        <briefdescription>
<para>Pin number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="48" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_b8_1a45bdd0f6630dde782a3394362e17de09" prot="protected" static="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t modm::platform::GpioB8::mask</definition>
        <argsstring></argsstring>
        <name>mask</name>
        <initializer>= 0x1 &lt;&lt; pin</initializer>
        <briefdescription>
<para>Bitmask for registers that contain a 1bit value for every pin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="52" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_b8_1a818ff73f2ef5595ee17fa4ae8a94d839" prot="protected" static="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t modm::platform::GpioB8::mask2</definition>
        <argsstring></argsstring>
        <name>mask2</name>
        <initializer>= 0x3 &lt;&lt; (pin * 2)</initializer>
        <briefdescription>
<para>Bitmask for registers that contain a 2bit value for every pin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="54" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_b8_1a1a094de04c4bdc0f0630c2d3554b3dd6" prot="protected" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioB8::port_nr</definition>
        <argsstring></argsstring>
        <name>port_nr</name>
        <initializer>= uint8_t(<ref refid="classmodm_1_1platform_1_1_gpio_b8_1aa7fd8ba758d9f044cb591712366ca7eb" kindref="member">port</ref>)</initializer>
        <briefdescription>
<para>Port Number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="56" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_b8_1a110777197fd67f3a6bc9f9e1a381fb23" prot="protected" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioB8::af_id</definition>
        <argsstring></argsstring>
        <name>af_id</name>
        <initializer>= <ref refid="classmodm_1_1platform_1_1_gpio_b8_1a36e314c241ab5f1c5c87e205c6281f69" kindref="member">pin</ref> / 8</initializer>
        <briefdescription>
<para>Alternate Function register id. 0 for pin 0-7. 1 for pin 8-15. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="58" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_b8_1a9f0900beb88838d605c173680c9b1e48" prot="protected" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t modm::platform::GpioB8::af_offset</definition>
        <argsstring></argsstring>
        <name>af_offset</name>
        <initializer>= (<ref refid="classmodm_1_1platform_1_1_gpio_b8_1a36e314c241ab5f1c5c87e205c6281f69" kindref="member">pin</ref> * 4) % 32</initializer>
        <briefdescription>
<para>Alternate Function offset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="60" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_b8_1ab7c27609b3bb915671d5158b1cf2f5fa" prot="protected" static="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t modm::platform::GpioB8::af_mask</definition>
        <argsstring></argsstring>
        <name>af_mask</name>
        <initializer>= 0xf &lt;&lt; af_offset</initializer>
        <briefdescription>
<para>Alternate Function register mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="62" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_b8_1a238f6447052717d989d41e11d14caebd" prot="protected" static="yes" mutable="no">
        <type>constexpr IRQn_Type</type>
        <definition>constexpr IRQn_Type modm::platform::GpioB8::ExternalInterruptIRQ</definition>
        <argsstring></argsstring>
        <name>ExternalInterruptIRQ</name>
        <initializer>= EXTI9_5_IRQn</initializer>
        <briefdescription>
<para>ExternalInterruptIRQ. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="64" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmodm_1_1platform_1_1_gpio_b8_1a9fdbf9f47f5f5eb57f6cbe1f81faff50" prot="private" static="yes" mutable="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespacemodm_1_1platform_1a9a75ca82fea26cd4f4948f93899d0f55" kindref="member">Peripheral</ref></type>
            <declname>peripheral</declname>
            <defname>peripheral</defname>
          </param>
        </templateparamlist>
        <type>constexpr int8_t</type>
        <definition>constexpr int8_t modm::platform::GpioB8::AdcChannel</definition>
        <argsstring></argsstring>
        <name>AdcChannel</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="237" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a4498f43a8155b1c744cf442d7c79fe68" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::setOutput</definition>
        <argsstring>()</argsstring>
        <name>setOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="80" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a527df031032a59a8b2b7408ec80b8e77" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::setOutput</definition>
        <argsstring>(bool status)</argsstring>
        <name>setOutput</name>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="81" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a4c27cb06d3fa7a71e9bef68091f48dd1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::set</definition>
        <argsstring>()</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="82" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a88efe3d5e5e786253d60a63814870d7f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::set</definition>
        <argsstring>(bool status)</argsstring>
        <name>set</name>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="83" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a4699e85f64b8a6d85c4fb4822a8fdcb3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="84" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a39e5f3b179af94f67742e7a2b136174f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::toggle</definition>
        <argsstring>()</argsstring>
        <name>toggle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="85" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a62368f1e85bbe0aa55c201831dbbe633" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioB8::isSet</definition>
        <argsstring>()</argsstring>
        <name>isSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="89" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a0ffa00d1a263bd503b63e17e108456f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::configure</definition>
        <argsstring>(OutputType type, OutputSpeed speed=OutputSpeed::MHz50)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" kindref="member">OutputType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" kindref="member">OutputSpeed</ref></type>
          <declname>speed</declname>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09a291c765b56a54ef8453ee3aceef60ed3" kindref="member">OutputSpeed::MHz50</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="91" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1ae03ec68b476faf3931583f2ba079d770" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::setOutput</definition>
        <argsstring>(OutputType type, OutputSpeed speed=OutputSpeed::MHz50)</argsstring>
        <name>setOutput</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" kindref="member">OutputType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" kindref="member">OutputSpeed</ref></type>
          <declname>speed</declname>
          <defval><ref refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09a291c765b56a54ef8453ee3aceef60ed3" kindref="member">OutputSpeed::MHz50</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="92" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a648a6f661993f5612ccde510377b89bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::setInput</definition>
        <argsstring>()</argsstring>
        <name>setInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="95" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a492f1962f1f77cddf5676098653a4131" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioB8::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="96" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1abcd95e5ed961029dbb612e0de05db148" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::configure</definition>
        <argsstring>(InputType type)</argsstring>
        <name>configure</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">InputType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="98" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a26bb8909602b13551abe44f6aaec858e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::setInput</definition>
        <argsstring>(InputType type)</argsstring>
        <name>setInput</name>
        <param>
          <type><ref refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" kindref="member">InputType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="99" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1aa791f6f5498c1fcda550f525c56aede4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::enableExternalInterrupt</definition>
        <argsstring>()</argsstring>
        <name>enableExternalInterrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="104" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="104" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1aca46fa26c45a6a56ab3f083de8b74c01" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::disableExternalInterrupt</definition>
        <argsstring>()</argsstring>
        <name>disableExternalInterrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="119" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a5d806ac4e900806b8eeaf6934ec5a9f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::enableExternalInterruptVector</definition>
        <argsstring>(const uint32_t priority)</argsstring>
        <name>enableExternalInterruptVector</name>
        <param>
          <type>const uint32_t</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="120" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a2576581036371ab254fe49a636c80cd9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::disableExternalInterruptVector</definition>
        <argsstring>()</argsstring>
        <name>disableExternalInterruptVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="125" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a1113545dcaee4e0d7c7cf6dc2812f5ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::setInputTrigger</definition>
        <argsstring>(const InputTrigger trigger)</argsstring>
        <name>setInputTrigger</name>
        <param>
          <type>const <ref refid="structmodm_1_1platform_1_1_gpio_1a5f683814888fa5a34c2bcf2db9b803a5" kindref="member">InputTrigger</ref></type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="126" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="126" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a44f98cee5cef6051bea8fba93f89f88e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::GpioB8::getExternalInterruptFlag</definition>
        <argsstring>()</argsstring>
        <name>getExternalInterruptFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="144" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1ae2975ee825b6a682f5dd76b61b4aae0c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::acknowledgeExternalInterruptFlag</definition>
        <argsstring>()</argsstring>
        <name>acknowledgeExternalInterruptFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="145" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a8b58e54ce57ac0356628159452a3a4ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" kindref="member">Direction</ref></type>
        <definition>static Direction modm::platform::GpioB8::getDirection</definition>
        <argsstring>()</argsstring>
        <name>getDirection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="148" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="148" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1aca4f3a97fa6a44c4149fbe8eac07e7b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="157" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_gpio_b8_1a3129a0468542eadef902f12c87613ad3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::GpioB8::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="158" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="158" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>IO class for Pin B8 </para>    </detaileddescription>
    <inheritancegraph>
      <node id="768">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
      <node id="769">
        <label>modm::GpioIO</label>
        <link refid="classmodm_1_1_gpio_i_o"/>
        <childnode refid="770" relation="public-inheritance">
        </childnode>
        <childnode refid="772" relation="public-inheritance">
        </childnode>
      </node>
      <node id="767">
        <label>modm::platform::GpioB8</label>
        <link refid="classmodm_1_1platform_1_1_gpio_b8"/>
        <childnode refid="768" relation="public-inheritance">
        </childnode>
        <childnode refid="769" relation="public-inheritance">
        </childnode>
      </node>
      <node id="772">
        <label>modm::GpioInput</label>
        <link refid="classmodm_1_1_gpio_input"/>
        <childnode refid="771" relation="public-inheritance">
        </childnode>
      </node>
      <node id="770">
        <label>modm::GpioOutput</label>
        <link refid="classmodm_1_1_gpio_output"/>
        <childnode refid="771" relation="public-inheritance">
        </childnode>
      </node>
      <node id="771">
        <label>modm::Gpio</label>
        <link refid="structmodm_1_1_gpio"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="774">
        <label>modm::platform::Gpio</label>
        <link refid="structmodm_1_1platform_1_1_gpio"/>
      </node>
      <node id="775">
        <label>modm::GpioIO</label>
        <link refid="classmodm_1_1_gpio_i_o"/>
        <childnode refid="776" relation="public-inheritance">
        </childnode>
        <childnode refid="778" relation="public-inheritance">
        </childnode>
      </node>
      <node id="773">
        <label>modm::platform::GpioB8</label>
        <link refid="classmodm_1_1platform_1_1_gpio_b8"/>
        <childnode refid="774" relation="public-inheritance">
        </childnode>
        <childnode refid="775" relation="public-inheritance">
        </childnode>
      </node>
      <node id="778">
        <label>modm::GpioInput</label>
        <link refid="classmodm_1_1_gpio_input"/>
        <childnode refid="777" relation="public-inheritance">
        </childnode>
      </node>
      <node id="776">
        <label>modm::GpioOutput</label>
        <link refid="classmodm_1_1_gpio_output"/>
        <childnode refid="777" relation="public-inheritance">
        </childnode>
      </node>
      <node id="777">
        <label>modm::Gpio</label>
        <link refid="structmodm_1_1_gpio"/>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" line="34" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/gpio/gpio_B8.hpp" bodystart="33" bodyend="238"/>
    <listofallmembers>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1ae2975ee825b6a682f5dd76b61b4aae0c" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>acknowledgeExternalInterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a6f211b1a6fb32c7354ec26cb136397d7" prot="private" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Adc</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a408d9d1af47860a0d441db9e682a0286" prot="private" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Adc1</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1aa23e1a089c072f958a021d20e3999d1d" prot="private" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Adc2</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a5ed7caa4b9cdb2a9e493c0d14f0969ab" prot="private" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Adc3</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a448248fc7a1c51bccc4b77743edcb11f" prot="private" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Adc4</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a9fdbf9f47f5f5eb57f6cbe1f81faff50" prot="private" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>AdcChannel</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a110777197fd67f3a6bc9f9e1a381fb23" prot="protected" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>af_id</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1ab7c27609b3bb915671d5158b1cf2f5fa" prot="protected" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>af_mask</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a9f0900beb88838d605c173680c9b1e48" prot="protected" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>af_offset</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a89c452062765d4bffa7f3a8233028651" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>BitBang</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a94ebb502d3879682002dfe3dfbef1140" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Ch1</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a284a537844773369d73dd153233d32fe" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Ch3</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a0ffa00d1a263bd503b63e17e108456f5" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>configure</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1abcd95e5ed961029dbb612e0de05db148" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>configure</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1ad304937c32ad2872e1edd804bb9e4752" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>D4</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1aef5542e8ab4106ca810808dcb26cab3d" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>D6</name></member>
      <member refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioB8</scope><name>Direction</name></member>
      <member refid="structmodm_1_1_gpio_1a5c167852e8d86eded53f554eabace79b" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioB8</scope><name>Direction</name></member>
      <member refid="classmodm_1_1_gpio_i_o_1ac3e00d004cfc8c6268085b4468e22684" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>direction</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1aca46fa26c45a6a56ab3f083de8b74c01" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>disableExternalInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a2576581036371ab254fe49a636c80cd9" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>disableExternalInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a3129a0468542eadef902f12c87613ad3" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>disconnect</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1aa791f6f5498c1fcda550f525c56aede4" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>enableExternalInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a5d806ac4e900806b8eeaf6934ec5a9f0" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>enableExternalInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a75db0e550fb7561e4d4544f37b87cf68" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Etr</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a238f6447052717d989d41e11d14caebd" prot="protected" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>ExternalInterruptIRQ</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a8b58e54ce57ac0356628159452a3a4ee" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>getDirection</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a44f98cee5cef6051bea8fba93f89f88e" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>getExternalInterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a4e7835d7980cbc422c366c10fdbc1f77" prot="private" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>GpioSet</name></member>
      <member refid="structmodm_1_1_gpio_1a17454096f07c8ae16d603ff46ad53c6a" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioB8</scope><name>High</name></member>
      <member refid="structmodm_1_1_gpio_1a17454096f07c8ae16d603ff46ad53c6a" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioB8</scope><name>High</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a00cb1246a15d60f28c16a9be96b51d8f" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Input</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a5f683814888fa5a34c2bcf2db9b803a5" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>InputTrigger</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1aadfb2c40d2066e11c0e176332c5a9d6d" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>InputType</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a2fb360945f0b6e93e0bd914db71267a6" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>IO</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a3034059403d2a3a712dba7903fa79231" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>isInverted</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a62368f1e85bbe0aa55c201831dbbe633" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>isSet</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1aca4f3a97fa6a44c4149fbe8eac07e7b3" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>lock</name></member>
      <member refid="structmodm_1_1_gpio_1a85ddb071ba8af1c2b89b4e8c079ea58f" prot="public" virt="non-virtual" ambiguityscope="modm::"><scope>modm::platform::GpioB8</scope><name>Low</name></member>
      <member refid="structmodm_1_1_gpio_1a85ddb071ba8af1c2b89b4e8c079ea58f" prot="public" virt="non-virtual" ambiguityscope="modm::GpioInput::"><scope>modm::platform::GpioB8</scope><name>Low</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a45bdd0f6630dde782a3394362e17de09" prot="protected" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>mask</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a818ff73f2ef5595ee17fa4ae8a94d839" prot="protected" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>mask2</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a48cfc3417fefd05d092b9fbb1626acae" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Output</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ab7da9c5cdb55f0fad1955686331a5a09" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>OutputSpeed</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1ad68170d2e3d45721421375623c8f5a61" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>OutputType</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a36e314c241ab5f1c5c87e205c6281f69" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>pin</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a46e5cfa7ed6b82b892cd027e9fe8885f" prot="private" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>PinSet</name></member>
      <member refid="structmodm_1_1platform_1_1_gpio_1a9a07d4a7c6f41489fa3bf81b98e8a19b" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Port</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1aa7fd8ba758d9f044cb591712366ca7eb" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>port</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a1a094de04c4bdc0f0630c2d3554b3dd6" prot="protected" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>port_nr</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a492f1962f1f77cddf5676098653a4131" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>read</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a4699e85f64b8a6d85c4fb4822a8fdcb3" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>reset</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a53d3313b49db27682aba72354bfc4900" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Rx</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a50e9919e5668d8c472d12f61d1da0483" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Scl</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a4c27cb06d3fa7a71e9bef68091f48dd1" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a88efe3d5e5e786253d60a63814870d7f" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>set</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a648a6f661993f5612ccde510377b89bd" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a26bb8909602b13551abe44f6aaec858e" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>setInput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a1113545dcaee4e0d7c7cf6dc2812f5ad" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>setInputTrigger</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a4498f43a8155b1c744cf442d7c79fe68" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a527df031032a59a8b2b7408ec80b8e77" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1ae03ec68b476faf3931583f2ba079d770" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>setOutput</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a39e5f3b179af94f67742e7a2b136174f" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>toggle</name></member>
      <member refid="classmodm_1_1platform_1_1_gpio_b8_1a9d91751bff4730e274b06ec5b4041c1f" prot="public" virt="non-virtual"><scope>modm::platform::GpioB8</scope><name>Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
