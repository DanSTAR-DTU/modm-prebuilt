<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_dynamic_array_1_1const__iterator" kind="class" language="C++" prot="public">
    <compoundname>modm::DynamicArray::const_iterator</compoundname>
    <includes refid="dynamic__array_8hpp" local="no">modm/container/dynamic_array.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmodm_1_1_dynamic_array_1_1const__iterator_1a845f49ed7330a208136c47af630fe8d3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class DynamicArray</definition>
        <argsstring></argsstring>
        <name>DynamicArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="293" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1_dynamic_array_1_1const__iterator_1aaa8694bb493dee0b910518dd746be6c1" prot="private" static="no" mutable="no">
        <type>const <ref refid="classmodm_1_1_dynamic_array" kindref="compound">DynamicArray</ref> *</type>
        <definition>const DynamicArray* modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="323" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1_dynamic_array_1_1const__iterator_1a253974f8c9e81470cb3d9a3f2577f0a9" prot="private" static="no" mutable="no">
        <type><ref refid="classmodm_1_1_dynamic_array_1a0f4abafca97727852b8328acd3222c9b" kindref="member">SizeType</ref></type>
        <definition>SizeType modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="324" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" bodystart="324" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_dynamic_array_1_1const__iterator_1a75194b4190604c1703939d035fa786c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::const_iterator</definition>
        <argsstring>()</argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_dynamic_array_1_1const__iterator_1a42b5b4db8d108ad707e8ec2accb9b686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::const_iterator</definition>
        <argsstring>(const iterator &amp;other)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const <ref refid="classmodm_1_1_dynamic_array_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Used to convert a normal iterator to a const iterator. The other way is not possible. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_dynamic_array_1_1const__iterator_1a9ecbd3b70d926229f016db3198555767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::const_iterator</definition>
        <argsstring>(const const_iterator &amp;other)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const <ref refid="classmodm_1_1_dynamic_array_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_dynamic_array_1_1const__iterator_1ad02c11a0d462de5a3f7fda7c125852ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_dynamic_array_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::operator=</definition>
        <argsstring>(const const_iterator &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_dynamic_array_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_dynamic_array_1_1const__iterator_1abadc1d2365c95c20347655bb733c63ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_dynamic_array_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_dynamic_array_1_1const__iterator_1ac0f3c31ddaf2fab1630c5488b5d3a280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_dynamic_array_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_dynamic_array_1_1const__iterator_1a1c447862d783ff7ea18ddb5d2ef89cd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::operator==</definition>
        <argsstring>(const const_iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmodm_1_1_dynamic_array_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_dynamic_array_1_1const__iterator_1a5e249bf544d4f6e7067d85c1c64439b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::operator!=</definition>
        <argsstring>(const const_iterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_dynamic_array_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_dynamic_array_1_1const__iterator_1a27d83be3a9f1c79281cc060bb29ffd07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_dynamic_array_1_1const__iterator_1a2f245fc58df2e7a636a0d1be88bcd96b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="318" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmodm_1_1_dynamic_array_1_1const__iterator_1acdd029e8983a0802dfbfb8983edceadf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::DynamicArray&lt; T, Allocator &gt;::const_iterator::const_iterator</definition>
        <argsstring>(const DynamicArray *parent, SizeType index)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const <ref refid="classmodm_1_1_dynamic_array" kindref="compound">DynamicArray</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="classmodm_1_1_dynamic_array_1a0f4abafca97727852b8328acd3222c9b" kindref="member">SizeType</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="321" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>forward const iterator </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" line="292" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/container/dynamic_array.hpp" bodystart="291" bodyend="325"/>
    <listofallmembers>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1a75194b4190604c1703939d035fa786c7" prot="public" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1a42b5b4db8d108ad707e8ec2accb9b686" prot="public" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1a9ecbd3b70d926229f016db3198555767" prot="public" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1acdd029e8983a0802dfbfb8983edceadf" prot="private" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1a845f49ed7330a208136c47af630fe8d3" prot="private" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>DynamicArray</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1a253974f8c9e81470cb3d9a3f2577f0a9" prot="private" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>index</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1a5e249bf544d4f6e7067d85c1c64439b5" prot="public" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>operator!=</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1a27d83be3a9f1c79281cc060bb29ffd07" prot="public" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>operator*</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1abadc1d2365c95c20347655bb733c63ac" prot="public" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>operator++</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1ac0f3c31ddaf2fab1630c5488b5d3a280" prot="public" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>operator--</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1a2f245fc58df2e7a636a0d1be88bcd96b" prot="public" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>operator-&gt;</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1ad02c11a0d462de5a3f7fda7c125852ca" prot="public" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>operator=</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1a1c447862d783ff7ea18ddb5d2ef89cd2" prot="public" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>operator==</name></member>
      <member refid="classmodm_1_1_dynamic_array_1_1const__iterator_1aaa8694bb493dee0b910518dd746be6c1" prot="private" virt="non-virtual"><scope>modm::DynamicArray::const_iterator</scope><name>parent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
