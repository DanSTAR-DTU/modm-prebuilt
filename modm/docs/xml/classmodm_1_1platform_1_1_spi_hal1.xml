<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1platform_1_1_spi_hal1" kind="class" language="C++" prot="public">
    <compoundname>modm::platform::SpiHal1</compoundname>
    <basecompoundref refid="classmodm_1_1platform_1_1_spi_base" prot="public" virt="non-virtual">modm::platform::SpiBase</basecompoundref>
    <includes refid="spi__hal__1_8hpp" local="no">modm/platform/spi/spi_hal_1.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1a35ba3fe2e801b4dc43ad86ab4d97f64c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::enable</definition>
        <argsstring>()</argsstring>
        <name>enable</name>
        <briefdescription>
<para>Enables the clock, resets the hardware and sets the SPE bit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1abf03ecd394a07de7249d04e71d10a57e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::disable</definition>
        <argsstring>()</argsstring>
        <name>disable</name>
        <briefdescription>
<para>Disables the hw module (by disabling its clock line) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1aaa2016bd2e25a7d51495f0a0effb018b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::initialize</definition>
        <argsstring>(Prescaler prescaler, MasterSelection masterSelection=MasterSelection::Master, DataMode dataMode=DataMode::Mode0, DataOrder dataOrder=DataOrder::MsbFirst, DataSize dataSize=DataSize::Bit8)</argsstring>
        <name>initialize</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_spi_base_1a6fbd2186a894217e3e6bea2afba3a2e5" kindref="member">Prescaler</ref></type>
          <declname>prescaler</declname>
        </param>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_spi_base_1a6fb6949d12a2e2d7e7edde26946b3621" kindref="member">MasterSelection</ref></type>
          <declname>masterSelection</declname>
          <defval><ref refid="classmodm_1_1platform_1_1_spi_base_1a6fb6949d12a2e2d7e7edde26946b3621af03bde11d261f185cbacfa32c1c6538c" kindref="member">MasterSelection::Master</ref></defval>
        </param>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_spi_base_1a3f5ae7a8cadae3146e9d1be46cc927b5" kindref="member">DataMode</ref></type>
          <declname>dataMode</declname>
          <defval><ref refid="classmodm_1_1platform_1_1_spi_base_1a3f5ae7a8cadae3146e9d1be46cc927b5a315436bae0e85636381fc939db06aee5" kindref="member">DataMode::Mode0</ref></defval>
        </param>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_spi_base_1ac950829992e41aa965a3ee4b31f0bebe" kindref="member">DataOrder</ref></type>
          <declname>dataOrder</declname>
          <defval><ref refid="classmodm_1_1platform_1_1_spi_base_1ac950829992e41aa965a3ee4b31f0bebeaee850a31af8a5060a68542cb34339c50" kindref="member">DataOrder::MsbFirst</ref></defval>
        </param>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_spi_base_1a7248733c75aa675204924170c888308b" kindref="member">DataSize</ref></type>
          <declname>dataSize</declname>
          <defval><ref refid="classmodm_1_1platform_1_1_spi_base_1a7248733c75aa675204924170c888308ba17434210d4ad0740bc77b2b161241758" kindref="member">DataSize::Bit8</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize <ref refid="structmodm_1_1_spi" kindref="compound">Spi</ref> Peripheral</para><para>Enables clocks, the UART peripheral Sets baudrate and parity. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1a8be80428280d226112edf7d61a09430b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::setDataMode</definition>
        <argsstring>(DataMode dataMode)</argsstring>
        <name>setDataMode</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_spi_base_1a3f5ae7a8cadae3146e9d1be46cc927b5" kindref="member">DataMode</ref></type>
          <declname>dataMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1a39c9fe063681c5759d84adf84c6573e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::setDataOrder</definition>
        <argsstring>(DataOrder dataOrder)</argsstring>
        <name>setDataOrder</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_spi_base_1ac950829992e41aa965a3ee4b31f0bebe" kindref="member">DataOrder</ref></type>
          <declname>dataOrder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1a69833bac9f5c2705e52fb9aed012b7d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::setDataSize</definition>
        <argsstring>(DataSize dataSize)</argsstring>
        <name>setDataSize</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_spi_base_1a7248733c75aa675204924170c888308b" kindref="member">DataSize</ref></type>
          <declname>dataSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1a63638ab66d5efee72c4839ffbeba7876" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::setMasterSelection</definition>
        <argsstring>(MasterSelection masterSelection)</argsstring>
        <name>setMasterSelection</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_spi_base_1a6fb6949d12a2e2d7e7edde26946b3621" kindref="member">MasterSelection</ref></type>
          <declname>masterSelection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1a070820ad4ffab6d89c24264f4ee1d1e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::SpiHal1::isReceiveRegisterNotEmpty</definition>
        <argsstring>()</argsstring>
        <name>isReceiveRegisterNotEmpty</name>
        <briefdescription>
<para>Returns true if data has been received. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1a3895c1acad69355c2fc6d3151db286dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modm::platform::SpiHal1::isTransmitRegisterEmpty</definition>
        <argsstring>()</argsstring>
        <name>isTransmitRegisterEmpty</name>
        <briefdescription>
<para>Returns true if data can be written. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1af60043e9f954c8e6103ecec0799d9c8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::write</definition>
        <argsstring>(uint16_t data)</argsstring>
        <name>write</name>
        <param>
          <type>uint16_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write up to 16 Bit to the data register</para><para><simplesect kind="warning"><para>This method does NOT do any sanity checks!! It is your responsibility to check if the register is empty! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1ab89bd1ca21550258953ebc3ca0c17152" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::write</definition>
        <argsstring>(uint8_t data)</argsstring>
        <name>write</name>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write 8 Bit to the data register</para><para><simplesect kind="warning"><para>This method does NOT do any sanity checks!! It is your responsibility to check if the register is empty! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1a4f8519249d60c65f1ed50386efc642b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::read</definition>
        <argsstring>(uint8_t &amp;data)</argsstring>
        <name>read</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the value of the data register</para><para><simplesect kind="warning"><para>This method does NOT do any sanity checks!! It is your responsibility to check if the register contains something useful! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1af8e0a380c370357fb1282d11d53ff164" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::read</definition>
        <argsstring>(uint16_t &amp;data)</argsstring>
        <name>read</name>
        <param>
          <type>uint16_t &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the value of the data register</para><para><simplesect kind="warning"><para>This method does NOT do any sanity checks!! It is your responsibility to check if the register contains something useful! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1aca0e9689224a2a17fddaecd24acd6445" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::enableInterruptVector</definition>
        <argsstring>(bool enable, uint32_t priority)</argsstring>
        <name>enableInterruptVector</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1a1c7d1a79e6b94d849a2af66bb2dec68f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::enableInterrupt</definition>
        <argsstring>(Interrupt_t interrupt)</argsstring>
        <name>enableInterrupt</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_spi_base_1aaa9f4b6181a8b53993374ce5178bbf2b" kindref="member">Interrupt_t</ref></type>
          <declname>interrupt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1acb1a80893057d4b427efa6cd09dabad0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::disableInterrupt</definition>
        <argsstring>(Interrupt_t interrupt)</argsstring>
        <name>disableInterrupt</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_spi_base_1aaa9f4b6181a8b53993374ce5178bbf2b" kindref="member">Interrupt_t</ref></type>
          <declname>interrupt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1a96fb72815de45e8289962f386b2f851b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1platform_1_1_spi_base_1aa7fe72f6ca5a2e69aa94f2ff019caf5a" kindref="member">InterruptFlag_t</ref></type>
        <definition>static InterruptFlag_t modm::platform::SpiHal1::getInterruptFlags</definition>
        <argsstring>()</argsstring>
        <name>getInterruptFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1platform_1_1_spi_hal1_1a425f3ebe2ab8e9ff7ff14d206b195fb2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modm::platform::SpiHal1::acknowledgeInterruptFlag</definition>
        <argsstring>(InterruptFlag_t flags)</argsstring>
        <name>acknowledgeInterruptFlag</name>
        <param>
          <type><ref refid="classmodm_1_1platform_1_1_spi_base_1aa7fe72f6ca5a2e69aa94f2ff019caf5a" kindref="member">InterruptFlag_t</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Not all InterruptFlags can be cleared this way. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="136" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Serial peripheral interface (SPI1)</para><para>Very basic implementation that exposes more hardware features than the regular <ref refid="structmodm_1_1_spi" kindref="compound">Spi</ref> classes.</para><para><simplesect kind="author"><para>Kevin Laeufer </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1532">
        <label>modm::platform::SpiBase</label>
        <link refid="classmodm_1_1platform_1_1_spi_base"/>
      </node>
      <node id="1531">
        <label>modm::platform::SpiHal1</label>
        <link refid="classmodm_1_1platform_1_1_spi_hal1"/>
        <childnode refid="1532" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1534">
        <label>modm::platform::SpiBase</label>
        <link refid="classmodm_1_1platform_1_1_spi_base"/>
      </node>
      <node id="1533">
        <label>modm::platform::SpiHal1</label>
        <link refid="classmodm_1_1platform_1_1_spi_hal1"/>
        <childnode refid="1534" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" line="35" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/platform/spi/spi_hal_1.hpp" bodystart="34" bodyend="137"/>
    <listofallmembers>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1a425f3ebe2ab8e9ff7ff14d206b195fb2" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>acknowledgeInterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_base_1a3f5ae7a8cadae3146e9d1be46cc927b5" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>DataMode</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_base_1ac950829992e41aa965a3ee4b31f0bebe" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>DataOrder</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_base_1a7248733c75aa675204924170c888308b" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>DataSize</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1abf03ecd394a07de7249d04e71d10a57e" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>disable</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1acb1a80893057d4b427efa6cd09dabad0" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>disableInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1a35ba3fe2e801b4dc43ad86ab4d97f64c" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>enable</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1a1c7d1a79e6b94d849a2af66bb2dec68f" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>enableInterrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1aca0e9689224a2a17fddaecd24acd6445" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>enableInterruptVector</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1a96fb72815de45e8289962f386b2f851b" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>getInterruptFlags</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1aaa2016bd2e25a7d51495f0a0effb018b" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>initialize</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_base_1a745714247fefafd092aa814b9b28b89c" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>Interrupt</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_base_1aaa9f4b6181a8b53993374ce5178bbf2b" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>Interrupt_t</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_base_1a1d62b5dfd3ac6e6b9d4612650fa4075b" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>InterruptFlag</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_base_1aa7fe72f6ca5a2e69aa94f2ff019caf5a" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>InterruptFlag_t</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1a070820ad4ffab6d89c24264f4ee1d1e3" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>isReceiveRegisterNotEmpty</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1a3895c1acad69355c2fc6d3151db286dd" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>isTransmitRegisterEmpty</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_base_1a6fb6949d12a2e2d7e7edde26946b3621" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>MasterSelection</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_base_1a6fbd2186a894217e3e6bea2afba3a2e5" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>Prescaler</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1a4f8519249d60c65f1ed50386efc642b4" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>read</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1af8e0a380c370357fb1282d11d53ff164" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>read</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1a8be80428280d226112edf7d61a09430b" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>setDataMode</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1a39c9fe063681c5759d84adf84c6573e5" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>setDataOrder</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1a69833bac9f5c2705e52fb9aed012b7d0" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>setDataSize</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1a63638ab66d5efee72c4839ffbeba7876" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>setMasterSelection</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1af60043e9f954c8e6103ecec0799d9c8b" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>write</name></member>
      <member refid="classmodm_1_1platform_1_1_spi_hal1_1ab89bd1ca21550258953ebc3ca0c17152" prot="public" virt="non-virtual"><scope>modm::platform::SpiHal1</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
