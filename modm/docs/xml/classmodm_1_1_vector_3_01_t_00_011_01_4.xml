<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1_vector_3_01_t_00_011_01_4" kind="class" language="C++" prot="public">
    <compoundname>modm::Vector&lt; T, 1 &gt;</compoundname>
    <includes refid="vector1_8hpp" local="no">modm/math/geometry/vector1.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a59778f7b90588de8f519d7cff1c3797e" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T modm::Vector&lt; T, 1 &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="94" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1aeb4f03daba056384c06c137c1563045a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 1 &gt;::Vector</definition>
        <argsstring>()</argsstring>
        <name>Vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1abbe316b3ceae616ea1307415a36bff6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 1 &gt;::Vector</definition>
        <argsstring>(T inX)</argsstring>
        <name>Vector</name>
        <param>
          <type>T</type>
          <declname>inX</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1af46a779de47d0583e53753f0d0cb75cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 1 &gt;::Vector</definition>
        <argsstring>(const Matrix&lt; T, 1, 1 &gt; &amp;rhs)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, 1, 1 &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a814b9b0146a8ffc80f3de1114fd26ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modm::Vector&lt; T, 1 &gt;::Vector</definition>
        <argsstring>(const Vector &amp;rhs)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a88beb19421b1929113736c09e8d717f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Vector&lt; T, 1 &gt;::set</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>set</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a39230e8cf1956690c3def54bd2bc17ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::Vector&lt; T, 1 &gt;::setX</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>setX</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a035d49050a344f67961f0f4ea291ca52" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Vector&lt; T, 1 &gt;::getX</definition>
        <argsstring>() const</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a50f470ce370444284e092c77c812bb7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; modm::Vector&lt; T, 1 &gt;::operator=</definition>
        <argsstring>(const Vector &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a6aaddc21cd1de384f49312124aac0318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; modm::Vector&lt; T, 1 &gt;::operator=</definition>
        <argsstring>(const Matrix&lt; T, 1, 1 &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, 1, 1 &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a523ab8c1f1f54d92d1c25a845686576a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 1 &gt;::operator==</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a5c0df769b4a9a16d13d04545fd986bc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 1 &gt;::operator!=</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a51f76ca61d4656fe2e2f2a18cdad01a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 1 &gt;::operator&lt;</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a9b42c1b2a8486a82ef645fc489fb76c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 1 &gt;::operator&lt;=</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a69b1c5833385fb26ef7a5c997a65242f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 1 &gt;::operator&gt;</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a1a9ed9f5b723dd92482f1601faffbf20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 1 &gt;::operator&gt;=</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a821c7fee4a4a8978a467ac39a7c8f387" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; modm::Vector&lt; T, 1 &gt;::operator[]</definition>
        <argsstring>(uint8_t index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a21c0adb20524cfbed4234493c6cacb96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; modm::Vector&lt; T, 1 &gt;::operator[]</definition>
        <argsstring>(uint8_t index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1afd62c0d057d489cf8e2e21b68be6ebdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T *</type>
        <definition>T* modm::Vector&lt; T, 1 &gt;::ptr</definition>
        <argsstring>()</argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1ae302b2f80818057f509f21d3ffec4a5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* modm::Vector&lt; T, 1 &gt;::ptr</definition>
        <argsstring>() const</argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a948c1f0902d669abd67b0661c14fd201" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector modm::Vector&lt; T, 1 &gt;::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a192fc6805ec0ec5db8b4ebe520477a9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector modm::Vector&lt; T, 1 &gt;::operator+</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a74aef375414464a4801f0ad9059cbff4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector modm::Vector&lt; T, 1 &gt;::operator-</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1adfbe997fa943d76a98c85dda98c7c113" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T modm::Vector&lt; T, 1 &gt;::operator*</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1aea64e185f79860ef81551de1673856b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector modm::Vector&lt; T, 1 &gt;::operator*</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1aafad58a4a1ed64e2698264922ed04156" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector modm::Vector&lt; T, 1 &gt;::operator/</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1aa3c49d7694da07279d3b9bb94230162d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; modm::Vector&lt; T, 1 &gt;::operator+=</definition>
        <argsstring>(const Vector &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1ae61e9ca0e40053682713916f519c4cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; modm::Vector&lt; T, 1 &gt;::operator-=</definition>
        <argsstring>(const Vector &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a177a25addff27b9b31c3b74ae3fa248a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; modm::Vector&lt; T, 1 &gt;::operator*=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a660a950b279a7f9839835dd9b45cf759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>Vector&amp; modm::Vector&lt; T, 1 &gt;::operator/=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a6998f5216fc5fde913d9d91ae5a73eb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T modm::Vector&lt; T, 1 &gt;::getLength</definition>
        <argsstring>() const</argsstring>
        <name>getLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a8b79b8f466d60c0db06d1fb538616c52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T modm::Vector&lt; T, 1 &gt;::getLengthSquared</definition>
        <argsstring>() const</argsstring>
        <name>getLengthSquared</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a2d6074eada8d65932b204a968e6ec621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, 1, 1 &gt; &amp;</type>
        <definition>Matrix&lt;T, 1, 1&gt;&amp; modm::Vector&lt; T, 1 &gt;::asMatrix</definition>
        <argsstring>()</argsstring>
        <name>asMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a5149916b72eecd477db33e5814e74871" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmodm_1_1_matrix" kindref="compound">Matrix</ref>&lt; T, 1, 1 &gt; &amp;</type>
        <definition>const Matrix&lt;T, 1, 1&gt;&amp; modm::Vector&lt; T, 1 &gt;::asMatrix</definition>
        <argsstring>() const</argsstring>
        <name>asMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a34a3b0d84281a42666f9492774dcc4a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 1 &gt;::hasNan</definition>
        <argsstring>() const</argsstring>
        <name>hasNan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1_vector_3_01_t_00_011_01_4_1a35636b2004ee55f94acb31d7c6fb9f99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modm::Vector&lt; T, 1 &gt;::hasInf</definition>
        <argsstring>() const</argsstring>
        <name>hasInf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="91" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for handling common vector operations (1D) </para>    </briefdescription>
    <detaileddescription>
<para>Adapted from the implementation of Gaspard Petit (<ulink url="mailto:gaspardpetit@gmail.com">gaspardpetit@gmail.com</ulink>).</para><para><simplesect kind="see"><para>&lt;a href&quot;http://www-etud.iro.umontreal.ca/~petitg/cpp/point.html&quot;&gt;Homepage</para></simplesect>
<simplesect kind="author"><para>Niklas Hauser </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="1817">
        <label>T</label>
      </node>
      <node id="1816">
        <label>modm::Vector&lt; T, 1 &gt;</label>
        <link refid="classmodm_1_1_vector_3_01_t_00_011_01_4"/>
        <childnode refid="1817" relation="usage">
          <edgelabel>x</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" line="37" column="1" bodyfile="/home/nicolai/Danstar/software-dolken/modm-prebuilt/modm/src/modm/math/geometry/vector1.hpp" bodystart="36" bodyend="102"/>
    <listofallmembers>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a2d6074eada8d65932b204a968e6ec621" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>asMatrix</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a5149916b72eecd477db33e5814e74871" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>asMatrix</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a6998f5216fc5fde913d9d91ae5a73eb5" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>getLength</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a8b79b8f466d60c0db06d1fb538616c52" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>getLengthSquared</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a035d49050a344f67961f0f4ea291ca52" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>getX</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a35636b2004ee55f94acb31d7c6fb9f99" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>hasInf</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a34a3b0d84281a42666f9492774dcc4a8" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>hasNan</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a5c0df769b4a9a16d13d04545fd986bc8" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator!=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1adfbe997fa943d76a98c85dda98c7c113" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator*</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1aea64e185f79860ef81551de1673856b5" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator*</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a177a25addff27b9b31c3b74ae3fa248a" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator*=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a192fc6805ec0ec5db8b4ebe520477a9e" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator+</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1aa3c49d7694da07279d3b9bb94230162d" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator+=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a948c1f0902d669abd67b0661c14fd201" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator-</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a74aef375414464a4801f0ad9059cbff4" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator-</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1ae61e9ca0e40053682713916f519c4cfe" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator-=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1aafad58a4a1ed64e2698264922ed04156" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator/</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a660a950b279a7f9839835dd9b45cf759" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator/=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a51f76ca61d4656fe2e2f2a18cdad01a2" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator&lt;</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a9b42c1b2a8486a82ef645fc489fb76c6" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator&lt;=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a50f470ce370444284e092c77c812bb7d" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a6aaddc21cd1de384f49312124aac0318" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a523ab8c1f1f54d92d1c25a845686576a" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator==</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a69b1c5833385fb26ef7a5c997a65242f" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator&gt;</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a1a9ed9f5b723dd92482f1601faffbf20" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator&gt;=</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a821c7fee4a4a8978a467ac39a7c8f387" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator[]</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a21c0adb20524cfbed4234493c6cacb96" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>operator[]</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1afd62c0d057d489cf8e2e21b68be6ebdd" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>ptr</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1ae302b2f80818057f509f21d3ffec4a5c" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>ptr</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a88beb19421b1929113736c09e8d717f2" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>set</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a39230e8cf1956690c3def54bd2bc17ef" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>setX</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1aeb4f03daba056384c06c137c1563045a" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1abbe316b3ceae616ea1307415a36bff6e" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1af46a779de47d0583e53753f0d0cb75cf" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a814b9b0146a8ffc80f3de1114fd26ac4" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>Vector</name></member>
      <member refid="classmodm_1_1_vector_3_01_t_00_011_01_4_1a59778f7b90588de8f519d7cff1c3797e" prot="public" virt="non-virtual"><scope>modm::Vector&lt; T, 1 &gt;</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
