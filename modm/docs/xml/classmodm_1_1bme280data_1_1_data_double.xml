<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmodm_1_1bme280data_1_1_data_double" kind="class" language="C++" prot="public">
    <compoundname>modm::bme280data::DataDouble</compoundname>
    <basecompoundref refid="structmodm_1_1bme280data_1_1_data_base" prot="public" virt="non-virtual">modm::bme280data::DataBase</basecompoundref>
    <includes refid="bme280__data_8hpp" local="no">modm/driver/pressure/bme280_data.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmodm_1_1bme280data_1_1_data_double_1aac1f00ecd2a380cdbf5c5c17c0216a20" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double modm::bme280data::DataDouble::calibratedTemperatureDouble</definition>
        <argsstring></argsstring>
        <name>calibratedTemperatureDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="241" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1bme280data_1_1_data_double_1afa7f21e495319a2279b5a408138ff5da" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double modm::bme280data::DataDouble::calibratedPressureDouble</definition>
        <argsstring></argsstring>
        <name>calibratedPressureDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="244" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1bme280data_1_1_data_double_1acb5d5b69a96a4f366a00315f5220ecdb" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double modm::bme280data::DataDouble::calibratedHumidityDouble</definition>
        <argsstring></argsstring>
        <name>calibratedHumidityDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="247" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmodm_1_1bme280data_1_1_data_double_1ae21781db23074ad4e5e006843faf2031" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double modm::bme280data::DataDouble::t_fine</definition>
        <argsstring></argsstring>
        <name>t_fine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="250" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmodm_1_1bme280data_1_1_data_double_1aeee0fe0ecb89dda6eba2161fdde4f581" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>modm::bme280data::DataDouble::DataDouble</definition>
        <argsstring>()</argsstring>
        <name>DataDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="209" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data_impl_double.hpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1bme280data_1_1_data_double_1a4bc97d81246111d106313e8735916f30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t modm::bme280data::DataDouble::getTemperature</definition>
        <argsstring>()</argsstring>
        <name>getTemperature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="212" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data_impl_double.hpp" bodystart="115" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1bme280data_1_1_data_double_1a12624d2e936ba2012f32d172044e1aea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::bme280data::DataDouble::getTemperature</definition>
        <argsstring>(int32_t &amp;temp)</argsstring>
        <name>getTemperature</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1bme280data_1_1_data_double_1a695951b5e0e1fcbcb66404c140d2c26a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::bme280data::DataDouble::getTemperature</definition>
        <argsstring>(float &amp;temp)</argsstring>
        <name>getTemperature</name>
        <param>
          <type>float &amp;</type>
          <declname>temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="218" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data_impl_double.hpp" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1bme280data_1_1_data_double_1a1ae98b984637dde398efdbf231bfd47b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::bme280data::DataDouble::getTemperature</definition>
        <argsstring>(double &amp;temp)</argsstring>
        <name>getTemperature</name>
        <param>
          <type>double &amp;</type>
          <declname>temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="221" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data_impl_double.hpp" bodystart="133" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1bme280data_1_1_data_double_1afb42768ce245af8ff51b42d8b85f37bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t modm::bme280data::DataDouble::getPressure</definition>
        <argsstring>()</argsstring>
        <name>getPressure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="224" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data_impl_double.hpp" bodystart="143" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1bme280data_1_1_data_double_1a92d3a1d37105358e0e3a06d93858d0c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t modm::bme280data::DataDouble::getHumidity</definition>
        <argsstring>()</argsstring>
        <name>getHumidity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="227" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classmodm_1_1bme280data_1_1_data_double_1a480ed576d710b707eca0e5160003e694" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::bme280data::DataDouble::calculateCalibratedTemperature</definition>
        <argsstring>()</argsstring>
        <name>calculateCalibratedTemperature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="231" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data_impl_double.hpp" bodystart="37" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1bme280data_1_1_data_double_1a5a44df2c82e293b3d68765a909d17f66" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::bme280data::DataDouble::calculateCalibratedPressure</definition>
        <argsstring>()</argsstring>
        <name>calculateCalibratedPressure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="234" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data_impl_double.hpp" bodystart="66" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classmodm_1_1bme280data_1_1_data_double_1a23fe80c17caec43eaad2406d0eaa9fcb" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void modm::bme280data::DataDouble::calculateCalibratedHumidity</definition>
        <argsstring>()</argsstring>
        <name>calculateCalibratedHumidity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="237" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="204">
        <label>modm::bme280data::DataDouble</label>
        <link refid="classmodm_1_1bme280data_1_1_data_double"/>
        <childnode refid="205" relation="public-inheritance">
        </childnode>
      </node>
      <node id="205">
        <label>modm::bme280data::DataBase</label>
        <link refid="structmodm_1_1bme280data_1_1_data_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="208">
        <label>modm::bme280data::Calibration</label>
        <link refid="structmodm_1_1bme280data_1_1_calibration"/>
      </node>
      <node id="206">
        <label>modm::bme280data::DataDouble</label>
        <link refid="classmodm_1_1bme280data_1_1_data_double"/>
        <childnode refid="207" relation="public-inheritance">
        </childnode>
      </node>
      <node id="207">
        <label>modm::bme280data::DataBase</label>
        <link refid="structmodm_1_1bme280data_1_1_data_base"/>
        <childnode refid="208" relation="usage">
          <edgelabel>calibration</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" line="206" column="1" bodyfile="/home/nicolai/Documents/DanStar/Software-dolken/modm-prebuilt/modm/src/modm/driver/pressure/bme280_data.hpp" bodystart="204" bodyend="251"/>
    <listofallmembers>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1a23fe80c17caec43eaad2406d0eaa9fcb" prot="protected" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>calculateCalibratedHumidity</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1a5a44df2c82e293b3d68765a909d17f66" prot="protected" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>calculateCalibratedPressure</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1a480ed576d710b707eca0e5160003e694" prot="protected" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>calculateCalibratedTemperature</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1acb5d5b69a96a4f366a00315f5220ecdb" prot="private" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>calibratedHumidityDouble</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1afa7f21e495319a2279b5a408138ff5da" prot="private" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>calibratedPressureDouble</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1aac1f00ecd2a380cdbf5c5c17c0216a20" prot="private" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>calibratedTemperatureDouble</name></member>
      <member refid="structmodm_1_1bme280data_1_1_data_base_1ac44f0ec1d448d956eac1ff07f0b50fb6" prot="protected" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>calibration</name></member>
      <member refid="structmodm_1_1bme280data_1_1_data_base_1a5919a333b7d0dd374c8513b6cb3ec2dd" prot="public" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>DataBase</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1aeee0fe0ecb89dda6eba2161fdde4f581" prot="public" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>DataDouble</name></member>
      <member refid="structmodm_1_1bme280data_1_1_data_base_1a87b2e5f8ef99cfb0482aefdf681333ae" prot="public" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>getCalibration</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1a92d3a1d37105358e0e3a06d93858d0c9" prot="public" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>getHumidity</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1afb42768ce245af8ff51b42d8b85f37bb" prot="public" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>getPressure</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1a4bc97d81246111d106313e8735916f30" prot="public" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>getTemperature</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1a12624d2e936ba2012f32d172044e1aea" prot="public" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>getTemperature</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1a695951b5e0e1fcbcb66404c140d2c26a" prot="public" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>getTemperature</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1a1ae98b984637dde398efdbf231bfd47b" prot="public" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>getTemperature</name></member>
      <member refid="structmodm_1_1bme280data_1_1_data_base_1af6b6b2f160ccc5a701e8a4c52df0c77ba886b210636a5897aa0db0fd8e8539b87" prot="protected" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>HUMIDITY_CALCULATED</name></member>
      <member refid="structmodm_1_1bme280data_1_1_data_base_1a8dc2153aac5cce57c51cab197f9a2853" prot="protected" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>meta</name></member>
      <member refid="structmodm_1_1bme280data_1_1_data_base_1af6b6b2f160ccc5a701e8a4c52df0c77ba50387e1b4919c419733dfaacf24e8a02" prot="protected" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>PRESSURE_CALCULATED</name></member>
      <member refid="structmodm_1_1bme280data_1_1_data_base_1a80c9b71642ef23dc2c987662ce0111d7" prot="protected" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>raw</name></member>
      <member refid="structmodm_1_1bme280data_1_1_data_base_1a26938923b1531ea6d450104d3e8752e0" prot="public" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>rawHumidityTouched</name></member>
      <member refid="structmodm_1_1bme280data_1_1_data_base_1aa82be88305b961c19c11f29cadfe0cb7" prot="public" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>rawPressureTouched</name></member>
      <member refid="structmodm_1_1bme280data_1_1_data_base_1a976d4ce1a1e6654bafdbb21cbb35d3e2" prot="public" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>rawTemperatureTouched</name></member>
      <member refid="classmodm_1_1bme280data_1_1_data_double_1ae21781db23074ad4e5e006843faf2031" prot="private" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>t_fine</name></member>
      <member refid="structmodm_1_1bme280data_1_1_data_base_1af6b6b2f160ccc5a701e8a4c52df0c77bab0dbf776fd00b286348c145b3424a77a" prot="protected" virt="non-virtual"><scope>modm::bme280data::DataDouble</scope><name>TEMPERATURE_CALCULATED</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
